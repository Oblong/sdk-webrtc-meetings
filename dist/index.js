module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var RTCManager = __webpack_require__(/*! ./src/rtc-manager */ \"./src/rtc-manager.js\");\n\nvar RTCClient = __webpack_require__(/*! ./src/rtc-client */ \"./src/rtc-client.js\");\n\nvar RTCRoster = __webpack_require__(/*! ./src/rtc-roster */ \"./src/rtc-roster.js\");\n\nvar defaultRTCParams = {\n  peerConfig: {\n    receiveMedia: {\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true\n    },\n    peerConnectionConfig: {\n      iceServers: [],\n      forceTurn: false\n    },\n    peerConnectionConstraints: {\n      optional: [{\n        DtlsSrtpKeyAgreement: true\n      }]\n    }\n  }\n};\nmodule.exports = {\n  defaultRTCParams: defaultRTCParams,\n  RTCClient: RTCClient,\n  RTCManager: RTCManager,\n  RTCRoster: RTCRoster\n};\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/after/index.js":
/*!*************************************!*\
  !*** ./node_modules/after/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}\n\n//# sourceURL=webpack:///./node_modules/after/index.js?");

/***/ }),

/***/ "./node_modules/arraybuffer.slice/index.js":
/*!*************************************************!*\
  !*** ./node_modules/arraybuffer.slice/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};\n\n//# sourceURL=webpack:///./node_modules/arraybuffer.slice/index.js?");

/***/ }),

/***/ "./node_modules/attachmediastream/attachmediastream.js":
/*!*************************************************************!*\
  !*** ./node_modules/attachmediastream/attachmediastream.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var adapter = __webpack_require__(/*! webrtc-adapter */ \"./node_modules/webrtc-adapter/src/js/adapter_core.js\");\n\nmodule.exports = function (stream, el, options) {\n  var item;\n  var element = el;\n  var opts = {\n    autoplay: true,\n    mirror: false,\n    muted: false,\n    audio: false,\n    disableContextMenu: false\n  };\n\n  if (options) {\n    for (item in options) {\n      opts[item] = options[item];\n    }\n  }\n\n  if (!element) {\n    element = document.createElement(opts.audio ? 'audio' : 'video');\n  } else if (element.tagName.toLowerCase() === 'audio') {\n    opts.audio = true;\n  }\n\n  if (opts.disableContextMenu) {\n    element.oncontextmenu = function (e) {\n      e.preventDefault();\n    };\n  }\n\n  if (opts.autoplay) element.autoplay = 'autoplay';\n  if (opts.muted) element.muted = true;\n\n  if (!opts.audio && opts.mirror) {\n    ['', 'moz', 'webkit', 'o', 'ms'].forEach(function (prefix) {\n      var styleName = prefix ? prefix + 'Transform' : 'transform';\n      element.style[styleName] = 'scaleX(-1)';\n    });\n  }\n\n  if (adapter.browserDetails.browser === 'safari') {\n    element.setAttribute('playsinline', true);\n  }\n\n  element.srcObject = stream;\n  return element;\n};\n\n//# sourceURL=webpack:///./node_modules/attachmediastream/attachmediastream.js?");

/***/ }),

/***/ "./node_modules/backbone/backbone.js":
/*!*******************************************!*\
  !*** ./node_modules/backbone/backbone.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//     Backbone.js 1.3.3\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n(function (factory) {\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) == 'object' && self.self === self && self || (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == 'object' && global.global === global && global; // Set up Backbone appropriately for the environment. Start with AMD.\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/backbone/node_modules/underscore/underscore.js\"), __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"), exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else { var _, $; }\n})(function (root, Backbone, _, $) {\n  // Initial Setup\n  // -------------\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone; // Create a local reference to a common array method we'll want to use later.\n\n  var _slice = Array.prototype.slice; // Current version of the library. Keep in sync with `package.json`.\n\n  Backbone.VERSION = '1.3.3'; // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n\n  Backbone.$ = $; // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n\n  Backbone.noConflict = function () {\n    root.Backbone = previousBackbone;\n    return this;\n  }; // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n\n\n  Backbone.emulateHTTP = false; // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n\n  Backbone.emulateJSON = false; // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n\n  var addMethod = function addMethod(length, method, attribute) {\n    switch (length) {\n      case 1:\n        return function () {\n          return _[method](this[attribute]);\n        };\n\n      case 2:\n        return function (value) {\n          return _[method](this[attribute], value);\n        };\n\n      case 3:\n        return function (iteratee, context) {\n          return _[method](this[attribute], cb(iteratee, this), context);\n        };\n\n      case 4:\n        return function (iteratee, defaultVal, context) {\n          return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n        };\n\n      default:\n        return function () {\n          var args = _slice.call(arguments);\n\n          args.unshift(this[attribute]);\n          return _[method].apply(_, args);\n        };\n    }\n  };\n\n  var addUnderscoreMethods = function addUnderscoreMethods(Class, methods, attribute) {\n    _.each(methods, function (length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  }; // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n\n\n  var cb = function cb(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function (model) {\n      return model.get(iteratee);\n    };\n    return iteratee;\n  };\n\n  var modelMatcher = function modelMatcher(attrs) {\n    var matcher = _.matches(attrs);\n\n    return function (model) {\n      return matcher(model.attributes);\n    };\n  }; // Backbone.Events\n  // ---------------\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n\n\n  var Events = Backbone.Events = {}; // Regular expression used to split event strings.\n\n  var eventSplitter = /\\s+/; // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n\n  var eventsApi = function eventsApi(iteratee, events, name, callback, opts) {\n    var i = 0,\n        names;\n\n    if (name && _typeof(name) === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n\n      for (names = _.keys(name); i < names.length; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n\n    return events;\n  }; // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n\n\n  Events.on = function (name, callback, context) {\n    return internalOn(this, name, callback, context);\n  }; // Guard the `listening` argument from the public API.\n\n\n  var internalOn = function internalOn(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  }; // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n\n\n  Events.listenTo = function (obj, name, callback) {\n    if (!obj) return this;\n\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id]; // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n\n      listening = listeningTo[id] = {\n        obj: obj,\n        objId: id,\n        id: thisId,\n        listeningTo: listeningTo,\n        count: 0\n      };\n    } // Bind callbacks on obj, and keep track of them on listening.\n\n\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  }; // The reducing API that adds a callback to the `events` object.\n\n\n  var onApi = function onApi(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context,\n          ctx = options.ctx,\n          listening = options.listening;\n      if (listening) listening.count++;\n      handlers.push({\n        callback: callback,\n        context: context,\n        ctx: context || ctx,\n        listening: listening\n      });\n    }\n\n    return events;\n  }; // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n\n\n  Events.off = function (name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  }; // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n\n\n  Events.stopListening = function (obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]]; // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n\n      if (!listening) break;\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  }; // The reducing API that removes a callback from the `events` object.\n\n\n  var offApi = function offApi(events, name, callback, options) {\n    if (!events) return;\n    var i = 0,\n        listening;\n    var context = options.context,\n        listeners = options.listeners; // Delete all events listeners and \"drop\" events.\n\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name]; // Bail out if there are no events stored.\n\n      if (!handlers) break; // Replace events if there are any remaining.  Otherwise, clean up.\n\n      var remaining = [];\n\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n\n        if (callback && callback !== handler.callback && callback !== handler.callback._callback || context && context !== handler.context) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      } // Update tail event if the list has any events.  Otherwise, clean up.\n\n\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  }; // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n\n\n  Events.once = function (name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  }; // Inversion-of-control versions of `once`.\n\n\n  Events.listenToOnce = function (obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  }; // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n\n\n  var onceMap = function onceMap(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function () {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n\n      once._callback = callback;\n    }\n\n    return map;\n  }; // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n\n\n  Events.trigger = function (name) {\n    if (!this._events) return this;\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      args[i] = arguments[i + 1];\n    }\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  }; // Handles triggering the appropriate event callbacks.\n\n\n  var triggerApi = function triggerApi(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n\n    return objEvents;\n  }; // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n\n\n  var triggerEvents = function triggerEvents(events, args) {\n    var ev,\n        i = -1,\n        l = events.length,\n        a1 = args[0],\n        a2 = args[1],\n        a3 = args[2];\n\n    switch (args.length) {\n      case 0:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx);\n        }\n\n        return;\n\n      case 1:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx, a1);\n        }\n\n        return;\n\n      case 2:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx, a1, a2);\n        }\n\n        return;\n\n      case 3:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n        }\n\n        return;\n\n      default:\n        while (++i < l) {\n          (ev = events[i]).callback.apply(ev.ctx, args);\n        }\n\n        return;\n    }\n  }; // Aliases for backwards compatibility.\n\n\n  Events.bind = Events.on;\n  Events.unbind = Events.off; // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n\n  _.extend(Backbone, Events); // Backbone.Model\n  // --------------\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n\n\n  var Model = Backbone.Model = function (attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n\n    var defaults = _.result(this, 'defaults');\n\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  }; // Attach all inheritable methods to the Model prototype.\n\n\n  _.extend(Model.prototype, Events, {\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n    // The value returned during the last failed validation.\n    validationError: null,\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n    // Return a copy of the model's `attributes` object.\n    toJSON: function toJSON(options) {\n      return _.clone(this.attributes);\n    },\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function sync() {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Get the value of an attribute.\n    get: function get(attr) {\n      return this.attributes[attr];\n    },\n    // Get the HTML-escaped value of an attribute.\n    escape: function escape(attr) {\n      return _.escape(this.get(attr));\n    },\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function has(attr) {\n      return this.get(attr) != null;\n    },\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function matches(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function set(key, val, options) {\n      if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n      var attrs;\n\n      if (_typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {}); // Run validation.\n\n      if (!this._validate(attrs, options)) return false; // Extract attributes and options.\n\n      var unset = options.unset;\n      var silent = options.silent;\n      var changes = [];\n      var changing = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev = this._previousAttributes; // For each `set` attribute, update or delete the current value.\n\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n\n        unset ? delete current[attr] : current[attr] = val;\n      } // Update the `id`.\n\n\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute); // Trigger all relevant attribute changes.\n\n      if (!silent) {\n        if (changes.length) this._pending = options;\n\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      } // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n\n\n      if (changing) return this;\n\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function unset(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function clear(options) {\n      var attrs = {};\n\n      for (var key in this.attributes) {\n        attrs[key] = void 0;\n      }\n\n      return this.set(attrs, _.extend({}, options, {\n        unset: true\n      }));\n    },\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function hasChanged(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function changedAttributes(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n\n      return _.size(changed) ? changed : false;\n    },\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function previous(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function previousAttributes() {\n      return _.clone(this._previousAttributes);\n    },\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function fetch(options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var model = this;\n      var success = options.success;\n\n      options.success = function (resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function save(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n\n      if (key == null || _typeof(key) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({\n        validate: true,\n        parse: true\n      }, options);\n      var wait = options.wait; // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      } // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n\n\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n\n      options.success = function (resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n\n      wrapError(this, options); // Set temporary attributes if `{wait: true}` to properly find new ids.\n\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options); // Restore attributes.\n\n      this.attributes = attributes;\n      return xhr;\n    },\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function destroy(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function destroy() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function (resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n\n      if (!wait) destroy();\n      return xhr;\n    },\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function url() {\n      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function parse(resp, options) {\n      return resp;\n    },\n    // Create a new model with identical attributes to this one.\n    clone: function clone() {\n      return new this.constructor(this.attributes);\n    },\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function isNew() {\n      return !this.has(this.idAttribute);\n    },\n    // Check if the model is currently in a valid state.\n    isValid: function isValid(options) {\n      return this._validate({}, _.extend({}, options, {\n        validate: true\n      }));\n    },\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function _validate(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {\n        validationError: error\n      }));\n      return false;\n    }\n  }); // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n\n\n  var modelMethods = {\n    keys: 1,\n    values: 1,\n    pairs: 1,\n    invert: 1,\n    pick: 0,\n    omit: 0,\n    chain: 1,\n    isEmpty: 1\n  }; // Mix in each Underscore method as a proxy to `Model#attributes`.\n\n  addUnderscoreMethods(Model, modelMethods, 'attributes'); // Backbone.Collection\n  // -------------------\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n\n  var Collection = Backbone.Collection = function (models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n\n    this._reset();\n\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({\n      silent: true\n    }, options));\n  }; // Default options for `Collection#set`.\n\n\n  var setOptions = {\n    add: true,\n    remove: true,\n    merge: true\n  };\n  var addOptions = {\n    add: true,\n    remove: false\n  }; // Splices `insert` into `array` at index `at`.\n\n  var splice = function splice(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n\n    for (i = 0; i < tail.length; i++) {\n      tail[i] = array[i + at];\n    }\n\n    for (i = 0; i < length; i++) {\n      array[i + at] = insert[i];\n    }\n\n    for (i = 0; i < tail.length; i++) {\n      array[i + length + at] = tail[i];\n    }\n  }; // Define the Collection's inheritable methods.\n\n\n  _.extend(Collection.prototype, Events, {\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function toJSON(options) {\n      return this.map(function (model) {\n        return model.toJSON(options);\n      });\n    },\n    // Proxy `Backbone.sync` by default.\n    sync: function sync() {\n      return Backbone.sync.apply(this, arguments);\n    },\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function add(models, options) {\n      return this.set(models, _.extend({\n        merge: false\n      }, options, addOptions));\n    },\n    // Remove a model, or a list of models from the set.\n    remove: function remove(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var removed = this._removeModels(models, options);\n\n      if (!options.silent && removed.length) {\n        options.changes = {\n          added: [],\n          merged: [],\n          removed: removed\n        };\n        this.trigger('update', this, options);\n      }\n\n      return singular ? removed[0] : removed;\n    },\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function set(models, options) {\n      if (models == null) return;\n      options = _.extend({}, setOptions, options);\n\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null; // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n\n      var model, i;\n\n      for (i = 0; i < models.length; i++) {\n        model = models[i]; // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n\n        var existing = this.get(model);\n\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n\n          models[i] = existing; // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n\n          if (model) {\n            toAdd.push(model);\n\n            this._addReference(model, options);\n\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      } // Remove stale models.\n\n\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n\n        if (toRemove.length) this._removeModels(toRemove, options);\n      } // See if sorting is needed, update `length` and splice in new models.\n\n\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function (m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      } // Silently sort the collection if appropriate.\n\n\n      if (sort) this.sort({\n        silent: true\n      }); // Unless silenced, it's time to fire all appropriate add/sort/update events.\n\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n\n        if (sort || orderChanged) this.trigger('sort', this, options);\n\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      } // Return the added (or merged) model (or models).\n\n\n      return singular ? models[0] : models;\n    },\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function reset(models, options) {\n      options = options ? _.clone(options) : {};\n\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n\n      options.previousModels = this.models;\n\n      this._reset();\n\n      models = this.add(models, _.extend({\n        silent: true\n      }, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n    // Add a model to the end of the collection.\n    push: function push(model, options) {\n      return this.add(model, _.extend({\n        at: this.length\n      }, options));\n    },\n    // Remove a model from the end of the collection.\n    pop: function pop(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n    // Add a model to the beginning of the collection.\n    unshift: function unshift(model, options) {\n      return this.add(model, _.extend({\n        at: 0\n      }, options));\n    },\n    // Remove a model from the beginning of the collection.\n    shift: function shift(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n    // Slice out a sub-array of models from the collection.\n    slice: function slice() {\n      return _slice.apply(this.models, arguments);\n    },\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function get(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[this.modelId(obj.attributes || obj)] || obj.cid && this._byId[obj.cid];\n    },\n    // Returns `true` if the model is in the collection.\n    has: function has(obj) {\n      return this.get(obj) != null;\n    },\n    // Get the model at the given index.\n    at: function at(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function where(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function findWhere(attrs) {\n      return this.where(attrs, true);\n    },\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function sort(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this); // Run sort based on type of `comparator`.\n\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n    // Pluck an attribute from each model in the collection.\n    pluck: function pluck(attr) {\n      return this.map(attr + '');\n    },\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function fetch(options) {\n      options = _.extend({\n        parse: true\n      }, options);\n      var success = options.success;\n      var collection = this;\n\n      options.success = function (resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function create(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n\n      options.success = function (m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n\n      model.save(null, options);\n      return model;\n    },\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function parse(resp, options) {\n      return resp;\n    },\n    // Create a new collection with an identical list of models as this one.\n    clone: function clone() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n    // Define how to uniquely identify models in the collection.\n    modelId: function modelId(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function _reset() {\n      this.length = 0;\n      this.models = [];\n      this._byId = {};\n    },\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function _prepareModel(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n    // Internal method called by both remove and set.\n    _removeModels: function _removeModels(models, options) {\n      var removed = [];\n\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--; // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n\n        this._removeReference(model, options);\n      }\n\n      return removed;\n    },\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function _isModel(model) {\n      return model instanceof Model;\n    },\n    // Internal method to create a model's ties to a collection.\n    _addReference: function _addReference(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function _removeReference(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function _onModelEvent(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n\n      this.trigger.apply(this, arguments);\n    }\n  }); // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n\n\n  var collectionMethods = {\n    forEach: 3,\n    each: 3,\n    map: 3,\n    collect: 3,\n    reduce: 0,\n    foldl: 0,\n    inject: 0,\n    reduceRight: 0,\n    foldr: 0,\n    find: 3,\n    detect: 3,\n    filter: 3,\n    select: 3,\n    reject: 3,\n    every: 3,\n    all: 3,\n    some: 3,\n    any: 3,\n    include: 3,\n    includes: 3,\n    contains: 3,\n    invoke: 0,\n    max: 3,\n    min: 3,\n    toArray: 1,\n    size: 1,\n    first: 3,\n    head: 3,\n    take: 3,\n    initial: 3,\n    rest: 3,\n    tail: 3,\n    drop: 3,\n    last: 3,\n    without: 0,\n    difference: 0,\n    indexOf: 3,\n    shuffle: 1,\n    lastIndexOf: 3,\n    isEmpty: 1,\n    chain: 1,\n    sample: 3,\n    partition: 3,\n    groupBy: 3,\n    countBy: 3,\n    sortBy: 3,\n    indexBy: 3,\n    findIndex: 3,\n    findLastIndex: 3\n  }; // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  addUnderscoreMethods(Collection, collectionMethods, 'models'); // Backbone.View\n  // -------------\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n\n  var View = Backbone.View = function (options) {\n    this.cid = _.uniqueId('view');\n\n    _.extend(this, _.pick(options, viewOptions));\n\n    this._ensureElement();\n\n    this.initialize.apply(this, arguments);\n  }; // Cached regex to split keys for `delegate`.\n\n\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/; // List of view options to be set as properties.\n\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events']; // Set up all inheritable **Backbone.View** properties and methods.\n\n  _.extend(View.prototype, Events, {\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function $(selector) {\n      return this.$el.find(selector);\n    },\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function render() {\n      return this;\n    },\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function remove() {\n      this._removeElement();\n\n      this.stopListening();\n      return this;\n    },\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function _removeElement() {\n      this.$el.remove();\n    },\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function setElement(element) {\n      this.undelegateEvents();\n\n      this._setElement(element);\n\n      this.delegateEvents();\n      return this;\n    },\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function _setElement(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function delegateEvents(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n\n      return this;\n    },\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function delegate(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function undelegateEvents() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function undelegate(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function _createElement(tagName) {\n      return document.createElement(tagName);\n    },\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function _ensureElement() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function _setAttributes(attributes) {\n      this.$el.attr(attributes);\n    }\n  }); // Backbone.sync\n  // -------------\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n\n\n  Backbone.sync = function (method, model, options) {\n    var type = methodMap[method]; // Default options, unless specified.\n\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    }); // Default JSON-request options.\n\n\n    var params = {\n      type: type,\n      dataType: 'json'\n    }; // Ensure that we have a URL.\n\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    } // Ensure that we have the appropriate request data.\n\n\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    } // For older servers, emulate JSON by encoding the request into an HTML-form.\n\n\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {\n        model: params.data\n      } : {};\n    } // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n\n\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n\n      options.beforeSend = function (xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    } // Don't process data on a non-GET request.\n\n\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    } // Pass along `textStatus` and `errorThrown` from jQuery.\n\n\n    var error = options.error;\n\n    options.error = function (xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    }; // Make the request, allowing the user to override any Ajax options.\n\n\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  }; // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n\n\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  }; // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n\n  Backbone.ajax = function () {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  }; // Backbone.Router\n  // ---------------\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n\n\n  var Router = Backbone.Router = function (options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n\n    this._bindRoutes();\n\n    this.initialize.apply(this, arguments);\n  }; // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n\n\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam = /(\\(\\?)?:\\w+/g;\n  var splatParam = /\\*\\w+/g;\n  var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g; // Set up all inheritable **Backbone.Router** properties and methods.\n\n  _.extend(Router.prototype, Events, {\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function route(_route, name, callback) {\n      if (!_.isRegExp(_route)) _route = this._routeToRegExp(_route);\n\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(_route, function (fragment) {\n        var args = router._extractParameters(_route, fragment);\n\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function execute(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function navigate(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function _bindRoutes() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n\n      var route,\n          routes = _.keys(this.routes);\n\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function _routeToRegExp(route) {\n      route = route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      }).replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function _extractParameters(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function (param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n  }); // Backbone.History\n  // ----------------\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n\n\n  var History = Backbone.History = function () {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this); // Ensure that `History` can be used outside of the browser.\n\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  }; // Cached regex for stripping a leading hash/slash and trailing space.\n\n\n  var routeStripper = /^[#\\/]|\\s+$/g; // Cached regex for stripping leading and trailing slashes.\n\n  var rootStripper = /^\\/+|\\/+$/g; // Cached regex for stripping urls of hash.\n\n  var pathStripper = /#.*$/; // Has the history handling already been started?\n\n  History.started = false; // Set up all inheritable **Backbone.History** properties and methods.\n\n  _.extend(History.prototype, Events, {\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n    // Are we at the app root?\n    atRoot: function atRoot() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n    // Does the pathname match the root?\n    matchRoot: function matchRoot() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function decodeFragment(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function getSearch() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function getHash(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n    // Get the pathname and search params, without the root.\n    getPath: function getPath() {\n      var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function getFragment(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n\n      return fragment.replace(routeStripper, '');\n    },\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function start(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true; // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n\n      this.options = _.extend({\n        root: '/'\n      }, this.options, options);\n      this.root = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState = !!this.options.pushState;\n      this._hasPushState = !!(this.history && this.history.pushState);\n      this._usePushState = this._wantsPushState && this._hasPushState;\n      this.fragment = this.getFragment(); // Normalize root to always include a leading and trailing slash.\n\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/'); // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n\n      if (this._wantsHashChange && this._wantsPushState) {\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath()); // Return immediately as browser will do redirect to new url\n\n          return true; // Or if we've started out with a hash-based route, but we're currently\n          // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {\n            replace: true\n          });\n        }\n      } // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n\n\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body; // Using `appendChild` will throw on IE < 9 if the document is not ready.\n\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      } // Add a cross-platform `addEventListener` shim for older browsers.\n\n\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      }; // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n\n\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function stop() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      }; // Remove window listeners.\n\n\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      } // Clean up the iframe if necessary.\n\n\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      } // Some environments will throw when clearing an undefined interval.\n\n\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function route(_route2, callback) {\n      this.handlers.unshift({\n        route: _route2,\n        callback: callback\n      });\n    },\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function checkUrl(e) {\n      var current = this.getFragment(); // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function loadUrl(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function (handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function navigate(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {\n        trigger: !!options\n      }; // Normalize the fragment.\n\n      fragment = this.getFragment(fragment || ''); // Don't include a trailing slash on the root.\n\n      var rootPath = this.root;\n\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n\n      var url = rootPath + fragment; // Strip the hash and decode for matching.\n\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n      if (this.fragment === fragment) return;\n      this.fragment = fragment; // If pushState is available, we use it to set the fragment as a real URL.\n\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url); // If hash changes haven't been explicitly disabled, update the hash\n        // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow; // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        } // If you've told us that you explicitly don't want fallback hashchange-\n        // based history, then `navigate` becomes a page refresh.\n\n      } else {\n        return this.location.assign(url);\n      }\n\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function _updateHash(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n  }); // Create the default Backbone.history.\n\n\n  Backbone.history = new History(); // Helpers\n  // -------\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n\n  var extend = function extend(protoProps, staticProps) {\n    var parent = this;\n    var child; // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function child() {\n        return parent.apply(this, arguments);\n      };\n    } // Add static properties to the constructor function, if supplied.\n\n\n    _.extend(child, parent, staticProps); // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n\n\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child; // Set a convenience property in case the parent's prototype is needed\n    // later.\n\n    child.__super__ = parent.prototype;\n    return child;\n  }; // Set up inheritance for the model, collection, router, view and history.\n\n\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend; // Throw an error when a URL is needed, and none is supplied.\n\n  var urlError = function urlError() {\n    throw new Error('A \"url\" property or function must be specified');\n  }; // Wrap an optional error callback with a fallback error event.\n\n\n  var wrapError = function wrapError(model, options) {\n    var error = options.error;\n\n    options.error = function (resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/backbone/backbone.js?");

/***/ }),

/***/ "./node_modules/backbone/node_modules/underscore/underscore.js":
/*!*********************************************************************!*\
  !*** ./node_modules/backbone/node_modules/underscore/underscore.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n(function () {\n  // Baseline setup\n  // --------------\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) == 'object' && self.self === self && self || (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == 'object' && global.global === global && global || this || {}; // Save the previous value of the `_` variable.\n\n  var previousUnderscore = root._; // Save bytes in the minified (but not gzipped) version:\n\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null; // Create quick reference variables for speed access to core prototypes.\n\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create; // Naked function reference for surrogate-prototype-swapping.\n\n  var Ctor = function Ctor() {}; // Create a safe reference to the Underscore object for use below.\n\n\n  var _ = function _(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  }; // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n\n\n  if ( true && !exports.nodeType) {\n    if ( true && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n\n    exports._ = _;\n  } else {\n    root._ = _;\n  } // Current version.\n\n\n  _.VERSION = '1.9.1'; // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n\n  var optimizeCb = function optimizeCb(func, context, argCount) {\n    if (context === void 0) return func;\n\n    switch (argCount == null ? 3 : argCount) {\n      case 1:\n        return function (value) {\n          return func.call(context, value);\n        };\n      // The 2-argument case is omitted because we’re not using it.\n\n      case 3:\n        return function (value, index, collection) {\n          return func.call(context, value, index, collection);\n        };\n\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(context, accumulator, value, index, collection);\n        };\n    }\n\n    return function () {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee; // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n\n  var cb = function cb(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  }; // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n\n\n  _.iteratee = builtinIteratee = function builtinIteratee(value, context) {\n    return cb(value, context, Infinity);\n  }; // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n\n\n  var restArguments = function restArguments(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function () {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n\n      switch (startIndex) {\n        case 0:\n          return func.call(this, rest);\n\n        case 1:\n          return func.call(this, arguments[0], rest);\n\n        case 2:\n          return func.call(this, arguments[0], arguments[1], rest);\n      }\n\n      var args = Array(startIndex + 1);\n\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  }; // An internal function for creating a new object that inherits from another.\n\n\n  var baseCreate = function baseCreate(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor();\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function shallowProperty(key) {\n    return function (obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function has(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  };\n\n  var deepGet = function deepGet(obj, path) {\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n\n    return length ? obj : void 0;\n  }; // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\n\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n\n  var isArrayLike = function isArrayLike(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  }; // Collection Functions\n  // --------------------\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n\n\n  _.each = _.forEach = function (obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n\n    return obj;\n  }; // Return the results of applying the iteratee to each element.\n\n\n  _.map = _.collect = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Create a reducing function iterating left or right.\n\n\n  var createReduce = function createReduce(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function reducer(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n\n      return memo;\n    };\n\n    return function (obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  }; // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n\n\n  _.reduce = _.foldl = _.inject = createReduce(1); // The right-associative version of reduce, also known as `foldr`.\n\n  _.reduceRight = _.foldr = createReduce(-1); // Return the first value which passes a truth test. Aliased as `detect`.\n\n  _.find = _.detect = function (obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  }; // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n\n\n  _.filter = _.select = function (obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n\n    _.each(obj, function (value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n\n    return results;\n  }; // Return all the elements for which a truth test fails.\n\n\n  _.reject = function (obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  }; // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n\n\n  _.every = _.all = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n\n    return true;\n  }; // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n\n\n  _.some = _.any = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n\n    return false;\n  }; // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n\n\n  _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  }; // Invoke a method (with arguments) on every item in a collection.\n\n\n  _.invoke = restArguments(function (obj, path, args) {\n    var contextPath, func;\n\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n\n    return _.map(obj, function (context) {\n      var method = func;\n\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n\n        if (context == null) return void 0;\n        method = context[path];\n      }\n\n      return method == null ? method : method.apply(context, args);\n    });\n  }); // Convenience version of a common use case of `map`: fetching a property.\n\n  _.pluck = function (obj, key) {\n    return _.map(obj, _.property(key));\n  }; // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n\n\n  _.where = function (obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  }; // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n\n\n  _.findWhere = function (obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  }; // Return the maximum element (or element-based computation).\n\n\n  _.max = function (obj, iteratee, context) {\n    var result = -Infinity,\n        lastComputed = -Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && _typeof(obj[0]) != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Return the minimum element (or element-based computation).\n\n\n  _.min = function (obj, iteratee, context) {\n    var result = Infinity,\n        lastComputed = Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && _typeof(obj[0]) != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Shuffle a collection.\n\n\n  _.shuffle = function (obj) {\n    return _.sample(obj, Infinity);\n  }; // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n\n\n  _.sample = function (obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n\n    return sample.slice(0, n);\n  }; // Sort the object's values by a criterion produced by an iteratee.\n\n\n  _.sortBy = function (obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function (value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n\n      return left.index - right.index;\n    }), 'value');\n  }; // An internal function used for aggregate \"group by\" operations.\n\n\n  var group = function group(behavior, partition) {\n    return function (obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n\n      return result;\n    };\n  }; // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n\n\n  _.groupBy = group(function (result, value, key) {\n    if (has(result, key)) result[key].push(value);else result[key] = [value];\n  }); // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n\n  _.indexBy = group(function (result, value, key) {\n    result[key] = value;\n  }); // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n\n  _.countBy = group(function (result, value, key) {\n    if (has(result, key)) result[key]++;else result[key] = 1;\n  });\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g; // Safely create a real, live array from anything iterable.\n\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  }; // Return the number of elements in an object.\n\n\n  _.size = function (obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  }; // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n\n\n  _.partition = group(function (result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true); // Array Functions\n  // ---------------\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n\n  _.first = _.head = _.take = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  }; // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n\n\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  }; // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n\n\n  _.last = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n\n\n  _.rest = _.tail = _.drop = function (array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  }; // Trim out all falsy values from an array.\n\n\n  _.compact = function (array) {\n    return _.filter(array, Boolean);\n  }; // Internal implementation of a recursive `flatten` function.\n\n\n  var flatten = function flatten(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0,\n              len = value.length;\n\n          while (j < len) {\n            output[idx++] = value[j++];\n          }\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n\n    return output;\n  }; // Flatten out an array, either recursively (by default), or just one level.\n\n\n  _.flatten = function (array, shallow) {\n    return flatten(array, shallow, false);\n  }; // Return a version of the array that does not contain the specified value(s).\n\n\n  _.without = restArguments(function (array, otherArrays) {\n    return _.difference(array, otherArrays);\n  }); // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n\n  _.uniq = _.unique = function (array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }; // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n\n\n  _.union = restArguments(function (arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  }); // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n\n  _.intersection = function (array) {\n    var result = [];\n    var argsLength = arguments.length;\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n\n      if (j === argsLength) result.push(item);\n    }\n\n    return result;\n  }; // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n\n\n  _.difference = restArguments(function (array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function (value) {\n      return !_.contains(rest, value);\n    });\n  }); // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n\n  _.unzip = function (array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n\n    return result;\n  }; // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n\n\n  _.zip = restArguments(_.unzip); // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n\n  _.object = function (list, values) {\n    var result = {};\n\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n\n    return result;\n  }; // Generator function to create the findIndex and findLastIndex functions.\n\n\n  var createPredicateIndexFinder = function createPredicateIndexFinder(dir) {\n    return function (array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n\n      return -1;\n    };\n  }; // Returns the first index on an array-like that passes a predicate test.\n\n\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1); // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n\n  _.sortedIndex = function (array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0,\n        high = getLength(array);\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;\n    }\n\n    return low;\n  }; // Generator function to create the indexOf and lastIndexOf functions.\n\n\n  var createIndexFinder = function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function (array, item, idx) {\n      var i = 0,\n          length = getLength(array);\n\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n\n      return -1;\n    };\n  }; // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n\n\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex); // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\n  _.range = function (start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  }; // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n\n\n  _.chunk = function (array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0,\n        length = array.length;\n\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n\n    return result;\n  }; // Function (ahem) Functions\n  // ------------------\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n\n\n  var executeBound = function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  }; // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n\n\n  _.bind = restArguments(function (func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function (callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  }); // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n\n  _.partial = restArguments(function (func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n\n    var bound = function bound() {\n      var position = 0,\n          length = boundArgs.length;\n      var args = Array(length);\n\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n\n      while (position < arguments.length) {\n        args.push(arguments[position++]);\n      }\n\n      return executeBound(func, bound, this, this, args);\n    };\n\n    return bound;\n  });\n  _.partial.placeholder = _; // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n\n  _.bindAll = restArguments(function (obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  }); // Memoize an expensive function by storing its results.\n\n  _.memoize = function (func, hasher) {\n    var memoize = function memoize(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n\n    memoize.cache = {};\n    return memoize;\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  _.delay = restArguments(function (func, wait, args) {\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  }); // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n\n  _.defer = _.partial(_.delay, _, 1); // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\n  _.throttle = function (func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function later() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function throttled() {\n      var now = _.now();\n\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n\n    throttled.cancel = function () {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  }; // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n\n\n  _.debounce = function (func, wait, immediate) {\n    var timeout, result;\n\n    var later = function later(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function (args) {\n      if (timeout) clearTimeout(timeout);\n\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function () {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  }; // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n\n\n  _.wrap = function (func, wrapper) {\n    return _.partial(wrapper, func);\n  }; // Returns a negated version of the passed-in predicate.\n\n\n  _.negate = function (predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }; // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n\n\n  _.compose = function () {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n\n      while (i--) {\n        result = args[i].call(this, result);\n      }\n\n      return result;\n    };\n  }; // Returns a function that will only be executed on and after the Nth call.\n\n\n  _.after = function (times, func) {\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }; // Returns a function that will only be executed up to (but not including) the Nth call.\n\n\n  _.before = function (times, func) {\n    var memo;\n    return function () {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n\n      if (times <= 1) func = null;\n      return memo;\n    };\n  }; // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n\n\n  _.once = _.partial(_.before, 2);\n  _.restArguments = restArguments; // Object Functions\n  // ----------------\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\n  var hasEnumBug = !{\n    toString: null\n  }.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto; // Constructor is a special case.\n\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }; // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n\n\n  _.keys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n\n    for (var key in obj) {\n      if (has(obj, key)) keys.push(key);\n    } // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve all the property names of an object.\n\n\n  _.allKeys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n\n    for (var key in obj) {\n      keys.push(key);\n    } // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve the values of an object's properties.\n\n\n  _.values = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var values = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n\n    return values;\n  }; // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n\n\n  _.mapObject = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n\n\n  _.pairs = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var pairs = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n\n    return pairs;\n  }; // Invert the keys and values of an object. The values must be serializable.\n\n\n  _.invert = function (obj) {\n    var result = {};\n\n    var keys = _.keys(obj);\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n\n    return result;\n  }; // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n\n\n  _.functions = _.methods = function (obj) {\n    var names = [];\n\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n\n    return names.sort();\n  }; // An internal function for creating assigner functions.\n\n\n  var createAssigner = function createAssigner(keysFunc, defaults) {\n    return function (obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n\n      return obj;\n    };\n  }; // Extend a given object with all the properties in passed-in object(s).\n\n\n  _.extend = createAssigner(_.allKeys); // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\n  _.extendOwn = _.assign = createAssigner(_.keys); // Returns the first key on an object that passes a predicate test.\n\n  _.findKey = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = _.keys(obj),\n        key;\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  }; // Internal pick helper function to determine if `obj` has key `key`.\n\n\n  var keyInObj = function keyInObj(value, key, obj) {\n    return key in obj;\n  }; // Return a copy of the object only containing the whitelisted properties.\n\n\n  _.pick = restArguments(function (obj, keys) {\n    var result = {},\n        iteratee = keys[0];\n    if (obj == null) return result;\n\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n\n    return result;\n  }); // Return a copy of the object without the blacklisted properties.\n\n  _.omit = restArguments(function (obj, keys) {\n    var iteratee = keys[0],\n        context;\n\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n\n      iteratee = function iteratee(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n\n    return _.pick(obj, iteratee, context);\n  }); // Fill in a given object with default properties.\n\n  _.defaults = createAssigner(_.allKeys, true); // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n\n  _.create = function (prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  }; // Create a (shallow-cloned) duplicate of an object.\n\n\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }; // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n\n\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }; // Returns whether an object has a given set of `key:value` pairs.\n\n\n  _.isMatch = function (object, attrs) {\n    var keys = _.keys(attrs),\n        length = keys.length;\n\n    if (object == null) return !length;\n    var obj = Object(object);\n\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n\n    return true;\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  var eq, deepEq;\n\n  eq = function eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b; // `null` or `undefined` only equal to itself (strict comparison).\n\n    if (a == null || b == null) return false; // `NaN`s are equivalent, but non-reflexive.\n\n    if (a !== a) return b !== b; // Exhaust primitive checks\n\n    var type = _typeof(a);\n\n    if (type !== 'function' && type !== 'object' && _typeof(b) != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  deepEq = function deepEq(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]': // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b; // An `egal` comparison is performed for other numeric values.\n\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n\n    if (!areArrays) {\n      if (_typeof(a) != 'object' || _typeof(b) != 'object') return false; // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n\n      var aCtor = a.constructor,\n          bCtor = b.constructor;\n\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n        return false;\n      }\n    } // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n\n\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    } // Add the first object to the stack of traversed objects.\n\n\n    aStack.push(a);\n    bStack.push(b); // Recursively compare objects and arrays.\n\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false; // Deep compare the contents, ignoring non-numeric properties.\n\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a),\n          key;\n\n      length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.\n\n      if (_.keys(b).length !== length) return false;\n\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    } // Remove the first object from the stack of traversed objects.\n\n\n    aStack.pop();\n    bStack.pop();\n    return true;\n  }; // Perform a deep comparison to check if two objects are equal.\n\n\n  _.isEqual = function (a, b) {\n    return eq(a, b);\n  }; // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n\n\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  }; // Is a given value a DOM element?\n\n\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  }; // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n\n\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n  }; // Is a given variable an object?\n\n\n  _.isObject = function (obj) {\n    var type = _typeof(obj);\n\n    return type === 'function' || type === 'object' && !!obj;\n  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n\n\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function (name) {\n    _['is' + name] = function (obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  }); // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n\n\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return has(obj, 'callee');\n    };\n  } // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n\n\n  var nodelist = root.document && root.document.childNodes;\n\n  if ( true && (typeof Int8Array === \"undefined\" ? \"undefined\" : _typeof(Int8Array)) != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function (obj) {\n      return typeof obj == 'function' || false;\n    };\n  } // Is a given object a finite number?\n\n\n  _.isFinite = function (obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  }; // Is the given value `NaN`?\n\n\n  _.isNaN = function (obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  }; // Is a given value a boolean?\n\n\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  }; // Is a given value equal to null?\n\n\n  _.isNull = function (obj) {\n    return obj === null;\n  }; // Is a given variable undefined?\n\n\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  }; // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n\n\n  _.has = function (obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n\n      obj = obj[key];\n    }\n\n    return !!length;\n  }; // Utility Functions\n  // -----------------\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n\n\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  }; // Keep the identity function around for default iteratees.\n\n\n  _.identity = function (value) {\n    return value;\n  }; // Predicate-generating functions. Often useful outside of Underscore.\n\n\n  _.constant = function (value) {\n    return function () {\n      return value;\n    };\n  };\n\n  _.noop = function () {}; // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n\n\n  _.property = function (path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n\n    return function (obj) {\n      return deepGet(obj, path);\n    };\n  }; // Generates a function for a given object that returns a given property.\n\n\n  _.propertyOf = function (obj) {\n    if (obj == null) {\n      return function () {};\n    }\n\n    return function (path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  }; // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n\n\n  _.matcher = _.matches = function (attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function (obj) {\n      return _.isMatch(obj, attrs);\n    };\n  }; // Run a function **n** times.\n\n\n  _.times = function (n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n\n    for (var i = 0; i < n; i++) {\n      accum[i] = iteratee(i);\n    }\n\n    return accum;\n  }; // Return a random integer between min and max (inclusive).\n\n\n  _.random = function (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n\n    return min + Math.floor(Math.random() * (max - min + 1));\n  }; // A (possibly faster) way to get the current timestamp as an integer.\n\n\n  _.now = Date.now || function () {\n    return new Date().getTime();\n  }; // List of HTML entities for escaping.\n\n\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n\n  var unescapeMap = _.invert(escapeMap); // Functions for escaping and unescaping strings to/from HTML interpolation.\n\n\n  var createEscaper = function createEscaper(map) {\n    var escaper = function escaper(match) {\n      return map[match];\n    }; // Regexes for identifying a key that needs to be escaped.\n\n\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function (string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap); // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n\n  _.result = function (obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n\n    return obj;\n  }; // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n\n\n  var idCounter = 0;\n\n  _.uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  }; // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n\n\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  }; // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n\n  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    \"\\u2028\": 'u2028',\n    \"\\u2029\": 'u2029'\n  };\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function escapeChar(match) {\n    return '\\\\' + escapes[match];\n  }; // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n\n\n  _.template = function (text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      } // Adobe VMs need the match returned to produce the correct offset.\n\n\n      return match;\n    });\n    source += \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + 'return __p;\\n';\n    var render;\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function template(data) {\n      return render.call(this, data, _);\n    }; // Provide the compiled source as a convenience for precompilation.\n\n\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n    return template;\n  }; // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\n\n  _.chain = function (obj) {\n    var instance = _(obj);\n\n    instance._chain = true;\n    return instance;\n  }; // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  // Helper function to continue chaining intermediate results.\n\n\n  var chainResult = function chainResult(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  }; // Add your own custom functions to the Underscore object.\n\n\n  _.mixin = function (obj) {\n    _.each(_.functions(obj), function (name) {\n      var func = _[name] = obj[name];\n\n      _.prototype[name] = function () {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n\n    return _;\n  }; // Add all of the Underscore functions to the wrapper object.\n\n\n  _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  }); // Add all accessor Array functions to the wrapper.\n\n\n  _.each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  }); // Extracts the result from a wrapped and chained object.\n\n\n  _.prototype.value = function () {\n    return this._wrapped;\n  }; // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n\n\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function () {\n    return String(this._wrapped);\n  }; // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return _;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n})();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/backbone/node_modules/underscore/underscore.js?");

/***/ }),

/***/ "./node_modules/backo2/index.js":
/*!**************************************!*\
  !*** ./node_modules/backo2/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};\n\n//# sourceURL=webpack:///./node_modules/backo2/index.js?");

/***/ }),

/***/ "./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();\n\n//# sourceURL=webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  for (var i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/blob/index.js":
/*!************************************!*\
  !*** ./node_modules/blob/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      return buf;\n    }\n\n    return chunk;\n  });\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n\n;\n\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();\n\n//# sourceURL=webpack:///./node_modules/blob/index.js?");

/***/ }),

/***/ "./node_modules/bluebird/js/browser/bluebird.js":
/*!******************************************************!*\
  !*** ./node_modules/bluebird/js/browser/bluebird.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, global, setImmediate) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* @preserve\n * The MIT License (MIT)\n * \n * Copyright (c) 2013-2018 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n\n/**\n * bluebird build version 3.5.3\n * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each\n*/\n!function (e) {\n  if (\"object\" == ( false ? undefined : _typeof(exports)) && \"undefined\" != typeof module) module.exports = e();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else { var f; }\n}(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof _dereq_ == \"function\" && _dereq_;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof _dereq_ == \"function\" && _dereq_;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise) {\n        var SomePromiseArray = Promise._SomePromiseArray;\n\n        function any(promises) {\n          var ret = new SomePromiseArray(promises);\n          var promise = ret.promise();\n          ret.setHowMany(1);\n          ret.setUnwrap();\n          ret.init();\n          return promise;\n        }\n\n        Promise.any = function (promises) {\n          return any(promises);\n        };\n\n        Promise.prototype.any = function () {\n          return any(this);\n        };\n      };\n    }, {}],\n    2: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      var firstLineError;\n\n      try {\n        throw new Error();\n      } catch (e) {\n        firstLineError = e;\n      }\n\n      var schedule = _dereq_(\"./schedule\");\n\n      var Queue = _dereq_(\"./queue\");\n\n      var util = _dereq_(\"./util\");\n\n      function Async() {\n        this._customScheduler = false;\n        this._isTickUsed = false;\n        this._lateQueue = new Queue(16);\n        this._normalQueue = new Queue(16);\n        this._haveDrainedQueues = false;\n        this._trampolineEnabled = true;\n        var self = this;\n\n        this.drainQueues = function () {\n          self._drainQueues();\n        };\n\n        this._schedule = schedule;\n      }\n\n      Async.prototype.setScheduler = function (fn) {\n        var prev = this._schedule;\n        this._schedule = fn;\n        this._customScheduler = true;\n        return prev;\n      };\n\n      Async.prototype.hasCustomScheduler = function () {\n        return this._customScheduler;\n      };\n\n      Async.prototype.enableTrampoline = function () {\n        this._trampolineEnabled = true;\n      };\n\n      Async.prototype.disableTrampolineIfNecessary = function () {\n        if (util.hasDevTools) {\n          this._trampolineEnabled = false;\n        }\n      };\n\n      Async.prototype.haveItemsQueued = function () {\n        return this._isTickUsed || this._haveDrainedQueues;\n      };\n\n      Async.prototype.fatalError = function (e, isNode) {\n        if (isNode) {\n          process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) + \"\\n\");\n          process.exit(2);\n        } else {\n          this.throwLater(e);\n        }\n      };\n\n      Async.prototype.throwLater = function (fn, arg) {\n        if (arguments.length === 1) {\n          arg = fn;\n\n          fn = function fn() {\n            throw arg;\n          };\n        }\n\n        if (typeof setTimeout !== \"undefined\") {\n          setTimeout(function () {\n            fn(arg);\n          }, 0);\n        } else try {\n          this._schedule(function () {\n            fn(arg);\n          });\n        } catch (e) {\n          throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/MqrFmX\\n\");\n        }\n      };\n\n      function AsyncInvokeLater(fn, receiver, arg) {\n        this._lateQueue.push(fn, receiver, arg);\n\n        this._queueTick();\n      }\n\n      function AsyncInvoke(fn, receiver, arg) {\n        this._normalQueue.push(fn, receiver, arg);\n\n        this._queueTick();\n      }\n\n      function AsyncSettlePromises(promise) {\n        this._normalQueue._pushOne(promise);\n\n        this._queueTick();\n      }\n\n      if (!util.hasDevTools) {\n        Async.prototype.invokeLater = AsyncInvokeLater;\n        Async.prototype.invoke = AsyncInvoke;\n        Async.prototype.settlePromises = AsyncSettlePromises;\n      } else {\n        Async.prototype.invokeLater = function (fn, receiver, arg) {\n          if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n          } else {\n            this._schedule(function () {\n              setTimeout(function () {\n                fn.call(receiver, arg);\n              }, 100);\n            });\n          }\n        };\n\n        Async.prototype.invoke = function (fn, receiver, arg) {\n          if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n          } else {\n            this._schedule(function () {\n              fn.call(receiver, arg);\n            });\n          }\n        };\n\n        Async.prototype.settlePromises = function (promise) {\n          if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n          } else {\n            this._schedule(function () {\n              promise._settlePromises();\n            });\n          }\n        };\n      }\n\n      function _drainQueue(queue) {\n        while (queue.length() > 0) {\n          _drainQueueStep(queue);\n        }\n      }\n\n      function _drainQueueStep(queue) {\n        var fn = queue.shift();\n\n        if (typeof fn !== \"function\") {\n          fn._settlePromises();\n        } else {\n          var receiver = queue.shift();\n          var arg = queue.shift();\n          fn.call(receiver, arg);\n        }\n      }\n\n      Async.prototype._drainQueues = function () {\n        _drainQueue(this._normalQueue);\n\n        this._reset();\n\n        this._haveDrainedQueues = true;\n\n        _drainQueue(this._lateQueue);\n      };\n\n      Async.prototype._queueTick = function () {\n        if (!this._isTickUsed) {\n          this._isTickUsed = true;\n\n          this._schedule(this.drainQueues);\n        }\n      };\n\n      Async.prototype._reset = function () {\n        this._isTickUsed = false;\n      };\n\n      module.exports = Async;\n      module.exports.firstLineError = firstLineError;\n    }, {\n      \"./queue\": 26,\n      \"./schedule\": 29,\n      \"./util\": 36\n    }],\n    3: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL, tryConvertToPromise, debug) {\n        var calledBind = false;\n\n        var rejectThis = function rejectThis(_, e) {\n          this._reject(e);\n        };\n\n        var targetRejected = function targetRejected(e, context) {\n          context.promiseRejectionQueued = true;\n\n          context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n        };\n\n        var bindingResolved = function bindingResolved(thisArg, context) {\n          if ((this._bitField & 50397184) === 0) {\n            this._resolveCallback(context.target);\n          }\n        };\n\n        var bindingRejected = function bindingRejected(e, context) {\n          if (!context.promiseRejectionQueued) this._reject(e);\n        };\n\n        Promise.prototype.bind = function (thisArg) {\n          if (!calledBind) {\n            calledBind = true;\n            Promise.prototype._propagateFrom = debug.propagateFromFunction();\n            Promise.prototype._boundValue = debug.boundValueFunction();\n          }\n\n          var maybePromise = tryConvertToPromise(thisArg);\n          var ret = new Promise(INTERNAL);\n\n          ret._propagateFrom(this, 1);\n\n          var target = this._target();\n\n          ret._setBoundTo(maybePromise);\n\n          if (maybePromise instanceof Promise) {\n            var context = {\n              promiseRejectionQueued: false,\n              promise: ret,\n              target: target,\n              bindingPromise: maybePromise\n            };\n\n            target._then(INTERNAL, targetRejected, undefined, ret, context);\n\n            maybePromise._then(bindingResolved, bindingRejected, undefined, ret, context);\n\n            ret._setOnCancel(maybePromise);\n          } else {\n            ret._resolveCallback(target);\n          }\n\n          return ret;\n        };\n\n        Promise.prototype._setBoundTo = function (obj) {\n          if (obj !== undefined) {\n            this._bitField = this._bitField | 2097152;\n            this._boundTo = obj;\n          } else {\n            this._bitField = this._bitField & ~2097152;\n          }\n        };\n\n        Promise.prototype._isBound = function () {\n          return (this._bitField & 2097152) === 2097152;\n        };\n\n        Promise.bind = function (thisArg, value) {\n          return Promise.resolve(value).bind(thisArg);\n        };\n      };\n    }, {}],\n    4: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      var old;\n      if (typeof Promise !== \"undefined\") old = Promise;\n\n      function noConflict() {\n        try {\n          if (Promise === bluebird) Promise = old;\n        } catch (e) {}\n\n        return bluebird;\n      }\n\n      var bluebird = _dereq_(\"./promise\")();\n\n      bluebird.noConflict = noConflict;\n      module.exports = bluebird;\n    }, {\n      \"./promise\": 22\n    }],\n    5: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      var cr = Object.create;\n\n      if (cr) {\n        var callerCache = cr(null);\n        var getterCache = cr(null);\n        callerCache[\" size\"] = getterCache[\" size\"] = 0;\n      }\n\n      module.exports = function (Promise) {\n        var util = _dereq_(\"./util\");\n\n        var canEvaluate = util.canEvaluate;\n        var isIdentifier = util.isIdentifier;\n        var getMethodCaller;\n        var getGetter;\n\n        if (false) { var getCompiled, makeGetter, makeMethodCaller; }\n\n        function ensureMethod(obj, methodName) {\n          var fn;\n          if (obj != null) fn = obj[methodName];\n\n          if (typeof fn !== \"function\") {\n            var message = \"Object \" + util.classString(obj) + \" has no method '\" + util.toString(methodName) + \"'\";\n            throw new Promise.TypeError(message);\n          }\n\n          return fn;\n        }\n\n        function caller(obj) {\n          var methodName = this.pop();\n          var fn = ensureMethod(obj, methodName);\n          return fn.apply(obj, this);\n        }\n\n        Promise.prototype.call = function (methodName) {\n          var args = [].slice.call(arguments, 1);\n          ;\n\n          if (false) { var maybeCaller; }\n\n          args.push(methodName);\n          return this._then(caller, undefined, undefined, args, undefined);\n        };\n\n        function namedGetter(obj) {\n          return obj[this];\n        }\n\n        function indexedGetter(obj) {\n          var index = +this;\n          if (index < 0) index = Math.max(0, index + obj.length);\n          return obj[index];\n        }\n\n        Promise.prototype.get = function (propertyName) {\n          var isIndex = typeof propertyName === \"number\";\n          var getter;\n\n          if (!isIndex) {\n            if (canEvaluate) {\n              var maybeGetter = getGetter(propertyName);\n              getter = maybeGetter !== null ? maybeGetter : namedGetter;\n            } else {\n              getter = namedGetter;\n            }\n          } else {\n            getter = indexedGetter;\n          }\n\n          return this._then(getter, undefined, undefined, propertyName, undefined);\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    6: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, PromiseArray, apiRejection, debug) {\n        var util = _dereq_(\"./util\");\n\n        var tryCatch = util.tryCatch;\n        var errorObj = util.errorObj;\n        var async = Promise._async;\n\n        Promise.prototype[\"break\"] = Promise.prototype.cancel = function () {\n          if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n          var promise = this;\n          var child = promise;\n\n          while (promise._isCancellable()) {\n            if (!promise._cancelBy(child)) {\n              if (child._isFollowing()) {\n                child._followee().cancel();\n              } else {\n                child._cancelBranched();\n              }\n\n              break;\n            }\n\n            var parent = promise._cancellationParent;\n\n            if (parent == null || !parent._isCancellable()) {\n              if (promise._isFollowing()) {\n                promise._followee().cancel();\n              } else {\n                promise._cancelBranched();\n              }\n\n              break;\n            } else {\n              if (promise._isFollowing()) promise._followee().cancel();\n\n              promise._setWillBeCancelled();\n\n              child = promise;\n              promise = parent;\n            }\n          }\n        };\n\n        Promise.prototype._branchHasCancelled = function () {\n          this._branchesRemainingToCancel--;\n        };\n\n        Promise.prototype._enoughBranchesHaveCancelled = function () {\n          return this._branchesRemainingToCancel === undefined || this._branchesRemainingToCancel <= 0;\n        };\n\n        Promise.prototype._cancelBy = function (canceller) {\n          if (canceller === this) {\n            this._branchesRemainingToCancel = 0;\n\n            this._invokeOnCancel();\n\n            return true;\n          } else {\n            this._branchHasCancelled();\n\n            if (this._enoughBranchesHaveCancelled()) {\n              this._invokeOnCancel();\n\n              return true;\n            }\n          }\n\n          return false;\n        };\n\n        Promise.prototype._cancelBranched = function () {\n          if (this._enoughBranchesHaveCancelled()) {\n            this._cancel();\n          }\n        };\n\n        Promise.prototype._cancel = function () {\n          if (!this._isCancellable()) return;\n\n          this._setCancelled();\n\n          async.invoke(this._cancelPromises, this, undefined);\n        };\n\n        Promise.prototype._cancelPromises = function () {\n          if (this._length() > 0) this._settlePromises();\n        };\n\n        Promise.prototype._unsetOnCancel = function () {\n          this._onCancelField = undefined;\n        };\n\n        Promise.prototype._isCancellable = function () {\n          return this.isPending() && !this._isCancelled();\n        };\n\n        Promise.prototype.isCancellable = function () {\n          return this.isPending() && !this.isCancelled();\n        };\n\n        Promise.prototype._doInvokeOnCancel = function (onCancelCallback, internalOnly) {\n          if (util.isArray(onCancelCallback)) {\n            for (var i = 0; i < onCancelCallback.length; ++i) {\n              this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n            }\n          } else if (onCancelCallback !== undefined) {\n            if (typeof onCancelCallback === \"function\") {\n              if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n\n                if (e === errorObj) {\n                  this._attachExtraTrace(e.e);\n\n                  async.throwLater(e.e);\n                }\n              }\n            } else {\n              onCancelCallback._resultCancelled(this);\n            }\n          }\n        };\n\n        Promise.prototype._invokeOnCancel = function () {\n          var onCancelCallback = this._onCancel();\n\n          this._unsetOnCancel();\n\n          async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n        };\n\n        Promise.prototype._invokeInternalOnCancel = function () {\n          if (this._isCancellable()) {\n            this._doInvokeOnCancel(this._onCancel(), true);\n\n            this._unsetOnCancel();\n          }\n        };\n\n        Promise.prototype._resultCancelled = function () {\n          this.cancel();\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    7: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (NEXT_FILTER) {\n        var util = _dereq_(\"./util\");\n\n        var getKeys = _dereq_(\"./es5\").keys;\n\n        var tryCatch = util.tryCatch;\n        var errorObj = util.errorObj;\n\n        function catchFilter(instances, cb, promise) {\n          return function (e) {\n            var boundTo = promise._boundValue();\n\n            predicateLoop: for (var i = 0; i < instances.length; ++i) {\n              var item = instances[i];\n\n              if (item === Error || item != null && item.prototype instanceof Error) {\n                if (e instanceof item) {\n                  return tryCatch(cb).call(boundTo, e);\n                }\n              } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n\n                if (matchesPredicate === errorObj) {\n                  return matchesPredicate;\n                } else if (matchesPredicate) {\n                  return tryCatch(cb).call(boundTo, e);\n                }\n              } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n\n                for (var j = 0; j < keys.length; ++j) {\n                  var key = keys[j];\n\n                  if (item[key] != e[key]) {\n                    continue predicateLoop;\n                  }\n                }\n\n                return tryCatch(cb).call(boundTo, e);\n              }\n            }\n\n            return NEXT_FILTER;\n          };\n        }\n\n        return catchFilter;\n      };\n    }, {\n      \"./es5\": 13,\n      \"./util\": 36\n    }],\n    8: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise) {\n        var longStackTraces = false;\n        var contextStack = [];\n\n        Promise.prototype._promiseCreated = function () {};\n\n        Promise.prototype._pushContext = function () {};\n\n        Promise.prototype._popContext = function () {\n          return null;\n        };\n\n        Promise._peekContext = Promise.prototype._peekContext = function () {};\n\n        function Context() {\n          this._trace = new Context.CapturedTrace(peekContext());\n        }\n\n        Context.prototype._pushContext = function () {\n          if (this._trace !== undefined) {\n            this._trace._promiseCreated = null;\n            contextStack.push(this._trace);\n          }\n        };\n\n        Context.prototype._popContext = function () {\n          if (this._trace !== undefined) {\n            var trace = contextStack.pop();\n            var ret = trace._promiseCreated;\n            trace._promiseCreated = null;\n            return ret;\n          }\n\n          return null;\n        };\n\n        function createContext() {\n          if (longStackTraces) return new Context();\n        }\n\n        function peekContext() {\n          var lastIndex = contextStack.length - 1;\n\n          if (lastIndex >= 0) {\n            return contextStack[lastIndex];\n          }\n\n          return undefined;\n        }\n\n        Context.CapturedTrace = null;\n        Context.create = createContext;\n\n        Context.deactivateLongStackTraces = function () {};\n\n        Context.activateLongStackTraces = function () {\n          var Promise_pushContext = Promise.prototype._pushContext;\n          var Promise_popContext = Promise.prototype._popContext;\n          var Promise_PeekContext = Promise._peekContext;\n          var Promise_peekContext = Promise.prototype._peekContext;\n          var Promise_promiseCreated = Promise.prototype._promiseCreated;\n\n          Context.deactivateLongStackTraces = function () {\n            Promise.prototype._pushContext = Promise_pushContext;\n            Promise.prototype._popContext = Promise_popContext;\n            Promise._peekContext = Promise_PeekContext;\n            Promise.prototype._peekContext = Promise_peekContext;\n            Promise.prototype._promiseCreated = Promise_promiseCreated;\n            longStackTraces = false;\n          };\n\n          longStackTraces = true;\n          Promise.prototype._pushContext = Context.prototype._pushContext;\n          Promise.prototype._popContext = Context.prototype._popContext;\n          Promise._peekContext = Promise.prototype._peekContext = peekContext;\n\n          Promise.prototype._promiseCreated = function () {\n            var ctx = this._peekContext();\n\n            if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n          };\n        };\n\n        return Context;\n      };\n    }, {}],\n    9: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, Context) {\n        var getDomain = Promise._getDomain;\n        var async = Promise._async;\n\n        var Warning = _dereq_(\"./errors\").Warning;\n\n        var util = _dereq_(\"./util\");\n\n        var es5 = _dereq_(\"./es5\");\n\n        var canAttachTrace = util.canAttachTrace;\n        var unhandledRejectionHandled;\n        var possiblyUnhandledRejection;\n        var bluebirdFramePattern = /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\n        var nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\n        var parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\n        var stackFramePattern = null;\n        var formatStack = null;\n        var indentStackFrames = false;\n        var printWarning;\n        var debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 && ( true || false));\n        var warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 && (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n        var longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 && (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n        var wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 && (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\n        Promise.prototype.suppressUnhandledRejections = function () {\n          var target = this._target();\n\n          target._bitField = target._bitField & ~1048576 | 524288;\n        };\n\n        Promise.prototype._ensurePossibleRejectionHandled = function () {\n          if ((this._bitField & 524288) !== 0) return;\n\n          this._setRejectionIsUnhandled();\n\n          var self = this;\n          setTimeout(function () {\n            self._notifyUnhandledRejection();\n          }, 1);\n        };\n\n        Promise.prototype._notifyUnhandledRejectionIsHandled = function () {\n          fireRejectionEvent(\"rejectionHandled\", unhandledRejectionHandled, undefined, this);\n        };\n\n        Promise.prototype._setReturnedNonUndefined = function () {\n          this._bitField = this._bitField | 268435456;\n        };\n\n        Promise.prototype._returnedNonUndefined = function () {\n          return (this._bitField & 268435456) !== 0;\n        };\n\n        Promise.prototype._notifyUnhandledRejection = function () {\n          if (this._isRejectionUnhandled()) {\n            var reason = this._settledValue();\n\n            this._setUnhandledRejectionIsNotified();\n\n            fireRejectionEvent(\"unhandledRejection\", possiblyUnhandledRejection, reason, this);\n          }\n        };\n\n        Promise.prototype._setUnhandledRejectionIsNotified = function () {\n          this._bitField = this._bitField | 262144;\n        };\n\n        Promise.prototype._unsetUnhandledRejectionIsNotified = function () {\n          this._bitField = this._bitField & ~262144;\n        };\n\n        Promise.prototype._isUnhandledRejectionNotified = function () {\n          return (this._bitField & 262144) > 0;\n        };\n\n        Promise.prototype._setRejectionIsUnhandled = function () {\n          this._bitField = this._bitField | 1048576;\n        };\n\n        Promise.prototype._unsetRejectionIsUnhandled = function () {\n          this._bitField = this._bitField & ~1048576;\n\n          if (this._isUnhandledRejectionNotified()) {\n            this._unsetUnhandledRejectionIsNotified();\n\n            this._notifyUnhandledRejectionIsHandled();\n          }\n        };\n\n        Promise.prototype._isRejectionUnhandled = function () {\n          return (this._bitField & 1048576) > 0;\n        };\n\n        Promise.prototype._warn = function (message, shouldUseOwnTrace, promise) {\n          return warn(message, shouldUseOwnTrace, promise || this);\n        };\n\n        Promise.onPossiblyUnhandledRejection = function (fn) {\n          var domain = getDomain();\n          possiblyUnhandledRejection = typeof fn === \"function\" ? domain === null ? fn : util.domainBind(domain, fn) : undefined;\n        };\n\n        Promise.onUnhandledRejectionHandled = function (fn) {\n          var domain = getDomain();\n          unhandledRejectionHandled = typeof fn === \"function\" ? domain === null ? fn : util.domainBind(domain, fn) : undefined;\n        };\n\n        var disableLongStackTraces = function disableLongStackTraces() {};\n\n        Promise.longStackTraces = function () {\n          if (async.haveItemsQueued() && !config.longStackTraces) {\n            throw new Error(\"cannot enable long stack traces after promises have been created\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          if (!config.longStackTraces && longStackTracesIsSupported()) {\n            var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n            var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n            var Promise_dereferenceTrace = Promise.prototype._dereferenceTrace;\n            config.longStackTraces = true;\n\n            disableLongStackTraces = function disableLongStackTraces() {\n              if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\n\\n    See http://goo.gl/MqrFmX\\n\");\n              }\n\n              Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n              Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n              Promise.prototype._dereferenceTrace = Promise_dereferenceTrace;\n              Context.deactivateLongStackTraces();\n              async.enableTrampoline();\n              config.longStackTraces = false;\n            };\n\n            Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n            Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n            Promise.prototype._dereferenceTrace = longStackTracesDereferenceTrace;\n            Context.activateLongStackTraces();\n            async.disableTrampolineIfNecessary();\n          }\n        };\n\n        Promise.hasLongStackTraces = function () {\n          return config.longStackTraces && longStackTracesIsSupported();\n        };\n\n        var fireDomEvent = function () {\n          try {\n            if (typeof CustomEvent === \"function\") {\n              var event = new CustomEvent(\"CustomEvent\");\n              util.global.dispatchEvent(event);\n              return function (name, event) {\n                var eventData = {\n                  detail: event,\n                  cancelable: true\n                };\n                es5.defineProperty(eventData, \"promise\", {\n                  value: event.promise\n                });\n                es5.defineProperty(eventData, \"reason\", {\n                  value: event.reason\n                });\n                var domEvent = new CustomEvent(name.toLowerCase(), eventData);\n                return !util.global.dispatchEvent(domEvent);\n              };\n            } else if (typeof Event === \"function\") {\n              var event = new Event(\"CustomEvent\");\n              util.global.dispatchEvent(event);\n              return function (name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                  cancelable: true\n                });\n                domEvent.detail = event;\n                es5.defineProperty(domEvent, \"promise\", {\n                  value: event.promise\n                });\n                es5.defineProperty(domEvent, \"reason\", {\n                  value: event.reason\n                });\n                return !util.global.dispatchEvent(domEvent);\n              };\n            } else {\n              var event = document.createEvent(\"CustomEvent\");\n              event.initCustomEvent(\"testingtheevent\", false, true, {});\n              util.global.dispatchEvent(event);\n              return function (name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true, event);\n                return !util.global.dispatchEvent(domEvent);\n              };\n            }\n          } catch (e) {}\n\n          return function () {\n            return false;\n          };\n        }();\n\n        var fireGlobalEvent = function () {\n          if (util.isNode) {\n            return function () {\n              return process.emit.apply(process, arguments);\n            };\n          } else {\n            if (!util.global) {\n              return function () {\n                return false;\n              };\n            }\n\n            return function (name) {\n              var methodName = \"on\" + name.toLowerCase();\n              var method = util.global[methodName];\n              if (!method) return false;\n              method.apply(util.global, [].slice.call(arguments, 1));\n              return true;\n            };\n          }\n        }();\n\n        function generatePromiseLifecycleEventObject(name, promise) {\n          return {\n            promise: promise\n          };\n        }\n\n        var eventToObjectGenerator = {\n          promiseCreated: generatePromiseLifecycleEventObject,\n          promiseFulfilled: generatePromiseLifecycleEventObject,\n          promiseRejected: generatePromiseLifecycleEventObject,\n          promiseResolved: generatePromiseLifecycleEventObject,\n          promiseCancelled: generatePromiseLifecycleEventObject,\n          promiseChained: function promiseChained(name, promise, child) {\n            return {\n              promise: promise,\n              child: child\n            };\n          },\n          warning: function warning(name, _warning) {\n            return {\n              warning: _warning\n            };\n          },\n          unhandledRejection: function unhandledRejection(name, reason, promise) {\n            return {\n              reason: reason,\n              promise: promise\n            };\n          },\n          rejectionHandled: generatePromiseLifecycleEventObject\n        };\n\n        var activeFireEvent = function activeFireEvent(name) {\n          var globalEventFired = false;\n\n          try {\n            globalEventFired = fireGlobalEvent.apply(null, arguments);\n          } catch (e) {\n            async.throwLater(e);\n            globalEventFired = true;\n          }\n\n          var domEventFired = false;\n\n          try {\n            domEventFired = fireDomEvent(name, eventToObjectGenerator[name].apply(null, arguments));\n          } catch (e) {\n            async.throwLater(e);\n            domEventFired = true;\n          }\n\n          return domEventFired || globalEventFired;\n        };\n\n        Promise.config = function (opts) {\n          opts = Object(opts);\n\n          if (\"longStackTraces\" in opts) {\n            if (opts.longStackTraces) {\n              Promise.longStackTraces();\n            } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n              disableLongStackTraces();\n            }\n          }\n\n          if (\"warnings\" in opts) {\n            var warningsOption = opts.warnings;\n            config.warnings = !!warningsOption;\n            wForgottenReturn = config.warnings;\n\n            if (util.isObject(warningsOption)) {\n              if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n              }\n            }\n          }\n\n          if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n            if (async.haveItemsQueued()) {\n              throw new Error(\"cannot enable cancellation after promises are in use\");\n            }\n\n            Promise.prototype._clearCancellationData = cancellationClearCancellationData;\n            Promise.prototype._propagateFrom = cancellationPropagateFrom;\n            Promise.prototype._onCancel = cancellationOnCancel;\n            Promise.prototype._setOnCancel = cancellationSetOnCancel;\n            Promise.prototype._attachCancellationCallback = cancellationAttachCancellationCallback;\n            Promise.prototype._execute = cancellationExecute;\n            _propagateFromFunction = cancellationPropagateFrom;\n            config.cancellation = true;\n          }\n\n          if (\"monitoring\" in opts) {\n            if (opts.monitoring && !config.monitoring) {\n              config.monitoring = true;\n              Promise.prototype._fireEvent = activeFireEvent;\n            } else if (!opts.monitoring && config.monitoring) {\n              config.monitoring = false;\n              Promise.prototype._fireEvent = defaultFireEvent;\n            }\n          }\n\n          return Promise;\n        };\n\n        function defaultFireEvent() {\n          return false;\n        }\n\n        Promise.prototype._fireEvent = defaultFireEvent;\n\n        Promise.prototype._execute = function (executor, resolve, reject) {\n          try {\n            executor(resolve, reject);\n          } catch (e) {\n            return e;\n          }\n        };\n\n        Promise.prototype._onCancel = function () {};\n\n        Promise.prototype._setOnCancel = function (handler) {\n          ;\n        };\n\n        Promise.prototype._attachCancellationCallback = function (onCancel) {\n          ;\n        };\n\n        Promise.prototype._captureStackTrace = function () {};\n\n        Promise.prototype._attachExtraTrace = function () {};\n\n        Promise.prototype._dereferenceTrace = function () {};\n\n        Promise.prototype._clearCancellationData = function () {};\n\n        Promise.prototype._propagateFrom = function (parent, flags) {\n          ;\n          ;\n        };\n\n        function cancellationExecute(executor, resolve, reject) {\n          var promise = this;\n\n          try {\n            executor(resolve, reject, function (onCancel) {\n              if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" + util.toString(onCancel));\n              }\n\n              promise._attachCancellationCallback(onCancel);\n            });\n          } catch (e) {\n            return e;\n          }\n        }\n\n        function cancellationAttachCancellationCallback(onCancel) {\n          if (!this._isCancellable()) return this;\n\n          var previousOnCancel = this._onCancel();\n\n          if (previousOnCancel !== undefined) {\n            if (util.isArray(previousOnCancel)) {\n              previousOnCancel.push(onCancel);\n            } else {\n              this._setOnCancel([previousOnCancel, onCancel]);\n            }\n          } else {\n            this._setOnCancel(onCancel);\n          }\n        }\n\n        function cancellationOnCancel() {\n          return this._onCancelField;\n        }\n\n        function cancellationSetOnCancel(onCancel) {\n          this._onCancelField = onCancel;\n        }\n\n        function cancellationClearCancellationData() {\n          this._cancellationParent = undefined;\n          this._onCancelField = undefined;\n        }\n\n        function cancellationPropagateFrom(parent, flags) {\n          if ((flags & 1) !== 0) {\n            this._cancellationParent = parent;\n            var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n\n            if (branchesRemainingToCancel === undefined) {\n              branchesRemainingToCancel = 0;\n            }\n\n            parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n          }\n\n          if ((flags & 2) !== 0 && parent._isBound()) {\n            this._setBoundTo(parent._boundTo);\n          }\n        }\n\n        function bindingPropagateFrom(parent, flags) {\n          if ((flags & 2) !== 0 && parent._isBound()) {\n            this._setBoundTo(parent._boundTo);\n          }\n        }\n\n        var _propagateFromFunction = bindingPropagateFrom;\n\n        function _boundValueFunction() {\n          var ret = this._boundTo;\n\n          if (ret !== undefined) {\n            if (ret instanceof Promise) {\n              if (ret.isFulfilled()) {\n                return ret.value();\n              } else {\n                return undefined;\n              }\n            }\n          }\n\n          return ret;\n        }\n\n        function longStackTracesCaptureStackTrace() {\n          this._trace = new CapturedTrace(this._peekContext());\n        }\n\n        function longStackTracesAttachExtraTrace(error, ignoreSelf) {\n          if (canAttachTrace(error)) {\n            var trace = this._trace;\n\n            if (trace !== undefined) {\n              if (ignoreSelf) trace = trace._parent;\n            }\n\n            if (trace !== undefined) {\n              trace.attachExtraTrace(error);\n            } else if (!error.__stackCleaned__) {\n              var parsed = parseStackAndMessage(error);\n              util.notEnumerableProp(error, \"stack\", parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n              util.notEnumerableProp(error, \"__stackCleaned__\", true);\n            }\n          }\n        }\n\n        function longStackTracesDereferenceTrace() {\n          this._trace = undefined;\n        }\n\n        function checkForgottenReturns(returnValue, promiseCreated, name, promise, parent) {\n          if (returnValue === undefined && promiseCreated !== null && wForgottenReturn) {\n            if (parent !== undefined && parent._returnedNonUndefined()) return;\n            if ((promise._bitField & 65535) === 0) return;\n            if (name) name = name + \" \";\n            var handlerLine = \"\";\n            var creatorLine = \"\";\n\n            if (promiseCreated._trace) {\n              var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n\n              var stack = cleanStack(traceLines);\n\n              for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n\n                if (!nodeFramePattern.test(line)) {\n                  var lineMatches = line.match(parseLinePattern);\n\n                  if (lineMatches) {\n                    handlerLine = \"at \" + lineMatches[1] + \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                  }\n\n                  break;\n                }\n              }\n\n              if (stack.length > 0) {\n                var firstUserLine = stack[0];\n\n                for (var i = 0; i < traceLines.length; ++i) {\n                  if (traceLines[i] === firstUserLine) {\n                    if (i > 0) {\n                      creatorLine = \"\\n\" + traceLines[i - 1];\n                    }\n\n                    break;\n                  }\n                }\n              }\n            }\n\n            var msg = \"a promise was created in a \" + name + \"handler \" + handlerLine + \"but was not returned from it, \" + \"see http://goo.gl/rRqMUw\" + creatorLine;\n\n            promise._warn(msg, true, promiseCreated);\n          }\n        }\n\n        function deprecated(name, replacement) {\n          var message = name + \" is deprecated and will be removed in a future version.\";\n          if (replacement) message += \" Use \" + replacement + \" instead.\";\n          return warn(message);\n        }\n\n        function warn(message, shouldUseOwnTrace, promise) {\n          if (!config.warnings) return;\n          var warning = new Warning(message);\n          var ctx;\n\n          if (shouldUseOwnTrace) {\n            promise._attachExtraTrace(warning);\n          } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n            ctx.attachExtraTrace(warning);\n          } else {\n            var parsed = parseStackAndMessage(warning);\n            warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n          }\n\n          if (!activeFireEvent(\"warning\", warning)) {\n            formatAndLogError(warning, \"\", true);\n          }\n        }\n\n        function reconstructStack(message, stacks) {\n          for (var i = 0; i < stacks.length - 1; ++i) {\n            stacks[i].push(\"From previous event:\");\n            stacks[i] = stacks[i].join(\"\\n\");\n          }\n\n          if (i < stacks.length) {\n            stacks[i] = stacks[i].join(\"\\n\");\n          }\n\n          return message + \"\\n\" + stacks.join(\"\\n\");\n        }\n\n        function removeDuplicateOrEmptyJumps(stacks) {\n          for (var i = 0; i < stacks.length; ++i) {\n            if (stacks[i].length === 0 || i + 1 < stacks.length && stacks[i][0] === stacks[i + 1][0]) {\n              stacks.splice(i, 1);\n              i--;\n            }\n          }\n        }\n\n        function removeCommonRoots(stacks) {\n          var current = stacks[0];\n\n          for (var i = 1; i < stacks.length; ++i) {\n            var prev = stacks[i];\n            var currentLastIndex = current.length - 1;\n            var currentLastLine = current[currentLastIndex];\n            var commonRootMeetPoint = -1;\n\n            for (var j = prev.length - 1; j >= 0; --j) {\n              if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n              }\n            }\n\n            for (var j = commonRootMeetPoint; j >= 0; --j) {\n              var line = prev[j];\n\n              if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n              } else {\n                break;\n              }\n            }\n\n            current = prev;\n          }\n        }\n\n        function cleanStack(stack) {\n          var ret = [];\n\n          for (var i = 0; i < stack.length; ++i) {\n            var line = stack[i];\n            var isTraceLine = \"    (No stack trace)\" === line || stackFramePattern.test(line);\n            var isInternalFrame = isTraceLine && shouldIgnore(line);\n\n            if (isTraceLine && !isInternalFrame) {\n              if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n              }\n\n              ret.push(line);\n            }\n          }\n\n          return ret;\n        }\n\n        function stackFramesAsArray(error) {\n          var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n\n          for (var i = 0; i < stack.length; ++i) {\n            var line = stack[i];\n\n            if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n              break;\n            }\n          }\n\n          if (i > 0 && error.name != \"SyntaxError\") {\n            stack = stack.slice(i);\n          }\n\n          return stack;\n        }\n\n        function parseStackAndMessage(error) {\n          var stack = error.stack;\n          var message = error.toString();\n          stack = typeof stack === \"string\" && stack.length > 0 ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n          return {\n            message: message,\n            stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n          };\n        }\n\n        function formatAndLogError(error, title, isSoft) {\n          if (typeof console !== \"undefined\") {\n            var message;\n\n            if (util.isObject(error)) {\n              var stack = error.stack;\n              message = title + formatStack(stack, error);\n            } else {\n              message = title + String(error);\n            }\n\n            if (typeof printWarning === \"function\") {\n              printWarning(message, isSoft);\n            } else if (typeof console.log === \"function\" || _typeof(console.log) === \"object\") {\n              console.log(message);\n            }\n          }\n        }\n\n        function fireRejectionEvent(name, localHandler, reason, promise) {\n          var localEventFired = false;\n\n          try {\n            if (typeof localHandler === \"function\") {\n              localEventFired = true;\n\n              if (name === \"rejectionHandled\") {\n                localHandler(promise);\n              } else {\n                localHandler(reason, promise);\n              }\n            }\n          } catch (e) {\n            async.throwLater(e);\n          }\n\n          if (name === \"unhandledRejection\") {\n            if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n              formatAndLogError(reason, \"Unhandled rejection \");\n            }\n          } else {\n            activeFireEvent(name, promise);\n          }\n        }\n\n        function formatNonError(obj) {\n          var str;\n\n          if (typeof obj === \"function\") {\n            str = \"[function \" + (obj.name || \"anonymous\") + \"]\";\n          } else {\n            str = obj && typeof obj.toString === \"function\" ? obj.toString() : util.toString(obj);\n            var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n\n            if (ruselessToString.test(str)) {\n              try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n              } catch (e) {}\n            }\n\n            if (str.length === 0) {\n              str = \"(empty array)\";\n            }\n          }\n\n          return \"(<\" + snip(str) + \">, no stack trace)\";\n        }\n\n        function snip(str) {\n          var maxChars = 41;\n\n          if (str.length < maxChars) {\n            return str;\n          }\n\n          return str.substr(0, maxChars - 3) + \"...\";\n        }\n\n        function longStackTracesIsSupported() {\n          return typeof captureStackTrace === \"function\";\n        }\n\n        var shouldIgnore = function shouldIgnore() {\n          return false;\n        };\n\n        var parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\n\n        function parseLineInfo(line) {\n          var matches = line.match(parseLineInfoRegex);\n\n          if (matches) {\n            return {\n              fileName: matches[1],\n              line: parseInt(matches[2], 10)\n            };\n          }\n        }\n\n        function setBounds(firstLineError, lastLineError) {\n          if (!longStackTracesIsSupported()) return;\n          var firstStackLines = firstLineError.stack.split(\"\\n\");\n          var lastStackLines = lastLineError.stack.split(\"\\n\");\n          var firstIndex = -1;\n          var lastIndex = -1;\n          var firstFileName;\n          var lastFileName;\n\n          for (var i = 0; i < firstStackLines.length; ++i) {\n            var result = parseLineInfo(firstStackLines[i]);\n\n            if (result) {\n              firstFileName = result.fileName;\n              firstIndex = result.line;\n              break;\n            }\n          }\n\n          for (var i = 0; i < lastStackLines.length; ++i) {\n            var result = parseLineInfo(lastStackLines[i]);\n\n            if (result) {\n              lastFileName = result.fileName;\n              lastIndex = result.line;\n              break;\n            }\n          }\n\n          if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName || firstFileName !== lastFileName || firstIndex >= lastIndex) {\n            return;\n          }\n\n          shouldIgnore = function shouldIgnore(line) {\n            if (bluebirdFramePattern.test(line)) return true;\n            var info = parseLineInfo(line);\n\n            if (info) {\n              if (info.fileName === firstFileName && firstIndex <= info.line && info.line <= lastIndex) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        function CapturedTrace(parent) {\n          this._parent = parent;\n          this._promisesCreated = 0;\n          var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n          captureStackTrace(this, CapturedTrace);\n          if (length > 32) this.uncycle();\n        }\n\n        util.inherits(CapturedTrace, Error);\n        Context.CapturedTrace = CapturedTrace;\n\n        CapturedTrace.prototype.uncycle = function () {\n          var length = this._length;\n          if (length < 2) return;\n          var nodes = [];\n          var stackToIndex = {};\n\n          for (var i = 0, node = this; node !== undefined; ++i) {\n            nodes.push(node);\n            node = node._parent;\n          }\n\n          length = this._length = i;\n\n          for (var i = length - 1; i >= 0; --i) {\n            var stack = nodes[i].stack;\n\n            if (stackToIndex[stack] === undefined) {\n              stackToIndex[stack] = i;\n            }\n          }\n\n          for (var i = 0; i < length; ++i) {\n            var currentStack = nodes[i].stack;\n            var index = stackToIndex[currentStack];\n\n            if (index !== undefined && index !== i) {\n              if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n              }\n\n              nodes[i]._parent = undefined;\n              nodes[i]._length = 1;\n              var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n              if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n\n                cycleEdgeNode._parent.uncycle();\n\n                cycleEdgeNode._length = cycleEdgeNode._parent._length + 1;\n              } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n              }\n\n              var currentChildLength = cycleEdgeNode._length + 1;\n\n              for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n              }\n\n              return;\n            }\n          }\n        };\n\n        CapturedTrace.prototype.attachExtraTrace = function (error) {\n          if (error.__stackCleaned__) return;\n          this.uncycle();\n          var parsed = parseStackAndMessage(error);\n          var message = parsed.message;\n          var stacks = [parsed.stack];\n          var trace = this;\n\n          while (trace !== undefined) {\n            stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n            trace = trace._parent;\n          }\n\n          removeCommonRoots(stacks);\n          removeDuplicateOrEmptyJumps(stacks);\n          util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n          util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        };\n\n        var captureStackTrace = function stackDetection() {\n          var v8stackFramePattern = /^\\s*at\\s*/;\n\n          var v8stackFormatter = function v8stackFormatter(stack, error) {\n            if (typeof stack === \"string\") return stack;\n\n            if (error.name !== undefined && error.message !== undefined) {\n              return error.toString();\n            }\n\n            return formatNonError(error);\n          };\n\n          if (typeof Error.stackTraceLimit === \"number\" && typeof Error.captureStackTrace === \"function\") {\n            Error.stackTraceLimit += 6;\n            stackFramePattern = v8stackFramePattern;\n            formatStack = v8stackFormatter;\n            var captureStackTrace = Error.captureStackTrace;\n\n            shouldIgnore = function shouldIgnore(line) {\n              return bluebirdFramePattern.test(line);\n            };\n\n            return function (receiver, ignoreUntil) {\n              Error.stackTraceLimit += 6;\n              captureStackTrace(receiver, ignoreUntil);\n              Error.stackTraceLimit -= 6;\n            };\n          }\n\n          var err = new Error();\n\n          if (typeof err.stack === \"string\" && err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n            stackFramePattern = /@/;\n            formatStack = v8stackFormatter;\n            indentStackFrames = true;\n            return function captureStackTrace(o) {\n              o.stack = new Error().stack;\n            };\n          }\n\n          var hasStackAfterThrow;\n\n          try {\n            throw new Error();\n          } catch (e) {\n            hasStackAfterThrow = \"stack\" in e;\n          }\n\n          if (!(\"stack\" in err) && hasStackAfterThrow && typeof Error.stackTraceLimit === \"number\") {\n            stackFramePattern = v8stackFramePattern;\n            formatStack = v8stackFormatter;\n            return function captureStackTrace(o) {\n              Error.stackTraceLimit += 6;\n\n              try {\n                throw new Error();\n              } catch (e) {\n                o.stack = e.stack;\n              }\n\n              Error.stackTraceLimit -= 6;\n            };\n          }\n\n          formatStack = function formatStack(stack, error) {\n            if (typeof stack === \"string\") return stack;\n\n            if ((_typeof(error) === \"object\" || typeof error === \"function\") && error.name !== undefined && error.message !== undefined) {\n              return error.toString();\n            }\n\n            return formatNonError(error);\n          };\n\n          return null;\n        }([]);\n\n        if (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n          printWarning = function printWarning(message) {\n            console.warn(message);\n          };\n\n          if (util.isNode && process.stderr.isTTY) {\n            printWarning = function printWarning(message, isSoft) {\n              var color = isSoft ? \"\\x1B[33m\" : \"\\x1B[31m\";\n              console.warn(color + message + \"\\x1B[0m\\n\");\n            };\n          } else if (!util.isNode && typeof new Error().stack === \"string\") {\n            printWarning = function printWarning(message, isSoft) {\n              console.warn(\"%c\" + message, isSoft ? \"color: darkorange\" : \"color: red\");\n            };\n          }\n        }\n\n        var config = {\n          warnings: warnings,\n          longStackTraces: false,\n          cancellation: false,\n          monitoring: false\n        };\n        if (longStackTraces) Promise.longStackTraces();\n        return {\n          longStackTraces: function longStackTraces() {\n            return config.longStackTraces;\n          },\n          warnings: function warnings() {\n            return config.warnings;\n          },\n          cancellation: function cancellation() {\n            return config.cancellation;\n          },\n          monitoring: function monitoring() {\n            return config.monitoring;\n          },\n          propagateFromFunction: function propagateFromFunction() {\n            return _propagateFromFunction;\n          },\n          boundValueFunction: function boundValueFunction() {\n            return _boundValueFunction;\n          },\n          checkForgottenReturns: checkForgottenReturns,\n          setBounds: setBounds,\n          warn: warn,\n          deprecated: deprecated,\n          CapturedTrace: CapturedTrace,\n          fireDomEvent: fireDomEvent,\n          fireGlobalEvent: fireGlobalEvent\n        };\n      };\n    }, {\n      \"./errors\": 12,\n      \"./es5\": 13,\n      \"./util\": 36\n    }],\n    10: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise) {\n        function returner() {\n          return this.value;\n        }\n\n        function thrower() {\n          throw this.reason;\n        }\n\n        Promise.prototype[\"return\"] = Promise.prototype.thenReturn = function (value) {\n          if (value instanceof Promise) value.suppressUnhandledRejections();\n          return this._then(returner, undefined, undefined, {\n            value: value\n          }, undefined);\n        };\n\n        Promise.prototype[\"throw\"] = Promise.prototype.thenThrow = function (reason) {\n          return this._then(thrower, undefined, undefined, {\n            reason: reason\n          }, undefined);\n        };\n\n        Promise.prototype.catchThrow = function (reason) {\n          if (arguments.length <= 1) {\n            return this._then(undefined, thrower, undefined, {\n              reason: reason\n            }, undefined);\n          } else {\n            var _reason = arguments[1];\n\n            var handler = function handler() {\n              throw _reason;\n            };\n\n            return this.caught(reason, handler);\n          }\n        };\n\n        Promise.prototype.catchReturn = function (value) {\n          if (arguments.length <= 1) {\n            if (value instanceof Promise) value.suppressUnhandledRejections();\n            return this._then(undefined, returner, undefined, {\n              value: value\n            }, undefined);\n          } else {\n            var _value = arguments[1];\n            if (_value instanceof Promise) _value.suppressUnhandledRejections();\n\n            var handler = function handler() {\n              return _value;\n            };\n\n            return this.caught(value, handler);\n          }\n        };\n      };\n    }, {}],\n    11: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL) {\n        var PromiseReduce = Promise.reduce;\n        var PromiseAll = Promise.all;\n\n        function promiseAllThis() {\n          return PromiseAll(this);\n        }\n\n        function PromiseMapSeries(promises, fn) {\n          return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n        }\n\n        Promise.prototype.each = function (fn) {\n          return PromiseReduce(this, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, this, undefined);\n        };\n\n        Promise.prototype.mapSeries = function (fn) {\n          return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n        };\n\n        Promise.each = function (promises, fn) {\n          return PromiseReduce(promises, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, promises, undefined);\n        };\n\n        Promise.mapSeries = PromiseMapSeries;\n      };\n    }, {}],\n    12: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      var es5 = _dereq_(\"./es5\");\n\n      var Objectfreeze = es5.freeze;\n\n      var util = _dereq_(\"./util\");\n\n      var inherits = util.inherits;\n      var notEnumerableProp = util.notEnumerableProp;\n\n      function subError(nameProperty, defaultMessage) {\n        function SubError(message) {\n          if (!(this instanceof SubError)) return new SubError(message);\n          notEnumerableProp(this, \"message\", typeof message === \"string\" ? message : defaultMessage);\n          notEnumerableProp(this, \"name\", nameProperty);\n\n          if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n          } else {\n            Error.call(this);\n          }\n        }\n\n        inherits(SubError, Error);\n        return SubError;\n      }\n\n      var _TypeError, _RangeError;\n\n      var Warning = subError(\"Warning\", \"warning\");\n      var CancellationError = subError(\"CancellationError\", \"cancellation error\");\n      var TimeoutError = subError(\"TimeoutError\", \"timeout error\");\n      var AggregateError = subError(\"AggregateError\", \"aggregate error\");\n\n      try {\n        _TypeError = TypeError;\n        _RangeError = RangeError;\n      } catch (e) {\n        _TypeError = subError(\"TypeError\", \"type error\");\n        _RangeError = subError(\"RangeError\", \"range error\");\n      }\n\n      var methods = (\"join pop push shift unshift slice filter forEach some \" + \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\n      for (var i = 0; i < methods.length; ++i) {\n        if (typeof Array.prototype[methods[i]] === \"function\") {\n          AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n        }\n      }\n\n      es5.defineProperty(AggregateError.prototype, \"length\", {\n        value: 0,\n        configurable: false,\n        writable: true,\n        enumerable: true\n      });\n      AggregateError.prototype[\"isOperational\"] = true;\n      var level = 0;\n\n      AggregateError.prototype.toString = function () {\n        var indent = Array(level * 4 + 1).join(\" \");\n        var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n        level++;\n        indent = Array(level * 4 + 1).join(\" \");\n\n        for (var i = 0; i < this.length; ++i) {\n          var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n          var lines = str.split(\"\\n\");\n\n          for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n          }\n\n          str = lines.join(\"\\n\");\n          ret += str + \"\\n\";\n        }\n\n        level--;\n        return ret;\n      };\n\n      function OperationalError(message) {\n        if (!(this instanceof OperationalError)) return new OperationalError(message);\n        notEnumerableProp(this, \"name\", \"OperationalError\");\n        notEnumerableProp(this, \"message\", message);\n        this.cause = message;\n        this[\"isOperational\"] = true;\n\n        if (message instanceof Error) {\n          notEnumerableProp(this, \"message\", message.message);\n          notEnumerableProp(this, \"stack\", message.stack);\n        } else if (Error.captureStackTrace) {\n          Error.captureStackTrace(this, this.constructor);\n        }\n      }\n\n      inherits(OperationalError, Error);\n      var errorTypes = Error[\"__BluebirdErrorTypes__\"];\n\n      if (!errorTypes) {\n        errorTypes = Objectfreeze({\n          CancellationError: CancellationError,\n          TimeoutError: TimeoutError,\n          OperationalError: OperationalError,\n          RejectionError: OperationalError,\n          AggregateError: AggregateError\n        });\n        es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n          value: errorTypes,\n          writable: false,\n          enumerable: false,\n          configurable: false\n        });\n      }\n\n      module.exports = {\n        Error: Error,\n        TypeError: _TypeError,\n        RangeError: _RangeError,\n        CancellationError: errorTypes.CancellationError,\n        OperationalError: errorTypes.OperationalError,\n        TimeoutError: errorTypes.TimeoutError,\n        AggregateError: errorTypes.AggregateError,\n        Warning: Warning\n      };\n    }, {\n      \"./es5\": 13,\n      \"./util\": 36\n    }],\n    13: [function (_dereq_, module, exports) {\n      var isES5 = function () {\n        \"use strict\";\n\n        return this === undefined;\n      }();\n\n      if (isES5) {\n        module.exports = {\n          freeze: Object.freeze,\n          defineProperty: Object.defineProperty,\n          getDescriptor: Object.getOwnPropertyDescriptor,\n          keys: Object.keys,\n          names: Object.getOwnPropertyNames,\n          getPrototypeOf: Object.getPrototypeOf,\n          isArray: Array.isArray,\n          isES5: isES5,\n          propertyIsWritable: function propertyIsWritable(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n          }\n        };\n      } else {\n        var has = {}.hasOwnProperty;\n        var str = {}.toString;\n        var proto = {}.constructor.prototype;\n\n        var ObjectKeys = function ObjectKeys(o) {\n          var ret = [];\n\n          for (var key in o) {\n            if (has.call(o, key)) {\n              ret.push(key);\n            }\n          }\n\n          return ret;\n        };\n\n        var ObjectGetDescriptor = function ObjectGetDescriptor(o, key) {\n          return {\n            value: o[key]\n          };\n        };\n\n        var ObjectDefineProperty = function ObjectDefineProperty(o, key, desc) {\n          o[key] = desc.value;\n          return o;\n        };\n\n        var ObjectFreeze = function ObjectFreeze(obj) {\n          return obj;\n        };\n\n        var ObjectGetPrototypeOf = function ObjectGetPrototypeOf(obj) {\n          try {\n            return Object(obj).constructor.prototype;\n          } catch (e) {\n            return proto;\n          }\n        };\n\n        var ArrayIsArray = function ArrayIsArray(obj) {\n          try {\n            return str.call(obj) === \"[object Array]\";\n          } catch (e) {\n            return false;\n          }\n        };\n\n        module.exports = {\n          isArray: ArrayIsArray,\n          keys: ObjectKeys,\n          names: ObjectKeys,\n          defineProperty: ObjectDefineProperty,\n          getDescriptor: ObjectGetDescriptor,\n          freeze: ObjectFreeze,\n          getPrototypeOf: ObjectGetPrototypeOf,\n          isES5: isES5,\n          propertyIsWritable: function propertyIsWritable() {\n            return true;\n          }\n        };\n      }\n    }, {}],\n    14: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL) {\n        var PromiseMap = Promise.map;\n\n        Promise.prototype.filter = function (fn, options) {\n          return PromiseMap(this, fn, options, INTERNAL);\n        };\n\n        Promise.filter = function (promises, fn, options) {\n          return PromiseMap(promises, fn, options, INTERNAL);\n        };\n      };\n    }, {}],\n    15: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, tryConvertToPromise, NEXT_FILTER) {\n        var util = _dereq_(\"./util\");\n\n        var CancellationError = Promise.CancellationError;\n        var errorObj = util.errorObj;\n\n        var catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\n\n        function PassThroughHandlerContext(promise, type, handler) {\n          this.promise = promise;\n          this.type = type;\n          this.handler = handler;\n          this.called = false;\n          this.cancelPromise = null;\n        }\n\n        PassThroughHandlerContext.prototype.isFinallyHandler = function () {\n          return this.type === 0;\n        };\n\n        function FinallyHandlerCancelReaction(finallyHandler) {\n          this.finallyHandler = finallyHandler;\n        }\n\n        FinallyHandlerCancelReaction.prototype._resultCancelled = function () {\n          checkCancel(this.finallyHandler);\n        };\n\n        function checkCancel(ctx, reason) {\n          if (ctx.cancelPromise != null) {\n            if (arguments.length > 1) {\n              ctx.cancelPromise._reject(reason);\n            } else {\n              ctx.cancelPromise._cancel();\n            }\n\n            ctx.cancelPromise = null;\n            return true;\n          }\n\n          return false;\n        }\n\n        function succeed() {\n          return finallyHandler.call(this, this.promise._target()._settledValue());\n        }\n\n        function fail(reason) {\n          if (checkCancel(this, reason)) return;\n          errorObj.e = reason;\n          return errorObj;\n        }\n\n        function finallyHandler(reasonOrValue) {\n          var promise = this.promise;\n          var handler = this.handler;\n\n          if (!this.called) {\n            this.called = true;\n            var ret = this.isFinallyHandler() ? handler.call(promise._boundValue()) : handler.call(promise._boundValue(), reasonOrValue);\n\n            if (ret === NEXT_FILTER) {\n              return ret;\n            } else if (ret !== undefined) {\n              promise._setReturnedNonUndefined();\n\n              var maybePromise = tryConvertToPromise(ret, promise);\n\n              if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                  if (maybePromise._isCancelled()) {\n                    var reason = new CancellationError(\"late cancellation observer\");\n\n                    promise._attachExtraTrace(reason);\n\n                    errorObj.e = reason;\n                    return errorObj;\n                  } else if (maybePromise.isPending()) {\n                    maybePromise._attachCancellationCallback(new FinallyHandlerCancelReaction(this));\n                  }\n                }\n\n                return maybePromise._then(succeed, fail, undefined, this, undefined);\n              }\n            }\n          }\n\n          if (promise.isRejected()) {\n            checkCancel(this);\n            errorObj.e = reasonOrValue;\n            return errorObj;\n          } else {\n            checkCancel(this);\n            return reasonOrValue;\n          }\n        }\n\n        Promise.prototype._passThrough = function (handler, type, success, fail) {\n          if (typeof handler !== \"function\") return this.then();\n          return this._then(success, fail, undefined, new PassThroughHandlerContext(this, type, handler), undefined);\n        };\n\n        Promise.prototype.lastly = Promise.prototype[\"finally\"] = function (handler) {\n          return this._passThrough(handler, 0, finallyHandler, finallyHandler);\n        };\n\n        Promise.prototype.tap = function (handler) {\n          return this._passThrough(handler, 1, finallyHandler);\n        };\n\n        Promise.prototype.tapCatch = function (handlerOrPredicate) {\n          var len = arguments.length;\n\n          if (len === 1) {\n            return this._passThrough(handlerOrPredicate, 1, undefined, finallyHandler);\n          } else {\n            var catchInstances = new Array(len - 1),\n                j = 0,\n                i;\n\n            for (i = 0; i < len - 1; ++i) {\n              var item = arguments[i];\n\n              if (util.isObject(item)) {\n                catchInstances[j++] = item;\n              } else {\n                return Promise.reject(new TypeError(\"tapCatch statement predicate: \" + \"expecting an object but got \" + util.classString(item)));\n              }\n            }\n\n            catchInstances.length = j;\n            var handler = arguments[i];\n            return this._passThrough(catchFilter(catchInstances, handler, this), 1, undefined, finallyHandler);\n          }\n        };\n\n        return PassThroughHandlerContext;\n      };\n    }, {\n      \"./catch_filter\": 7,\n      \"./util\": 36\n    }],\n    16: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug) {\n        var errors = _dereq_(\"./errors\");\n\n        var TypeError = errors.TypeError;\n\n        var util = _dereq_(\"./util\");\n\n        var errorObj = util.errorObj;\n        var tryCatch = util.tryCatch;\n        var yieldHandlers = [];\n\n        function promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n          for (var i = 0; i < yieldHandlers.length; ++i) {\n            traceParent._pushContext();\n\n            var result = tryCatch(yieldHandlers[i])(value);\n\n            traceParent._popContext();\n\n            if (result === errorObj) {\n              traceParent._pushContext();\n\n              var ret = Promise.reject(errorObj.e);\n\n              traceParent._popContext();\n\n              return ret;\n            }\n\n            var maybePromise = tryConvertToPromise(result, traceParent);\n            if (maybePromise instanceof Promise) return maybePromise;\n          }\n\n          return null;\n        }\n\n        function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n          if (debug.cancellation()) {\n            var internal = new Promise(INTERNAL);\n\n            var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n\n            this._promise = internal.lastly(function () {\n              return _finallyPromise;\n            });\n\n            internal._captureStackTrace();\n\n            internal._setOnCancel(this);\n          } else {\n            var promise = this._promise = new Promise(INTERNAL);\n\n            promise._captureStackTrace();\n          }\n\n          this._stack = stack;\n          this._generatorFunction = generatorFunction;\n          this._receiver = receiver;\n          this._generator = undefined;\n          this._yieldHandlers = typeof yieldHandler === \"function\" ? [yieldHandler].concat(yieldHandlers) : yieldHandlers;\n          this._yieldedPromise = null;\n          this._cancellationPhase = false;\n        }\n\n        util.inherits(PromiseSpawn, Proxyable);\n\n        PromiseSpawn.prototype._isResolved = function () {\n          return this._promise === null;\n        };\n\n        PromiseSpawn.prototype._cleanup = function () {\n          this._promise = this._generator = null;\n\n          if (debug.cancellation() && this._finallyPromise !== null) {\n            this._finallyPromise._fulfill();\n\n            this._finallyPromise = null;\n          }\n        };\n\n        PromiseSpawn.prototype._promiseCancelled = function () {\n          if (this._isResolved()) return;\n          var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n          var result;\n\n          if (!implementsReturn) {\n            var reason = new Promise.CancellationError(\"generator .return() sentinel\");\n            Promise.coroutine.returnSentinel = reason;\n\n            this._promise._attachExtraTrace(reason);\n\n            this._promise._pushContext();\n\n            result = tryCatch(this._generator[\"throw\"]).call(this._generator, reason);\n\n            this._promise._popContext();\n          } else {\n            this._promise._pushContext();\n\n            result = tryCatch(this._generator[\"return\"]).call(this._generator, undefined);\n\n            this._promise._popContext();\n          }\n\n          this._cancellationPhase = true;\n          this._yieldedPromise = null;\n\n          this._continue(result);\n        };\n\n        PromiseSpawn.prototype._promiseFulfilled = function (value) {\n          this._yieldedPromise = null;\n\n          this._promise._pushContext();\n\n          var result = tryCatch(this._generator.next).call(this._generator, value);\n\n          this._promise._popContext();\n\n          this._continue(result);\n        };\n\n        PromiseSpawn.prototype._promiseRejected = function (reason) {\n          this._yieldedPromise = null;\n\n          this._promise._attachExtraTrace(reason);\n\n          this._promise._pushContext();\n\n          var result = tryCatch(this._generator[\"throw\"]).call(this._generator, reason);\n\n          this._promise._popContext();\n\n          this._continue(result);\n        };\n\n        PromiseSpawn.prototype._resultCancelled = function () {\n          if (this._yieldedPromise instanceof Promise) {\n            var promise = this._yieldedPromise;\n            this._yieldedPromise = null;\n            promise.cancel();\n          }\n        };\n\n        PromiseSpawn.prototype.promise = function () {\n          return this._promise;\n        };\n\n        PromiseSpawn.prototype._run = function () {\n          this._generator = this._generatorFunction.call(this._receiver);\n          this._receiver = this._generatorFunction = undefined;\n\n          this._promiseFulfilled(undefined);\n        };\n\n        PromiseSpawn.prototype._continue = function (result) {\n          var promise = this._promise;\n\n          if (result === errorObj) {\n            this._cleanup();\n\n            if (this._cancellationPhase) {\n              return promise.cancel();\n            } else {\n              return promise._rejectCallback(result.e, false);\n            }\n          }\n\n          var value = result.value;\n\n          if (result.done === true) {\n            this._cleanup();\n\n            if (this._cancellationPhase) {\n              return promise.cancel();\n            } else {\n              return promise._resolveCallback(value);\n            }\n          } else {\n            var maybePromise = tryConvertToPromise(value, this._promise);\n\n            if (!(maybePromise instanceof Promise)) {\n              maybePromise = promiseFromYieldHandler(maybePromise, this._yieldHandlers, this._promise);\n\n              if (maybePromise === null) {\n                this._promiseRejected(new TypeError(\"A value %s was yielded that could not be treated as a promise\\n\\n    See http://goo.gl/MqrFmX\\n\\n\".replace(\"%s\", String(value)) + \"From coroutine:\\n\" + this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")));\n\n                return;\n              }\n            }\n\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n\n            if ((bitField & 50397184) === 0) {\n              this._yieldedPromise = maybePromise;\n\n              maybePromise._proxy(this, null);\n            } else if ((bitField & 33554432) !== 0) {\n              Promise._async.invoke(this._promiseFulfilled, this, maybePromise._value());\n            } else if ((bitField & 16777216) !== 0) {\n              Promise._async.invoke(this._promiseRejected, this, maybePromise._reason());\n            } else {\n              this._promiseCancelled();\n            }\n          }\n        };\n\n        Promise.coroutine = function (generatorFunction, options) {\n          if (typeof generatorFunction !== \"function\") {\n            throw new TypeError(\"generatorFunction must be a function\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          var yieldHandler = Object(options).yieldHandler;\n          var PromiseSpawn$ = PromiseSpawn;\n          var stack = new Error().stack;\n          return function () {\n            var generator = generatorFunction.apply(this, arguments);\n            var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler, stack);\n            var ret = spawn.promise();\n            spawn._generator = generator;\n\n            spawn._promiseFulfilled(undefined);\n\n            return ret;\n          };\n        };\n\n        Promise.coroutine.addYieldHandler = function (fn) {\n          if (typeof fn !== \"function\") {\n            throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          yieldHandlers.push(fn);\n        };\n\n        Promise.spawn = function (generatorFunction) {\n          debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n\n          if (typeof generatorFunction !== \"function\") {\n            return apiRejection(\"generatorFunction must be a function\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          var spawn = new PromiseSpawn(generatorFunction, this);\n          var ret = spawn.promise();\n\n          spawn._run(Promise.spawn);\n\n          return ret;\n        };\n      };\n    }, {\n      \"./errors\": 12,\n      \"./util\": 36\n    }],\n    17: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain) {\n        var util = _dereq_(\"./util\");\n\n        var canEvaluate = util.canEvaluate;\n        var tryCatch = util.tryCatch;\n        var errorObj = util.errorObj;\n        var reject;\n\n        if (false) { var i, promiseSetters, thenCallbacks, holderClasses, generateHolderClass, promiseSetter, thenCallback; }\n\n        Promise.join = function () {\n          var last = arguments.length - 1;\n          var fn;\n\n          if (last > 0 && typeof arguments[last] === \"function\") {\n            fn = arguments[last];\n\n            if (false) { var domain, bitField, maybePromise, i, callbacks, holder, HolderClass, ret; }\n          }\n\n          var args = [].slice.call(arguments);\n          ;\n          if (fn) args.pop();\n          var ret = new PromiseArray(args).promise();\n          return fn !== undefined ? ret.spread(fn) : ret;\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    18: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {\n        var getDomain = Promise._getDomain;\n\n        var util = _dereq_(\"./util\");\n\n        var tryCatch = util.tryCatch;\n        var errorObj = util.errorObj;\n        var async = Promise._async;\n\n        function MappingPromiseArray(promises, fn, limit, _filter) {\n          this.constructor$(promises);\n\n          this._promise._captureStackTrace();\n\n          var domain = getDomain();\n          this._callback = domain === null ? fn : util.domainBind(domain, fn);\n          this._preservedValues = _filter === INTERNAL ? new Array(this.length()) : null;\n          this._limit = limit;\n          this._inFlight = 0;\n          this._queue = [];\n          async.invoke(this._asyncInit, this, undefined);\n        }\n\n        util.inherits(MappingPromiseArray, PromiseArray);\n\n        MappingPromiseArray.prototype._asyncInit = function () {\n          this._init$(undefined, -2);\n        };\n\n        MappingPromiseArray.prototype._init = function () {};\n\n        MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n          var values = this._values;\n          var length = this.length();\n          var preservedValues = this._preservedValues;\n          var limit = this._limit;\n\n          if (index < 0) {\n            index = index * -1 - 1;\n            values[index] = value;\n\n            if (limit >= 1) {\n              this._inFlight--;\n\n              this._drainQueue();\n\n              if (this._isResolved()) return true;\n            }\n          } else {\n            if (limit >= 1 && this._inFlight >= limit) {\n              values[index] = value;\n\n              this._queue.push(index);\n\n              return false;\n            }\n\n            if (preservedValues !== null) preservedValues[index] = value;\n            var promise = this._promise;\n            var callback = this._callback;\n\n            var receiver = promise._boundValue();\n\n            promise._pushContext();\n\n            var ret = tryCatch(callback).call(receiver, value, index, length);\n\n            var promiseCreated = promise._popContext();\n\n            debug.checkForgottenReturns(ret, promiseCreated, preservedValues !== null ? \"Promise.filter\" : \"Promise.map\", promise);\n\n            if (ret === errorObj) {\n              this._reject(ret.e);\n\n              return true;\n            }\n\n            var maybePromise = tryConvertToPromise(ret, this._promise);\n\n            if (maybePromise instanceof Promise) {\n              maybePromise = maybePromise._target();\n              var bitField = maybePromise._bitField;\n              ;\n\n              if ((bitField & 50397184) === 0) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n\n                maybePromise._proxy(this, (index + 1) * -1);\n\n                return false;\n              } else if ((bitField & 33554432) !== 0) {\n                ret = maybePromise._value();\n              } else if ((bitField & 16777216) !== 0) {\n                this._reject(maybePromise._reason());\n\n                return true;\n              } else {\n                this._cancel();\n\n                return true;\n              }\n            }\n\n            values[index] = ret;\n          }\n\n          var totalResolved = ++this._totalResolved;\n\n          if (totalResolved >= length) {\n            if (preservedValues !== null) {\n              this._filter(values, preservedValues);\n            } else {\n              this._resolve(values);\n            }\n\n            return true;\n          }\n\n          return false;\n        };\n\n        MappingPromiseArray.prototype._drainQueue = function () {\n          var queue = this._queue;\n          var limit = this._limit;\n          var values = this._values;\n\n          while (queue.length > 0 && this._inFlight < limit) {\n            if (this._isResolved()) return;\n            var index = queue.pop();\n\n            this._promiseFulfilled(values[index], index);\n          }\n        };\n\n        MappingPromiseArray.prototype._filter = function (booleans, values) {\n          var len = values.length;\n          var ret = new Array(len);\n          var j = 0;\n\n          for (var i = 0; i < len; ++i) {\n            if (booleans[i]) ret[j++] = values[i];\n          }\n\n          ret.length = j;\n\n          this._resolve(ret);\n        };\n\n        MappingPromiseArray.prototype.preservedValues = function () {\n          return this._preservedValues;\n        };\n\n        function map(promises, fn, options, _filter) {\n          if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          var limit = 0;\n\n          if (options !== undefined) {\n            if (_typeof(options) === \"object\" && options !== null) {\n              if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(new TypeError(\"'concurrency' must be a number but it is \" + util.classString(options.concurrency)));\n              }\n\n              limit = options.concurrency;\n            } else {\n              return Promise.reject(new TypeError(\"options argument must be an object but it is \" + util.classString(options)));\n            }\n          }\n\n          limit = typeof limit === \"number\" && isFinite(limit) && limit >= 1 ? limit : 0;\n          return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n        }\n\n        Promise.prototype.map = function (fn, options) {\n          return map(this, fn, options, null);\n        };\n\n        Promise.map = function (promises, fn, options, _filter) {\n          return map(promises, fn, options, _filter);\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    19: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\n        var util = _dereq_(\"./util\");\n\n        var tryCatch = util.tryCatch;\n\n        Promise.method = function (fn) {\n          if (typeof fn !== \"function\") {\n            throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          return function () {\n            var ret = new Promise(INTERNAL);\n\n            ret._captureStackTrace();\n\n            ret._pushContext();\n\n            var value = tryCatch(fn).apply(this, arguments);\n\n            var promiseCreated = ret._popContext();\n\n            debug.checkForgottenReturns(value, promiseCreated, \"Promise.method\", ret);\n\n            ret._resolveFromSyncValue(value);\n\n            return ret;\n          };\n        };\n\n        Promise.attempt = Promise[\"try\"] = function (fn) {\n          if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          var ret = new Promise(INTERNAL);\n\n          ret._captureStackTrace();\n\n          ret._pushContext();\n\n          var value;\n\n          if (arguments.length > 1) {\n            debug.deprecated(\"calling Promise.try with more than 1 argument\");\n            var arg = arguments[1];\n            var ctx = arguments[2];\n            value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);\n          } else {\n            value = tryCatch(fn)();\n          }\n\n          var promiseCreated = ret._popContext();\n\n          debug.checkForgottenReturns(value, promiseCreated, \"Promise.try\", ret);\n\n          ret._resolveFromSyncValue(value);\n\n          return ret;\n        };\n\n        Promise.prototype._resolveFromSyncValue = function (value) {\n          if (value === util.errorObj) {\n            this._rejectCallback(value.e, false);\n          } else {\n            this._resolveCallback(value, true);\n          }\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    20: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      var util = _dereq_(\"./util\");\n\n      var maybeWrapAsError = util.maybeWrapAsError;\n\n      var errors = _dereq_(\"./errors\");\n\n      var OperationalError = errors.OperationalError;\n\n      var es5 = _dereq_(\"./es5\");\n\n      function isUntypedError(obj) {\n        return obj instanceof Error && es5.getPrototypeOf(obj) === Error.prototype;\n      }\n\n      var rErrorKey = /^(?:name|message|stack|cause)$/;\n\n      function wrapAsOperationalError(obj) {\n        var ret;\n\n        if (isUntypedError(obj)) {\n          ret = new OperationalError(obj);\n          ret.name = obj.name;\n          ret.message = obj.message;\n          ret.stack = obj.stack;\n          var keys = es5.keys(obj);\n\n          for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n\n            if (!rErrorKey.test(key)) {\n              ret[key] = obj[key];\n            }\n          }\n\n          return ret;\n        }\n\n        util.markAsOriginatingFromRejection(obj);\n        return obj;\n      }\n\n      function nodebackForPromise(promise, multiArgs) {\n        return function (err, value) {\n          if (promise === null) return;\n\n          if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n\n            promise._attachExtraTrace(wrapped);\n\n            promise._reject(wrapped);\n          } else if (!multiArgs) {\n            promise._fulfill(value);\n          } else {\n            var args = [].slice.call(arguments, 1);\n            ;\n\n            promise._fulfill(args);\n          }\n\n          promise = null;\n        };\n      }\n\n      module.exports = nodebackForPromise;\n    }, {\n      \"./errors\": 12,\n      \"./es5\": 13,\n      \"./util\": 36\n    }],\n    21: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise) {\n        var util = _dereq_(\"./util\");\n\n        var async = Promise._async;\n        var tryCatch = util.tryCatch;\n        var errorObj = util.errorObj;\n\n        function spreadAdapter(val, nodeback) {\n          var promise = this;\n          if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n          var ret = tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n\n          if (ret === errorObj) {\n            async.throwLater(ret.e);\n          }\n        }\n\n        function successAdapter(val, nodeback) {\n          var promise = this;\n\n          var receiver = promise._boundValue();\n\n          var ret = val === undefined ? tryCatch(nodeback).call(receiver, null) : tryCatch(nodeback).call(receiver, null, val);\n\n          if (ret === errorObj) {\n            async.throwLater(ret.e);\n          }\n        }\n\n        function errorAdapter(reason, nodeback) {\n          var promise = this;\n\n          if (!reason) {\n            var newReason = new Error(reason + \"\");\n            newReason.cause = reason;\n            reason = newReason;\n          }\n\n          var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n\n          if (ret === errorObj) {\n            async.throwLater(ret.e);\n          }\n        }\n\n        Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback, options) {\n          if (typeof nodeback == \"function\") {\n            var adapter = successAdapter;\n\n            if (options !== undefined && Object(options).spread) {\n              adapter = spreadAdapter;\n            }\n\n            this._then(adapter, errorAdapter, undefined, this, nodeback);\n          }\n\n          return this;\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    22: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function () {\n        var makeSelfResolutionError = function makeSelfResolutionError() {\n          return new TypeError(\"circular promise resolution chain\\n\\n    See http://goo.gl/MqrFmX\\n\");\n        };\n\n        var reflectHandler = function reflectHandler() {\n          return new Promise.PromiseInspection(this._target());\n        };\n\n        var apiRejection = function apiRejection(msg) {\n          return Promise.reject(new TypeError(msg));\n        };\n\n        function Proxyable() {}\n\n        var UNDEFINED_BINDING = {};\n\n        var util = _dereq_(\"./util\");\n\n        var getDomain;\n\n        if (util.isNode) {\n          getDomain = function getDomain() {\n            var ret = process.domain;\n            if (ret === undefined) ret = null;\n            return ret;\n          };\n        } else {\n          getDomain = function getDomain() {\n            return null;\n          };\n        }\n\n        util.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\n        var es5 = _dereq_(\"./es5\");\n\n        var Async = _dereq_(\"./async\");\n\n        var async = new Async();\n        es5.defineProperty(Promise, \"_async\", {\n          value: async\n        });\n\n        var errors = _dereq_(\"./errors\");\n\n        var TypeError = Promise.TypeError = errors.TypeError;\n        Promise.RangeError = errors.RangeError;\n        var CancellationError = Promise.CancellationError = errors.CancellationError;\n        Promise.TimeoutError = errors.TimeoutError;\n        Promise.OperationalError = errors.OperationalError;\n        Promise.RejectionError = errors.OperationalError;\n        Promise.AggregateError = errors.AggregateError;\n\n        var INTERNAL = function INTERNAL() {};\n\n        var APPLY = {};\n        var NEXT_FILTER = {};\n\n        var tryConvertToPromise = _dereq_(\"./thenables\")(Promise, INTERNAL);\n\n        var PromiseArray = _dereq_(\"./promise_array\")(Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable);\n\n        var Context = _dereq_(\"./context\")(Promise);\n        /*jshint unused:false*/\n\n\n        var createContext = Context.create;\n\n        var debug = _dereq_(\"./debuggability\")(Promise, Context);\n\n        var CapturedTrace = debug.CapturedTrace;\n\n        var PassThroughHandlerContext = _dereq_(\"./finally\")(Promise, tryConvertToPromise, NEXT_FILTER);\n\n        var catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\n\n        var nodebackForPromise = _dereq_(\"./nodeback\");\n\n        var errorObj = util.errorObj;\n        var tryCatch = util.tryCatch;\n\n        function check(self, executor) {\n          if (self == null || self.constructor !== Promise) {\n            throw new TypeError(\"the promise constructor cannot be invoked directly\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          if (typeof executor !== \"function\") {\n            throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n          }\n        }\n\n        function Promise(executor) {\n          if (executor !== INTERNAL) {\n            check(this, executor);\n          }\n\n          this._bitField = 0;\n          this._fulfillmentHandler0 = undefined;\n          this._rejectionHandler0 = undefined;\n          this._promise0 = undefined;\n          this._receiver0 = undefined;\n\n          this._resolveFromExecutor(executor);\n\n          this._promiseCreated();\n\n          this._fireEvent(\"promiseCreated\", this);\n        }\n\n        Promise.prototype.toString = function () {\n          return \"[object Promise]\";\n        };\n\n        Promise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n          var len = arguments.length;\n\n          if (len > 1) {\n            var catchInstances = new Array(len - 1),\n                j = 0,\n                i;\n\n            for (i = 0; i < len - 1; ++i) {\n              var item = arguments[i];\n\n              if (util.isObject(item)) {\n                catchInstances[j++] = item;\n              } else {\n                return apiRejection(\"Catch statement predicate: \" + \"expecting an object but got \" + util.classString(item));\n              }\n            }\n\n            catchInstances.length = j;\n            fn = arguments[i];\n            return this.then(undefined, catchFilter(catchInstances, fn, this));\n          }\n\n          return this.then(undefined, fn);\n        };\n\n        Promise.prototype.reflect = function () {\n          return this._then(reflectHandler, reflectHandler, undefined, this, undefined);\n        };\n\n        Promise.prototype.then = function (didFulfill, didReject) {\n          if (debug.warnings() && arguments.length > 0 && typeof didFulfill !== \"function\" && typeof didReject !== \"function\") {\n            var msg = \".then() only accepts functions but was passed: \" + util.classString(didFulfill);\n\n            if (arguments.length > 1) {\n              msg += \", \" + util.classString(didReject);\n            }\n\n            this._warn(msg);\n          }\n\n          return this._then(didFulfill, didReject, undefined, undefined, undefined);\n        };\n\n        Promise.prototype.done = function (didFulfill, didReject) {\n          var promise = this._then(didFulfill, didReject, undefined, undefined, undefined);\n\n          promise._setIsFinal();\n        };\n\n        Promise.prototype.spread = function (fn) {\n          if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n        };\n\n        Promise.prototype.toJSON = function () {\n          var ret = {\n            isFulfilled: false,\n            isRejected: false,\n            fulfillmentValue: undefined,\n            rejectionReason: undefined\n          };\n\n          if (this.isFulfilled()) {\n            ret.fulfillmentValue = this.value();\n            ret.isFulfilled = true;\n          } else if (this.isRejected()) {\n            ret.rejectionReason = this.reason();\n            ret.isRejected = true;\n          }\n\n          return ret;\n        };\n\n        Promise.prototype.all = function () {\n          if (arguments.length > 0) {\n            this._warn(\".all() was passed arguments but it does not take any\");\n          }\n\n          return new PromiseArray(this).promise();\n        };\n\n        Promise.prototype.error = function (fn) {\n          return this.caught(util.originatesFromRejection, fn);\n        };\n\n        Promise.getNewLibraryCopy = module.exports;\n\n        Promise.is = function (val) {\n          return val instanceof Promise;\n        };\n\n        Promise.fromNode = Promise.fromCallback = function (fn) {\n          var ret = new Promise(INTERNAL);\n\n          ret._captureStackTrace();\n\n          var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : false;\n          var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n\n          if (result === errorObj) {\n            ret._rejectCallback(result.e, true);\n          }\n\n          if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n          return ret;\n        };\n\n        Promise.all = function (promises) {\n          return new PromiseArray(promises).promise();\n        };\n\n        Promise.cast = function (obj) {\n          var ret = tryConvertToPromise(obj);\n\n          if (!(ret instanceof Promise)) {\n            ret = new Promise(INTERNAL);\n\n            ret._captureStackTrace();\n\n            ret._setFulfilled();\n\n            ret._rejectionHandler0 = obj;\n          }\n\n          return ret;\n        };\n\n        Promise.resolve = Promise.fulfilled = Promise.cast;\n\n        Promise.reject = Promise.rejected = function (reason) {\n          var ret = new Promise(INTERNAL);\n\n          ret._captureStackTrace();\n\n          ret._rejectCallback(reason, true);\n\n          return ret;\n        };\n\n        Promise.setScheduler = function (fn) {\n          if (typeof fn !== \"function\") {\n            throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          return async.setScheduler(fn);\n        };\n\n        Promise.prototype._then = function (didFulfill, didReject, _, receiver, internalData) {\n          var haveInternalData = internalData !== undefined;\n          var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n\n          var target = this._target();\n\n          var bitField = target._bitField;\n\n          if (!haveInternalData) {\n            promise._propagateFrom(this, 3);\n\n            promise._captureStackTrace();\n\n            if (receiver === undefined && (this._bitField & 2097152) !== 0) {\n              if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n              } else {\n                receiver = target === this ? undefined : this._boundTo;\n              }\n            }\n\n            this._fireEvent(\"promiseChained\", this, promise);\n          }\n\n          var domain = getDomain();\n\n          if (!((bitField & 50397184) === 0)) {\n            var handler,\n                value,\n                settler = target._settlePromiseCtx;\n\n            if ((bitField & 33554432) !== 0) {\n              value = target._rejectionHandler0;\n              handler = didFulfill;\n            } else if ((bitField & 16777216) !== 0) {\n              value = target._fulfillmentHandler0;\n              handler = didReject;\n\n              target._unsetRejectionIsUnhandled();\n            } else {\n              settler = target._settlePromiseLateCancellationObserver;\n              value = new CancellationError(\"late cancellation observer\");\n\n              target._attachExtraTrace(value);\n\n              handler = didReject;\n            }\n\n            async.invoke(settler, target, {\n              handler: domain === null ? handler : typeof handler === \"function\" && util.domainBind(domain, handler),\n              promise: promise,\n              receiver: receiver,\n              value: value\n            });\n          } else {\n            target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n          }\n\n          return promise;\n        };\n\n        Promise.prototype._length = function () {\n          return this._bitField & 65535;\n        };\n\n        Promise.prototype._isFateSealed = function () {\n          return (this._bitField & 117506048) !== 0;\n        };\n\n        Promise.prototype._isFollowing = function () {\n          return (this._bitField & 67108864) === 67108864;\n        };\n\n        Promise.prototype._setLength = function (len) {\n          this._bitField = this._bitField & -65536 | len & 65535;\n        };\n\n        Promise.prototype._setFulfilled = function () {\n          this._bitField = this._bitField | 33554432;\n\n          this._fireEvent(\"promiseFulfilled\", this);\n        };\n\n        Promise.prototype._setRejected = function () {\n          this._bitField = this._bitField | 16777216;\n\n          this._fireEvent(\"promiseRejected\", this);\n        };\n\n        Promise.prototype._setFollowing = function () {\n          this._bitField = this._bitField | 67108864;\n\n          this._fireEvent(\"promiseResolved\", this);\n        };\n\n        Promise.prototype._setIsFinal = function () {\n          this._bitField = this._bitField | 4194304;\n        };\n\n        Promise.prototype._isFinal = function () {\n          return (this._bitField & 4194304) > 0;\n        };\n\n        Promise.prototype._unsetCancelled = function () {\n          this._bitField = this._bitField & ~65536;\n        };\n\n        Promise.prototype._setCancelled = function () {\n          this._bitField = this._bitField | 65536;\n\n          this._fireEvent(\"promiseCancelled\", this);\n        };\n\n        Promise.prototype._setWillBeCancelled = function () {\n          this._bitField = this._bitField | 8388608;\n        };\n\n        Promise.prototype._setAsyncGuaranteed = function () {\n          if (async.hasCustomScheduler()) return;\n          this._bitField = this._bitField | 134217728;\n        };\n\n        Promise.prototype._receiverAt = function (index) {\n          var ret = index === 0 ? this._receiver0 : this[index * 4 - 4 + 3];\n\n          if (ret === UNDEFINED_BINDING) {\n            return undefined;\n          } else if (ret === undefined && this._isBound()) {\n            return this._boundValue();\n          }\n\n          return ret;\n        };\n\n        Promise.prototype._promiseAt = function (index) {\n          return this[index * 4 - 4 + 2];\n        };\n\n        Promise.prototype._fulfillmentHandlerAt = function (index) {\n          return this[index * 4 - 4 + 0];\n        };\n\n        Promise.prototype._rejectionHandlerAt = function (index) {\n          return this[index * 4 - 4 + 1];\n        };\n\n        Promise.prototype._boundValue = function () {};\n\n        Promise.prototype._migrateCallback0 = function (follower) {\n          var bitField = follower._bitField;\n          var fulfill = follower._fulfillmentHandler0;\n          var reject = follower._rejectionHandler0;\n          var promise = follower._promise0;\n\n          var receiver = follower._receiverAt(0);\n\n          if (receiver === undefined) receiver = UNDEFINED_BINDING;\n\n          this._addCallbacks(fulfill, reject, promise, receiver, null);\n        };\n\n        Promise.prototype._migrateCallbackAt = function (follower, index) {\n          var fulfill = follower._fulfillmentHandlerAt(index);\n\n          var reject = follower._rejectionHandlerAt(index);\n\n          var promise = follower._promiseAt(index);\n\n          var receiver = follower._receiverAt(index);\n\n          if (receiver === undefined) receiver = UNDEFINED_BINDING;\n\n          this._addCallbacks(fulfill, reject, promise, receiver, null);\n        };\n\n        Promise.prototype._addCallbacks = function (fulfill, reject, promise, receiver, domain) {\n          var index = this._length();\n\n          if (index >= 65535 - 4) {\n            index = 0;\n\n            this._setLength(0);\n          }\n\n          if (index === 0) {\n            this._promise0 = promise;\n            this._receiver0 = receiver;\n\n            if (typeof fulfill === \"function\") {\n              this._fulfillmentHandler0 = domain === null ? fulfill : util.domainBind(domain, fulfill);\n            }\n\n            if (typeof reject === \"function\") {\n              this._rejectionHandler0 = domain === null ? reject : util.domainBind(domain, reject);\n            }\n          } else {\n            var base = index * 4 - 4;\n            this[base + 2] = promise;\n            this[base + 3] = receiver;\n\n            if (typeof fulfill === \"function\") {\n              this[base + 0] = domain === null ? fulfill : util.domainBind(domain, fulfill);\n            }\n\n            if (typeof reject === \"function\") {\n              this[base + 1] = domain === null ? reject : util.domainBind(domain, reject);\n            }\n          }\n\n          this._setLength(index + 1);\n\n          return index;\n        };\n\n        Promise.prototype._proxy = function (proxyable, arg) {\n          this._addCallbacks(undefined, undefined, arg, proxyable, null);\n        };\n\n        Promise.prototype._resolveCallback = function (value, shouldBind) {\n          if ((this._bitField & 117506048) !== 0) return;\n          if (value === this) return this._rejectCallback(makeSelfResolutionError(), false);\n          var maybePromise = tryConvertToPromise(value, this);\n          if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n          if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n          var promise = maybePromise._target();\n\n          if (promise === this) {\n            this._reject(makeSelfResolutionError());\n\n            return;\n          }\n\n          var bitField = promise._bitField;\n\n          if ((bitField & 50397184) === 0) {\n            var len = this._length();\n\n            if (len > 0) promise._migrateCallback0(this);\n\n            for (var i = 1; i < len; ++i) {\n              promise._migrateCallbackAt(this, i);\n            }\n\n            this._setFollowing();\n\n            this._setLength(0);\n\n            this._setFollowee(promise);\n          } else if ((bitField & 33554432) !== 0) {\n            this._fulfill(promise._value());\n          } else if ((bitField & 16777216) !== 0) {\n            this._reject(promise._reason());\n          } else {\n            var reason = new CancellationError(\"late cancellation observer\");\n\n            promise._attachExtraTrace(reason);\n\n            this._reject(reason);\n          }\n        };\n\n        Promise.prototype._rejectCallback = function (reason, synchronous, ignoreNonErrorWarnings) {\n          var trace = util.ensureErrorObject(reason);\n          var hasStack = trace === reason;\n\n          if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n            var message = \"a promise was rejected with a non-error: \" + util.classString(reason);\n\n            this._warn(message, true);\n          }\n\n          this._attachExtraTrace(trace, synchronous ? hasStack : false);\n\n          this._reject(reason);\n        };\n\n        Promise.prototype._resolveFromExecutor = function (executor) {\n          if (executor === INTERNAL) return;\n          var promise = this;\n\n          this._captureStackTrace();\n\n          this._pushContext();\n\n          var synchronous = true;\n\n          var r = this._execute(executor, function (value) {\n            promise._resolveCallback(value);\n          }, function (reason) {\n            promise._rejectCallback(reason, synchronous);\n          });\n\n          synchronous = false;\n\n          this._popContext();\n\n          if (r !== undefined) {\n            promise._rejectCallback(r, true);\n          }\n        };\n\n        Promise.prototype._settlePromiseFromHandler = function (handler, receiver, value, promise) {\n          var bitField = promise._bitField;\n          if ((bitField & 65536) !== 0) return;\n\n          promise._pushContext();\n\n          var x;\n\n          if (receiver === APPLY) {\n            if (!value || typeof value.length !== \"number\") {\n              x = errorObj;\n              x.e = new TypeError(\"cannot .spread() a non-array: \" + util.classString(value));\n            } else {\n              x = tryCatch(handler).apply(this._boundValue(), value);\n            }\n          } else {\n            x = tryCatch(handler).call(receiver, value);\n          }\n\n          var promiseCreated = promise._popContext();\n\n          bitField = promise._bitField;\n          if ((bitField & 65536) !== 0) return;\n\n          if (x === NEXT_FILTER) {\n            promise._reject(value);\n          } else if (x === errorObj) {\n            promise._rejectCallback(x.e, false);\n          } else {\n            debug.checkForgottenReturns(x, promiseCreated, \"\", promise, this);\n\n            promise._resolveCallback(x);\n          }\n        };\n\n        Promise.prototype._target = function () {\n          var ret = this;\n\n          while (ret._isFollowing()) {\n            ret = ret._followee();\n          }\n\n          return ret;\n        };\n\n        Promise.prototype._followee = function () {\n          return this._rejectionHandler0;\n        };\n\n        Promise.prototype._setFollowee = function (promise) {\n          this._rejectionHandler0 = promise;\n        };\n\n        Promise.prototype._settlePromise = function (promise, handler, receiver, value) {\n          var isPromise = promise instanceof Promise;\n          var bitField = this._bitField;\n          var asyncGuaranteed = (bitField & 134217728) !== 0;\n\n          if ((bitField & 65536) !== 0) {\n            if (isPromise) promise._invokeInternalOnCancel();\n\n            if (receiver instanceof PassThroughHandlerContext && receiver.isFinallyHandler()) {\n              receiver.cancelPromise = promise;\n\n              if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n              }\n            } else if (handler === reflectHandler) {\n              promise._fulfill(reflectHandler.call(receiver));\n            } else if (receiver instanceof Proxyable) {\n              receiver._promiseCancelled(promise);\n            } else if (isPromise || promise instanceof PromiseArray) {\n              promise._cancel();\n            } else {\n              receiver.cancel();\n            }\n          } else if (typeof handler === \"function\") {\n            if (!isPromise) {\n              handler.call(receiver, value, promise);\n            } else {\n              if (asyncGuaranteed) promise._setAsyncGuaranteed();\n\n              this._settlePromiseFromHandler(handler, receiver, value, promise);\n            }\n          } else if (receiver instanceof Proxyable) {\n            if (!receiver._isResolved()) {\n              if ((bitField & 33554432) !== 0) {\n                receiver._promiseFulfilled(value, promise);\n              } else {\n                receiver._promiseRejected(value, promise);\n              }\n            }\n          } else if (isPromise) {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n\n            if ((bitField & 33554432) !== 0) {\n              promise._fulfill(value);\n            } else {\n              promise._reject(value);\n            }\n          }\n        };\n\n        Promise.prototype._settlePromiseLateCancellationObserver = function (ctx) {\n          var handler = ctx.handler;\n          var promise = ctx.promise;\n          var receiver = ctx.receiver;\n          var value = ctx.value;\n\n          if (typeof handler === \"function\") {\n            if (!(promise instanceof Promise)) {\n              handler.call(receiver, value, promise);\n            } else {\n              this._settlePromiseFromHandler(handler, receiver, value, promise);\n            }\n          } else if (promise instanceof Promise) {\n            promise._reject(value);\n          }\n        };\n\n        Promise.prototype._settlePromiseCtx = function (ctx) {\n          this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n        };\n\n        Promise.prototype._settlePromise0 = function (handler, value, bitField) {\n          var promise = this._promise0;\n\n          var receiver = this._receiverAt(0);\n\n          this._promise0 = undefined;\n          this._receiver0 = undefined;\n\n          this._settlePromise(promise, handler, receiver, value);\n        };\n\n        Promise.prototype._clearCallbackDataAtIndex = function (index) {\n          var base = index * 4 - 4;\n          this[base + 2] = this[base + 3] = this[base + 0] = this[base + 1] = undefined;\n        };\n\n        Promise.prototype._fulfill = function (value) {\n          var bitField = this._bitField;\n          if ((bitField & 117506048) >>> 16) return;\n\n          if (value === this) {\n            var err = makeSelfResolutionError();\n\n            this._attachExtraTrace(err);\n\n            return this._reject(err);\n          }\n\n          this._setFulfilled();\n\n          this._rejectionHandler0 = value;\n\n          if ((bitField & 65535) > 0) {\n            if ((bitField & 134217728) !== 0) {\n              this._settlePromises();\n            } else {\n              async.settlePromises(this);\n            }\n\n            this._dereferenceTrace();\n          }\n        };\n\n        Promise.prototype._reject = function (reason) {\n          var bitField = this._bitField;\n          if ((bitField & 117506048) >>> 16) return;\n\n          this._setRejected();\n\n          this._fulfillmentHandler0 = reason;\n\n          if (this._isFinal()) {\n            return async.fatalError(reason, util.isNode);\n          }\n\n          if ((bitField & 65535) > 0) {\n            async.settlePromises(this);\n          } else {\n            this._ensurePossibleRejectionHandled();\n          }\n        };\n\n        Promise.prototype._fulfillPromises = function (len, value) {\n          for (var i = 1; i < len; i++) {\n            var handler = this._fulfillmentHandlerAt(i);\n\n            var promise = this._promiseAt(i);\n\n            var receiver = this._receiverAt(i);\n\n            this._clearCallbackDataAtIndex(i);\n\n            this._settlePromise(promise, handler, receiver, value);\n          }\n        };\n\n        Promise.prototype._rejectPromises = function (len, reason) {\n          for (var i = 1; i < len; i++) {\n            var handler = this._rejectionHandlerAt(i);\n\n            var promise = this._promiseAt(i);\n\n            var receiver = this._receiverAt(i);\n\n            this._clearCallbackDataAtIndex(i);\n\n            this._settlePromise(promise, handler, receiver, reason);\n          }\n        };\n\n        Promise.prototype._settlePromises = function () {\n          var bitField = this._bitField;\n          var len = bitField & 65535;\n\n          if (len > 0) {\n            if ((bitField & 16842752) !== 0) {\n              var reason = this._fulfillmentHandler0;\n\n              this._settlePromise0(this._rejectionHandler0, reason, bitField);\n\n              this._rejectPromises(len, reason);\n            } else {\n              var value = this._rejectionHandler0;\n\n              this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n\n              this._fulfillPromises(len, value);\n            }\n\n            this._setLength(0);\n          }\n\n          this._clearCancellationData();\n        };\n\n        Promise.prototype._settledValue = function () {\n          var bitField = this._bitField;\n\n          if ((bitField & 33554432) !== 0) {\n            return this._rejectionHandler0;\n          } else if ((bitField & 16777216) !== 0) {\n            return this._fulfillmentHandler0;\n          }\n        };\n\n        function deferResolve(v) {\n          this.promise._resolveCallback(v);\n        }\n\n        function deferReject(v) {\n          this.promise._rejectCallback(v, false);\n        }\n\n        Promise.defer = Promise.pending = function () {\n          debug.deprecated(\"Promise.defer\", \"new Promise\");\n          var promise = new Promise(INTERNAL);\n          return {\n            promise: promise,\n            resolve: deferResolve,\n            reject: deferReject\n          };\n        };\n\n        util.notEnumerableProp(Promise, \"_makeSelfResolutionError\", makeSelfResolutionError);\n\n        _dereq_(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug);\n\n        _dereq_(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\n\n        _dereq_(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\n\n        _dereq_(\"./direct_resolve\")(Promise);\n\n        _dereq_(\"./synchronous_inspection\")(Promise);\n\n        _dereq_(\"./join\")(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\n\n        Promise.Promise = Promise;\n        Promise.version = \"3.5.3\";\n\n        _dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n\n        _dereq_('./call_get.js')(Promise);\n\n        _dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n\n        _dereq_('./timers.js')(Promise, INTERNAL, debug);\n\n        _dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n\n        _dereq_('./nodeify.js')(Promise);\n\n        _dereq_('./promisify.js')(Promise, INTERNAL);\n\n        _dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n\n        _dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n\n        _dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n\n        _dereq_('./settle.js')(Promise, PromiseArray, debug);\n\n        _dereq_('./some.js')(Promise, PromiseArray, apiRejection);\n\n        _dereq_('./filter.js')(Promise, INTERNAL);\n\n        _dereq_('./each.js')(Promise, INTERNAL);\n\n        _dereq_('./any.js')(Promise);\n\n        util.toFastProperties(Promise);\n        util.toFastProperties(Promise.prototype);\n\n        function fillTypes(value) {\n          var p = new Promise(INTERNAL);\n          p._fulfillmentHandler0 = value;\n          p._rejectionHandler0 = value;\n          p._promise0 = value;\n          p._receiver0 = value;\n        } // Complete slack tracking, opt out of field-type tracking and           \n        // stabilize map                                                         \n\n\n        fillTypes({\n          a: 1\n        });\n        fillTypes({\n          b: 2\n        });\n        fillTypes({\n          c: 3\n        });\n        fillTypes(1);\n        fillTypes(function () {});\n        fillTypes(undefined);\n        fillTypes(false);\n        fillTypes(new Promise(INTERNAL));\n        debug.setBounds(Async.firstLineError, util.lastLineError);\n        return Promise;\n      };\n    }, {\n      \"./any.js\": 1,\n      \"./async\": 2,\n      \"./bind\": 3,\n      \"./call_get.js\": 5,\n      \"./cancel\": 6,\n      \"./catch_filter\": 7,\n      \"./context\": 8,\n      \"./debuggability\": 9,\n      \"./direct_resolve\": 10,\n      \"./each.js\": 11,\n      \"./errors\": 12,\n      \"./es5\": 13,\n      \"./filter.js\": 14,\n      \"./finally\": 15,\n      \"./generators.js\": 16,\n      \"./join\": 17,\n      \"./map.js\": 18,\n      \"./method\": 19,\n      \"./nodeback\": 20,\n      \"./nodeify.js\": 21,\n      \"./promise_array\": 23,\n      \"./promisify.js\": 24,\n      \"./props.js\": 25,\n      \"./race.js\": 27,\n      \"./reduce.js\": 28,\n      \"./settle.js\": 30,\n      \"./some.js\": 31,\n      \"./synchronous_inspection\": 32,\n      \"./thenables\": 33,\n      \"./timers.js\": 34,\n      \"./using.js\": 35,\n      \"./util\": 36\n    }],\n    23: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable) {\n        var util = _dereq_(\"./util\");\n\n        var isArray = util.isArray;\n\n        function toResolutionValue(val) {\n          switch (val) {\n            case -2:\n              return [];\n\n            case -3:\n              return {};\n\n            case -6:\n              return new Map();\n          }\n        }\n\n        function PromiseArray(values) {\n          var promise = this._promise = new Promise(INTERNAL);\n\n          if (values instanceof Promise) {\n            promise._propagateFrom(values, 3);\n          }\n\n          promise._setOnCancel(this);\n\n          this._values = values;\n          this._length = 0;\n          this._totalResolved = 0;\n\n          this._init(undefined, -2);\n        }\n\n        util.inherits(PromiseArray, Proxyable);\n\n        PromiseArray.prototype.length = function () {\n          return this._length;\n        };\n\n        PromiseArray.prototype.promise = function () {\n          return this._promise;\n        };\n\n        PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n          var values = tryConvertToPromise(this._values, this._promise);\n\n          if (values instanceof Promise) {\n            values = values._target();\n            var bitField = values._bitField;\n            ;\n            this._values = values;\n\n            if ((bitField & 50397184) === 0) {\n              this._promise._setAsyncGuaranteed();\n\n              return values._then(init, this._reject, undefined, this, resolveValueIfEmpty);\n            } else if ((bitField & 33554432) !== 0) {\n              values = values._value();\n            } else if ((bitField & 16777216) !== 0) {\n              return this._reject(values._reason());\n            } else {\n              return this._cancel();\n            }\n          }\n\n          values = util.asArray(values);\n\n          if (values === null) {\n            var err = apiRejection(\"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n\n            this._promise._rejectCallback(err, false);\n\n            return;\n          }\n\n          if (values.length === 0) {\n            if (resolveValueIfEmpty === -5) {\n              this._resolveEmptyArray();\n            } else {\n              this._resolve(toResolutionValue(resolveValueIfEmpty));\n            }\n\n            return;\n          }\n\n          this._iterate(values);\n        };\n\n        PromiseArray.prototype._iterate = function (values) {\n          var len = this.getActualLength(values.length);\n          this._length = len;\n          this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n          var result = this._promise;\n          var isResolved = false;\n          var bitField = null;\n\n          for (var i = 0; i < len; ++i) {\n            var maybePromise = tryConvertToPromise(values[i], result);\n\n            if (maybePromise instanceof Promise) {\n              maybePromise = maybePromise._target();\n              bitField = maybePromise._bitField;\n            } else {\n              bitField = null;\n            }\n\n            if (isResolved) {\n              if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n              }\n            } else if (bitField !== null) {\n              if ((bitField & 50397184) === 0) {\n                maybePromise._proxy(this, i);\n\n                this._values[i] = maybePromise;\n              } else if ((bitField & 33554432) !== 0) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n              } else if ((bitField & 16777216) !== 0) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n              } else {\n                isResolved = this._promiseCancelled(i);\n              }\n            } else {\n              isResolved = this._promiseFulfilled(maybePromise, i);\n            }\n          }\n\n          if (!isResolved) result._setAsyncGuaranteed();\n        };\n\n        PromiseArray.prototype._isResolved = function () {\n          return this._values === null;\n        };\n\n        PromiseArray.prototype._resolve = function (value) {\n          this._values = null;\n\n          this._promise._fulfill(value);\n        };\n\n        PromiseArray.prototype._cancel = function () {\n          if (this._isResolved() || !this._promise._isCancellable()) return;\n          this._values = null;\n\n          this._promise._cancel();\n        };\n\n        PromiseArray.prototype._reject = function (reason) {\n          this._values = null;\n\n          this._promise._rejectCallback(reason, false);\n        };\n\n        PromiseArray.prototype._promiseFulfilled = function (value, index) {\n          this._values[index] = value;\n          var totalResolved = ++this._totalResolved;\n\n          if (totalResolved >= this._length) {\n            this._resolve(this._values);\n\n            return true;\n          }\n\n          return false;\n        };\n\n        PromiseArray.prototype._promiseCancelled = function () {\n          this._cancel();\n\n          return true;\n        };\n\n        PromiseArray.prototype._promiseRejected = function (reason) {\n          this._totalResolved++;\n\n          this._reject(reason);\n\n          return true;\n        };\n\n        PromiseArray.prototype._resultCancelled = function () {\n          if (this._isResolved()) return;\n          var values = this._values;\n\n          this._cancel();\n\n          if (values instanceof Promise) {\n            values.cancel();\n          } else {\n            for (var i = 0; i < values.length; ++i) {\n              if (values[i] instanceof Promise) {\n                values[i].cancel();\n              }\n            }\n          }\n        };\n\n        PromiseArray.prototype.shouldCopyValues = function () {\n          return true;\n        };\n\n        PromiseArray.prototype.getActualLength = function (len) {\n          return len;\n        };\n\n        return PromiseArray;\n      };\n    }, {\n      \"./util\": 36\n    }],\n    24: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL) {\n        var THIS = {};\n\n        var util = _dereq_(\"./util\");\n\n        var nodebackForPromise = _dereq_(\"./nodeback\");\n\n        var withAppended = util.withAppended;\n        var maybeWrapAsError = util.maybeWrapAsError;\n        var canEvaluate = util.canEvaluate;\n\n        var TypeError = _dereq_(\"./errors\").TypeError;\n\n        var defaultSuffix = \"Async\";\n        var defaultPromisified = {\n          __isPromisified__: true\n        };\n        var noCopyProps = [\"arity\", \"length\", \"name\", \"arguments\", \"caller\", \"callee\", \"prototype\", \"__isPromisified__\"];\n        var noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\n        var defaultFilter = function defaultFilter(name) {\n          return util.isIdentifier(name) && name.charAt(0) !== \"_\" && name !== \"constructor\";\n        };\n\n        function propsFilter(key) {\n          return !noCopyPropsPattern.test(key);\n        }\n\n        function isPromisified(fn) {\n          try {\n            return fn.__isPromisified__ === true;\n          } catch (e) {\n            return false;\n          }\n        }\n\n        function hasPromisified(obj, key, suffix) {\n          var val = util.getDataPropertyOrDefault(obj, key + suffix, defaultPromisified);\n          return val ? isPromisified(val) : false;\n        }\n\n        function checkValid(ret, suffix, suffixRegexp) {\n          for (var i = 0; i < ret.length; i += 2) {\n            var key = ret[i];\n\n            if (suffixRegexp.test(key)) {\n              var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n\n              for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                  throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\n\\n    See http://goo.gl/MqrFmX\\n\".replace(\"%s\", suffix));\n                }\n              }\n            }\n          }\n        }\n\n        function promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n          var keys = util.inheritedDataKeys(obj);\n          var ret = [];\n\n          for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            var value = obj[key];\n            var passesDefaultFilter = filter === defaultFilter ? true : defaultFilter(key, value, obj);\n\n            if (typeof value === \"function\" && !isPromisified(value) && !hasPromisified(obj, key, suffix) && filter(key, value, obj, passesDefaultFilter)) {\n              ret.push(key, value);\n            }\n          }\n\n          checkValid(ret, suffix, suffixRegexp);\n          return ret;\n        }\n\n        var escapeIdentRegex = function escapeIdentRegex(str) {\n          return str.replace(/([$])/, \"\\\\$\");\n        };\n\n        var makeNodePromisifiedEval;\n\n        if (false) { var parameterCount, parameterDeclaration, argumentSequence, switchCaseArgumentOrder; }\n\n        function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n          var defaultThis = function () {\n            return this;\n          }();\n\n          var method = callback;\n\n          if (typeof method === \"string\") {\n            callback = fn;\n          }\n\n          function promisified() {\n            var _receiver = receiver;\n            if (receiver === THIS) _receiver = this;\n            var promise = new Promise(INTERNAL);\n\n            promise._captureStackTrace();\n\n            var cb = typeof method === \"string\" && this !== defaultThis ? this[method] : callback;\n            var fn = nodebackForPromise(promise, multiArgs);\n\n            try {\n              cb.apply(_receiver, withAppended(arguments, fn));\n            } catch (e) {\n              promise._rejectCallback(maybeWrapAsError(e), true, true);\n            }\n\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n            return promise;\n          }\n\n          util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n          return promisified;\n        }\n\n        var makeNodePromisified = canEvaluate ? makeNodePromisifiedEval : makeNodePromisifiedClosure;\n\n        function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n          var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n          var methods = promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n          for (var i = 0, len = methods.length; i < len; i += 2) {\n            var key = methods[i];\n            var fn = methods[i + 1];\n            var promisifiedKey = key + suffix;\n\n            if (promisifier === makeNodePromisified) {\n              obj[promisifiedKey] = makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n            } else {\n              var promisified = promisifier(fn, function () {\n                return makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n              });\n              util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n              obj[promisifiedKey] = promisified;\n            }\n          }\n\n          util.toFastProperties(obj);\n          return obj;\n        }\n\n        function promisify(callback, receiver, multiArgs) {\n          return makeNodePromisified(callback, receiver, undefined, callback, null, multiArgs);\n        }\n\n        Promise.promisify = function (fn, options) {\n          if (typeof fn !== \"function\") {\n            throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          if (isPromisified(fn)) {\n            return fn;\n          }\n\n          options = Object(options);\n          var receiver = options.context === undefined ? THIS : options.context;\n          var multiArgs = !!options.multiArgs;\n          var ret = promisify(fn, receiver, multiArgs);\n          util.copyDescriptors(fn, ret, propsFilter);\n          return ret;\n        };\n\n        Promise.promisifyAll = function (target, options) {\n          if (typeof target !== \"function\" && _typeof(target) !== \"object\") {\n            throw new TypeError(\"the target of promisifyAll must be an object or a function\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          options = Object(options);\n          var multiArgs = !!options.multiArgs;\n          var suffix = options.suffix;\n          if (typeof suffix !== \"string\") suffix = defaultSuffix;\n          var filter = options.filter;\n          if (typeof filter !== \"function\") filter = defaultFilter;\n          var promisifier = options.promisifier;\n          if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n          if (!util.isIdentifier(suffix)) {\n            throw new RangeError(\"suffix must be a valid identifier\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          var keys = util.inheritedDataKeys(target);\n\n          for (var i = 0; i < keys.length; ++i) {\n            var value = target[keys[i]];\n\n            if (keys[i] !== \"constructor\" && util.isClass(value)) {\n              promisifyAll(value.prototype, suffix, filter, promisifier, multiArgs);\n              promisifyAll(value, suffix, filter, promisifier, multiArgs);\n            }\n          }\n\n          return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n        };\n      };\n    }, {\n      \"./errors\": 12,\n      \"./nodeback\": 20,\n      \"./util\": 36\n    }],\n    25: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, PromiseArray, tryConvertToPromise, apiRejection) {\n        var util = _dereq_(\"./util\");\n\n        var isObject = util.isObject;\n\n        var es5 = _dereq_(\"./es5\");\n\n        var Es6Map;\n        if (typeof Map === \"function\") Es6Map = Map;\n\n        var mapToEntries = function () {\n          var index = 0;\n          var size = 0;\n\n          function extractEntry(value, key) {\n            this[index] = value;\n            this[index + size] = key;\n            index++;\n          }\n\n          return function mapToEntries(map) {\n            size = map.size;\n            index = 0;\n            var ret = new Array(map.size * 2);\n            map.forEach(extractEntry, ret);\n            return ret;\n          };\n        }();\n\n        var entriesToMap = function entriesToMap(entries) {\n          var ret = new Es6Map();\n          var length = entries.length / 2 | 0;\n\n          for (var i = 0; i < length; ++i) {\n            var key = entries[length + i];\n            var value = entries[i];\n            ret.set(key, value);\n          }\n\n          return ret;\n        };\n\n        function PropertiesPromiseArray(obj) {\n          var isMap = false;\n          var entries;\n\n          if (Es6Map !== undefined && obj instanceof Es6Map) {\n            entries = mapToEntries(obj);\n            isMap = true;\n          } else {\n            var keys = es5.keys(obj);\n            var len = keys.length;\n            entries = new Array(len * 2);\n\n            for (var i = 0; i < len; ++i) {\n              var key = keys[i];\n              entries[i] = obj[key];\n              entries[i + len] = key;\n            }\n          }\n\n          this.constructor$(entries);\n          this._isMap = isMap;\n\n          this._init$(undefined, isMap ? -6 : -3);\n        }\n\n        util.inherits(PropertiesPromiseArray, PromiseArray);\n\n        PropertiesPromiseArray.prototype._init = function () {};\n\n        PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n          this._values[index] = value;\n          var totalResolved = ++this._totalResolved;\n\n          if (totalResolved >= this._length) {\n            var val;\n\n            if (this._isMap) {\n              val = entriesToMap(this._values);\n            } else {\n              val = {};\n              var keyOffset = this.length();\n\n              for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n              }\n            }\n\n            this._resolve(val);\n\n            return true;\n          }\n\n          return false;\n        };\n\n        PropertiesPromiseArray.prototype.shouldCopyValues = function () {\n          return false;\n        };\n\n        PropertiesPromiseArray.prototype.getActualLength = function (len) {\n          return len >> 1;\n        };\n\n        function props(promises) {\n          var ret;\n          var castValue = tryConvertToPromise(promises);\n\n          if (!isObject(castValue)) {\n            return apiRejection(\"cannot await properties of a non-object\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          } else if (castValue instanceof Promise) {\n            ret = castValue._then(Promise.props, undefined, undefined, undefined, undefined);\n          } else {\n            ret = new PropertiesPromiseArray(castValue).promise();\n          }\n\n          if (castValue instanceof Promise) {\n            ret._propagateFrom(castValue, 2);\n          }\n\n          return ret;\n        }\n\n        Promise.prototype.props = function () {\n          return props(this);\n        };\n\n        Promise.props = function (promises) {\n          return props(promises);\n        };\n      };\n    }, {\n      \"./es5\": 13,\n      \"./util\": 36\n    }],\n    26: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      function arrayMove(src, srcIndex, dst, dstIndex, len) {\n        for (var j = 0; j < len; ++j) {\n          dst[j + dstIndex] = src[j + srcIndex];\n          src[j + srcIndex] = void 0;\n        }\n      }\n\n      function Queue(capacity) {\n        this._capacity = capacity;\n        this._length = 0;\n        this._front = 0;\n      }\n\n      Queue.prototype._willBeOverCapacity = function (size) {\n        return this._capacity < size;\n      };\n\n      Queue.prototype._pushOne = function (arg) {\n        var length = this.length();\n\n        this._checkCapacity(length + 1);\n\n        var i = this._front + length & this._capacity - 1;\n        this[i] = arg;\n        this._length = length + 1;\n      };\n\n      Queue.prototype.push = function (fn, receiver, arg) {\n        var length = this.length() + 3;\n\n        if (this._willBeOverCapacity(length)) {\n          this._pushOne(fn);\n\n          this._pushOne(receiver);\n\n          this._pushOne(arg);\n\n          return;\n        }\n\n        var j = this._front + length - 3;\n\n        this._checkCapacity(length);\n\n        var wrapMask = this._capacity - 1;\n        this[j + 0 & wrapMask] = fn;\n        this[j + 1 & wrapMask] = receiver;\n        this[j + 2 & wrapMask] = arg;\n        this._length = length;\n      };\n\n      Queue.prototype.shift = function () {\n        var front = this._front,\n            ret = this[front];\n        this[front] = undefined;\n        this._front = front + 1 & this._capacity - 1;\n        this._length--;\n        return ret;\n      };\n\n      Queue.prototype.length = function () {\n        return this._length;\n      };\n\n      Queue.prototype._checkCapacity = function (size) {\n        if (this._capacity < size) {\n          this._resizeTo(this._capacity << 1);\n        }\n      };\n\n      Queue.prototype._resizeTo = function (capacity) {\n        var oldCapacity = this._capacity;\n        this._capacity = capacity;\n        var front = this._front;\n        var length = this._length;\n        var moveItemsCount = front + length & oldCapacity - 1;\n        arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n      };\n\n      module.exports = Queue;\n    }, {}],\n    27: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection) {\n        var util = _dereq_(\"./util\");\n\n        var raceLater = function raceLater(promise) {\n          return promise.then(function (array) {\n            return race(array, promise);\n          });\n        };\n\n        function race(promises, parent) {\n          var maybePromise = tryConvertToPromise(promises);\n\n          if (maybePromise instanceof Promise) {\n            return raceLater(maybePromise);\n          } else {\n            promises = util.asArray(promises);\n            if (promises === null) return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n          }\n\n          var ret = new Promise(INTERNAL);\n\n          if (parent !== undefined) {\n            ret._propagateFrom(parent, 3);\n          }\n\n          var fulfill = ret._fulfill;\n          var reject = ret._reject;\n\n          for (var i = 0, len = promises.length; i < len; ++i) {\n            var val = promises[i];\n\n            if (val === undefined && !(i in promises)) {\n              continue;\n            }\n\n            Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n          }\n\n          return ret;\n        }\n\n        Promise.race = function (promises) {\n          return race(promises, undefined);\n        };\n\n        Promise.prototype.race = function () {\n          return race(this, undefined);\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    28: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {\n        var getDomain = Promise._getDomain;\n\n        var util = _dereq_(\"./util\");\n\n        var tryCatch = util.tryCatch;\n\n        function ReductionPromiseArray(promises, fn, initialValue, _each) {\n          this.constructor$(promises);\n          var domain = getDomain();\n          this._fn = domain === null ? fn : util.domainBind(domain, fn);\n\n          if (initialValue !== undefined) {\n            initialValue = Promise.resolve(initialValue);\n\n            initialValue._attachCancellationCallback(this);\n          }\n\n          this._initialValue = initialValue;\n          this._currentCancellable = null;\n\n          if (_each === INTERNAL) {\n            this._eachValues = Array(this._length);\n          } else if (_each === 0) {\n            this._eachValues = null;\n          } else {\n            this._eachValues = undefined;\n          }\n\n          this._promise._captureStackTrace();\n\n          this._init$(undefined, -5);\n        }\n\n        util.inherits(ReductionPromiseArray, PromiseArray);\n\n        ReductionPromiseArray.prototype._gotAccum = function (accum) {\n          if (this._eachValues !== undefined && this._eachValues !== null && accum !== INTERNAL) {\n            this._eachValues.push(accum);\n          }\n        };\n\n        ReductionPromiseArray.prototype._eachComplete = function (value) {\n          if (this._eachValues !== null) {\n            this._eachValues.push(value);\n          }\n\n          return this._eachValues;\n        };\n\n        ReductionPromiseArray.prototype._init = function () {};\n\n        ReductionPromiseArray.prototype._resolveEmptyArray = function () {\n          this._resolve(this._eachValues !== undefined ? this._eachValues : this._initialValue);\n        };\n\n        ReductionPromiseArray.prototype.shouldCopyValues = function () {\n          return false;\n        };\n\n        ReductionPromiseArray.prototype._resolve = function (value) {\n          this._promise._resolveCallback(value);\n\n          this._values = null;\n        };\n\n        ReductionPromiseArray.prototype._resultCancelled = function (sender) {\n          if (sender === this._initialValue) return this._cancel();\n          if (this._isResolved()) return;\n\n          this._resultCancelled$();\n\n          if (this._currentCancellable instanceof Promise) {\n            this._currentCancellable.cancel();\n          }\n\n          if (this._initialValue instanceof Promise) {\n            this._initialValue.cancel();\n          }\n        };\n\n        ReductionPromiseArray.prototype._iterate = function (values) {\n          this._values = values;\n          var value;\n          var i;\n          var length = values.length;\n\n          if (this._initialValue !== undefined) {\n            value = this._initialValue;\n            i = 0;\n          } else {\n            value = Promise.resolve(values[0]);\n            i = 1;\n          }\n\n          this._currentCancellable = value;\n\n          if (!value.isRejected()) {\n            for (; i < length; ++i) {\n              var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n              };\n              value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n            }\n          }\n\n          if (this._eachValues !== undefined) {\n            value = value._then(this._eachComplete, undefined, undefined, this, undefined);\n          }\n\n          value._then(completed, completed, undefined, value, this);\n        };\n\n        Promise.prototype.reduce = function (fn, initialValue) {\n          return reduce(this, fn, initialValue, null);\n        };\n\n        Promise.reduce = function (promises, fn, initialValue, _each) {\n          return reduce(promises, fn, initialValue, _each);\n        };\n\n        function completed(valueOrReason, array) {\n          if (this.isFulfilled()) {\n            array._resolve(valueOrReason);\n          } else {\n            array._reject(valueOrReason);\n          }\n        }\n\n        function reduce(promises, fn, initialValue, _each) {\n          if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n          return array.promise();\n        }\n\n        function gotAccum(accum) {\n          this.accum = accum;\n\n          this.array._gotAccum(accum);\n\n          var value = tryConvertToPromise(this.value, this.array._promise);\n\n          if (value instanceof Promise) {\n            this.array._currentCancellable = value;\n            return value._then(gotValue, undefined, undefined, this, undefined);\n          } else {\n            return gotValue.call(this, value);\n          }\n        }\n\n        function gotValue(value) {\n          var array = this.array;\n          var promise = array._promise;\n          var fn = tryCatch(array._fn);\n\n          promise._pushContext();\n\n          var ret;\n\n          if (array._eachValues !== undefined) {\n            ret = fn.call(promise._boundValue(), value, this.index, this.length);\n          } else {\n            ret = fn.call(promise._boundValue(), this.accum, value, this.index, this.length);\n          }\n\n          if (ret instanceof Promise) {\n            array._currentCancellable = ret;\n          }\n\n          var promiseCreated = promise._popContext();\n\n          debug.checkForgottenReturns(ret, promiseCreated, array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\", promise);\n          return ret;\n        }\n      };\n    }, {\n      \"./util\": 36\n    }],\n    29: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      var util = _dereq_(\"./util\");\n\n      var schedule;\n\n      var noAsyncScheduler = function noAsyncScheduler() {\n        throw new Error(\"No async scheduler available\\n\\n    See http://goo.gl/MqrFmX\\n\");\n      };\n\n      var NativePromise = util.getNativePromise();\n\n      if (util.isNode && typeof MutationObserver === \"undefined\") {\n        var GlobalSetImmediate = global.setImmediate;\n        var ProcessNextTick = process.nextTick;\n        schedule = util.isRecentNode ? function (fn) {\n          GlobalSetImmediate.call(global, fn);\n        } : function (fn) {\n          ProcessNextTick.call(process, fn);\n        };\n      } else if (typeof NativePromise === \"function\" && typeof NativePromise.resolve === \"function\") {\n        var nativePromise = NativePromise.resolve();\n\n        schedule = function schedule(fn) {\n          nativePromise.then(fn);\n        };\n      } else if (typeof MutationObserver !== \"undefined\" && !(typeof window !== \"undefined\" && window.navigator && (window.navigator.standalone || window.cordova))) {\n        schedule = function () {\n          var div = document.createElement(\"div\");\n          var opts = {\n            attributes: true\n          };\n          var toggleScheduled = false;\n          var div2 = document.createElement(\"div\");\n          var o2 = new MutationObserver(function () {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n          });\n          o2.observe(div2, opts);\n\n          var scheduleToggle = function scheduleToggle() {\n            if (toggleScheduled) return;\n            toggleScheduled = true;\n            div2.classList.toggle(\"foo\");\n          };\n\n          return function schedule(fn) {\n            var o = new MutationObserver(function () {\n              o.disconnect();\n              fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n          };\n        }();\n      } else if (typeof setImmediate !== \"undefined\") {\n        schedule = function schedule(fn) {\n          setImmediate(fn);\n        };\n      } else if (typeof setTimeout !== \"undefined\") {\n        schedule = function schedule(fn) {\n          setTimeout(fn, 0);\n        };\n      } else {\n        schedule = noAsyncScheduler;\n      }\n\n      module.exports = schedule;\n    }, {\n      \"./util\": 36\n    }],\n    30: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, PromiseArray, debug) {\n        var PromiseInspection = Promise.PromiseInspection;\n\n        var util = _dereq_(\"./util\");\n\n        function SettledPromiseArray(values) {\n          this.constructor$(values);\n        }\n\n        util.inherits(SettledPromiseArray, PromiseArray);\n\n        SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n          this._values[index] = inspection;\n          var totalResolved = ++this._totalResolved;\n\n          if (totalResolved >= this._length) {\n            this._resolve(this._values);\n\n            return true;\n          }\n\n          return false;\n        };\n\n        SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n          var ret = new PromiseInspection();\n          ret._bitField = 33554432;\n          ret._settledValueField = value;\n          return this._promiseResolved(index, ret);\n        };\n\n        SettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n          var ret = new PromiseInspection();\n          ret._bitField = 16777216;\n          ret._settledValueField = reason;\n          return this._promiseResolved(index, ret);\n        };\n\n        Promise.settle = function (promises) {\n          debug.deprecated(\".settle()\", \".reflect()\");\n          return new SettledPromiseArray(promises).promise();\n        };\n\n        Promise.prototype.settle = function () {\n          return Promise.settle(this);\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    31: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, PromiseArray, apiRejection) {\n        var util = _dereq_(\"./util\");\n\n        var RangeError = _dereq_(\"./errors\").RangeError;\n\n        var AggregateError = _dereq_(\"./errors\").AggregateError;\n\n        var isArray = util.isArray;\n        var CANCELLATION = {};\n\n        function SomePromiseArray(values) {\n          this.constructor$(values);\n          this._howMany = 0;\n          this._unwrap = false;\n          this._initialized = false;\n        }\n\n        util.inherits(SomePromiseArray, PromiseArray);\n\n        SomePromiseArray.prototype._init = function () {\n          if (!this._initialized) {\n            return;\n          }\n\n          if (this._howMany === 0) {\n            this._resolve([]);\n\n            return;\n          }\n\n          this._init$(undefined, -5);\n\n          var isArrayResolved = isArray(this._values);\n\n          if (!this._isResolved() && isArrayResolved && this._howMany > this._canPossiblyFulfill()) {\n            this._reject(this._getRangeError(this.length()));\n          }\n        };\n\n        SomePromiseArray.prototype.init = function () {\n          this._initialized = true;\n\n          this._init();\n        };\n\n        SomePromiseArray.prototype.setUnwrap = function () {\n          this._unwrap = true;\n        };\n\n        SomePromiseArray.prototype.howMany = function () {\n          return this._howMany;\n        };\n\n        SomePromiseArray.prototype.setHowMany = function (count) {\n          this._howMany = count;\n        };\n\n        SomePromiseArray.prototype._promiseFulfilled = function (value) {\n          this._addFulfilled(value);\n\n          if (this._fulfilled() === this.howMany()) {\n            this._values.length = this.howMany();\n\n            if (this.howMany() === 1 && this._unwrap) {\n              this._resolve(this._values[0]);\n            } else {\n              this._resolve(this._values);\n            }\n\n            return true;\n          }\n\n          return false;\n        };\n\n        SomePromiseArray.prototype._promiseRejected = function (reason) {\n          this._addRejected(reason);\n\n          return this._checkOutcome();\n        };\n\n        SomePromiseArray.prototype._promiseCancelled = function () {\n          if (this._values instanceof Promise || this._values == null) {\n            return this._cancel();\n          }\n\n          this._addRejected(CANCELLATION);\n\n          return this._checkOutcome();\n        };\n\n        SomePromiseArray.prototype._checkOutcome = function () {\n          if (this.howMany() > this._canPossiblyFulfill()) {\n            var e = new AggregateError();\n\n            for (var i = this.length(); i < this._values.length; ++i) {\n              if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n              }\n            }\n\n            if (e.length > 0) {\n              this._reject(e);\n            } else {\n              this._cancel();\n            }\n\n            return true;\n          }\n\n          return false;\n        };\n\n        SomePromiseArray.prototype._fulfilled = function () {\n          return this._totalResolved;\n        };\n\n        SomePromiseArray.prototype._rejected = function () {\n          return this._values.length - this.length();\n        };\n\n        SomePromiseArray.prototype._addRejected = function (reason) {\n          this._values.push(reason);\n        };\n\n        SomePromiseArray.prototype._addFulfilled = function (value) {\n          this._values[this._totalResolved++] = value;\n        };\n\n        SomePromiseArray.prototype._canPossiblyFulfill = function () {\n          return this.length() - this._rejected();\n        };\n\n        SomePromiseArray.prototype._getRangeError = function (count) {\n          var message = \"Input array must contain at least \" + this._howMany + \" items but contains only \" + count + \" items\";\n          return new RangeError(message);\n        };\n\n        SomePromiseArray.prototype._resolveEmptyArray = function () {\n          this._reject(this._getRangeError(0));\n        };\n\n        function some(promises, howMany) {\n          if ((howMany | 0) !== howMany || howMany < 0) {\n            return apiRejection(\"expecting a positive integer\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          var ret = new SomePromiseArray(promises);\n          var promise = ret.promise();\n          ret.setHowMany(howMany);\n          ret.init();\n          return promise;\n        }\n\n        Promise.some = function (promises, howMany) {\n          return some(promises, howMany);\n        };\n\n        Promise.prototype.some = function (howMany) {\n          return some(this, howMany);\n        };\n\n        Promise._SomePromiseArray = SomePromiseArray;\n      };\n    }, {\n      \"./errors\": 12,\n      \"./util\": 36\n    }],\n    32: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise) {\n        function PromiseInspection(promise) {\n          if (promise !== undefined) {\n            promise = promise._target();\n            this._bitField = promise._bitField;\n            this._settledValueField = promise._isFateSealed() ? promise._settledValue() : undefined;\n          } else {\n            this._bitField = 0;\n            this._settledValueField = undefined;\n          }\n        }\n\n        PromiseInspection.prototype._settledValue = function () {\n          return this._settledValueField;\n        };\n\n        var value = PromiseInspection.prototype.value = function () {\n          if (!this.isFulfilled()) {\n            throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          return this._settledValue();\n        };\n\n        var reason = PromiseInspection.prototype.error = PromiseInspection.prototype.reason = function () {\n          if (!this.isRejected()) {\n            throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\n\\n    See http://goo.gl/MqrFmX\\n\");\n          }\n\n          return this._settledValue();\n        };\n\n        var isFulfilled = PromiseInspection.prototype.isFulfilled = function () {\n          return (this._bitField & 33554432) !== 0;\n        };\n\n        var isRejected = PromiseInspection.prototype.isRejected = function () {\n          return (this._bitField & 16777216) !== 0;\n        };\n\n        var isPending = PromiseInspection.prototype.isPending = function () {\n          return (this._bitField & 50397184) === 0;\n        };\n\n        var isResolved = PromiseInspection.prototype.isResolved = function () {\n          return (this._bitField & 50331648) !== 0;\n        };\n\n        PromiseInspection.prototype.isCancelled = function () {\n          return (this._bitField & 8454144) !== 0;\n        };\n\n        Promise.prototype.__isCancelled = function () {\n          return (this._bitField & 65536) === 65536;\n        };\n\n        Promise.prototype._isCancelled = function () {\n          return this._target().__isCancelled();\n        };\n\n        Promise.prototype.isCancelled = function () {\n          return (this._target()._bitField & 8454144) !== 0;\n        };\n\n        Promise.prototype.isPending = function () {\n          return isPending.call(this._target());\n        };\n\n        Promise.prototype.isRejected = function () {\n          return isRejected.call(this._target());\n        };\n\n        Promise.prototype.isFulfilled = function () {\n          return isFulfilled.call(this._target());\n        };\n\n        Promise.prototype.isResolved = function () {\n          return isResolved.call(this._target());\n        };\n\n        Promise.prototype.value = function () {\n          return value.call(this._target());\n        };\n\n        Promise.prototype.reason = function () {\n          var target = this._target();\n\n          target._unsetRejectionIsUnhandled();\n\n          return reason.call(target);\n        };\n\n        Promise.prototype._value = function () {\n          return this._settledValue();\n        };\n\n        Promise.prototype._reason = function () {\n          this._unsetRejectionIsUnhandled();\n\n          return this._settledValue();\n        };\n\n        Promise.PromiseInspection = PromiseInspection;\n      };\n    }, {}],\n    33: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL) {\n        var util = _dereq_(\"./util\");\n\n        var errorObj = util.errorObj;\n        var isObject = util.isObject;\n\n        function tryConvertToPromise(obj, context) {\n          if (isObject(obj)) {\n            if (obj instanceof Promise) return obj;\n            var then = getThen(obj);\n\n            if (then === errorObj) {\n              if (context) context._pushContext();\n              var ret = Promise.reject(then.e);\n              if (context) context._popContext();\n              return ret;\n            } else if (typeof then === \"function\") {\n              if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n\n                obj._then(ret._fulfill, ret._reject, undefined, ret, null);\n\n                return ret;\n              }\n\n              return doThenable(obj, then, context);\n            }\n          }\n\n          return obj;\n        }\n\n        function doGetThen(obj) {\n          return obj.then;\n        }\n\n        function getThen(obj) {\n          try {\n            return doGetThen(obj);\n          } catch (e) {\n            errorObj.e = e;\n            return errorObj;\n          }\n        }\n\n        var hasProp = {}.hasOwnProperty;\n\n        function isAnyBluebirdPromise(obj) {\n          try {\n            return hasProp.call(obj, \"_promise0\");\n          } catch (e) {\n            return false;\n          }\n        }\n\n        function doThenable(x, then, context) {\n          var promise = new Promise(INTERNAL);\n          var ret = promise;\n          if (context) context._pushContext();\n\n          promise._captureStackTrace();\n\n          if (context) context._popContext();\n          var synchronous = true;\n          var result = util.tryCatch(then).call(x, resolve, reject);\n          synchronous = false;\n\n          if (promise && result === errorObj) {\n            promise._rejectCallback(result.e, true, true);\n\n            promise = null;\n          }\n\n          function resolve(value) {\n            if (!promise) return;\n\n            promise._resolveCallback(value);\n\n            promise = null;\n          }\n\n          function reject(reason) {\n            if (!promise) return;\n\n            promise._rejectCallback(reason, synchronous, true);\n\n            promise = null;\n          }\n\n          return ret;\n        }\n\n        return tryConvertToPromise;\n      };\n    }, {\n      \"./util\": 36\n    }],\n    34: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, INTERNAL, debug) {\n        var util = _dereq_(\"./util\");\n\n        var TimeoutError = Promise.TimeoutError;\n\n        function HandleWrapper(handle) {\n          this.handle = handle;\n        }\n\n        HandleWrapper.prototype._resultCancelled = function () {\n          clearTimeout(this.handle);\n        };\n\n        var afterValue = function afterValue(value) {\n          return delay(+this).thenReturn(value);\n        };\n\n        var delay = Promise.delay = function (ms, value) {\n          var ret;\n          var handle;\n\n          if (value !== undefined) {\n            ret = Promise.resolve(value)._then(afterValue, null, null, ms, undefined);\n\n            if (debug.cancellation() && value instanceof Promise) {\n              ret._setOnCancel(value);\n            }\n          } else {\n            ret = new Promise(INTERNAL);\n            handle = setTimeout(function () {\n              ret._fulfill();\n            }, +ms);\n\n            if (debug.cancellation()) {\n              ret._setOnCancel(new HandleWrapper(handle));\n            }\n\n            ret._captureStackTrace();\n          }\n\n          ret._setAsyncGuaranteed();\n\n          return ret;\n        };\n\n        Promise.prototype.delay = function (ms) {\n          return delay(ms, this);\n        };\n\n        var afterTimeout = function afterTimeout(promise, message, parent) {\n          var err;\n\n          if (typeof message !== \"string\") {\n            if (message instanceof Error) {\n              err = message;\n            } else {\n              err = new TimeoutError(\"operation timed out\");\n            }\n          } else {\n            err = new TimeoutError(message);\n          }\n\n          util.markAsOriginatingFromRejection(err);\n\n          promise._attachExtraTrace(err);\n\n          promise._reject(err);\n\n          if (parent != null) {\n            parent.cancel();\n          }\n        };\n\n        function successClear(value) {\n          clearTimeout(this.handle);\n          return value;\n        }\n\n        function failureClear(reason) {\n          clearTimeout(this.handle);\n          throw reason;\n        }\n\n        Promise.prototype.timeout = function (ms, message) {\n          ms = +ms;\n          var ret, parent;\n          var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n            if (ret.isPending()) {\n              afterTimeout(ret, message, parent);\n            }\n          }, ms));\n\n          if (debug.cancellation()) {\n            parent = this.then();\n            ret = parent._then(successClear, failureClear, undefined, handleWrapper, undefined);\n\n            ret._setOnCancel(handleWrapper);\n          } else {\n            ret = this._then(successClear, failureClear, undefined, handleWrapper, undefined);\n          }\n\n          return ret;\n        };\n      };\n    }, {\n      \"./util\": 36\n    }],\n    35: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      module.exports = function (Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug) {\n        var util = _dereq_(\"./util\");\n\n        var TypeError = _dereq_(\"./errors\").TypeError;\n\n        var inherits = _dereq_(\"./util\").inherits;\n\n        var errorObj = util.errorObj;\n        var tryCatch = util.tryCatch;\n        var NULL = {};\n\n        function thrower(e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n\n        function castPreservingDisposable(thenable) {\n          var maybePromise = tryConvertToPromise(thenable);\n\n          if (maybePromise !== thenable && typeof thenable._isDisposable === \"function\" && typeof thenable._getDisposer === \"function\" && thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n          }\n\n          return maybePromise;\n        }\n\n        function dispose(resources, inspection) {\n          var i = 0;\n          var len = resources.length;\n          var ret = new Promise(INTERNAL);\n\n          function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n\n            if (maybePromise instanceof Promise && maybePromise._isDisposable()) {\n              try {\n                maybePromise = tryConvertToPromise(maybePromise._getDisposer().tryDispose(inspection), resources.promise);\n              } catch (e) {\n                return thrower(e);\n              }\n\n              if (maybePromise instanceof Promise) {\n                return maybePromise._then(iterator, thrower, null, null, null);\n              }\n            }\n\n            iterator();\n          }\n\n          iterator();\n          return ret;\n        }\n\n        function Disposer(data, promise, context) {\n          this._data = data;\n          this._promise = promise;\n          this._context = context;\n        }\n\n        Disposer.prototype.data = function () {\n          return this._data;\n        };\n\n        Disposer.prototype.promise = function () {\n          return this._promise;\n        };\n\n        Disposer.prototype.resource = function () {\n          if (this.promise().isFulfilled()) {\n            return this.promise().value();\n          }\n\n          return NULL;\n        };\n\n        Disposer.prototype.tryDispose = function (inspection) {\n          var resource = this.resource();\n          var context = this._context;\n          if (context !== undefined) context._pushContext();\n          var ret = resource !== NULL ? this.doDispose(resource, inspection) : null;\n          if (context !== undefined) context._popContext();\n\n          this._promise._unsetDisposable();\n\n          this._data = null;\n          return ret;\n        };\n\n        Disposer.isDisposer = function (d) {\n          return d != null && typeof d.resource === \"function\" && typeof d.tryDispose === \"function\";\n        };\n\n        function FunctionDisposer(fn, promise, context) {\n          this.constructor$(fn, promise, context);\n        }\n\n        inherits(FunctionDisposer, Disposer);\n\n        FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n          var fn = this.data();\n          return fn.call(resource, resource, inspection);\n        };\n\n        function maybeUnwrapDisposer(value) {\n          if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n\n            return value.promise();\n          }\n\n          return value;\n        }\n\n        function ResourceList(length) {\n          this.length = length;\n          this.promise = null;\n          this[length - 1] = null;\n        }\n\n        ResourceList.prototype._resultCancelled = function () {\n          var len = this.length;\n\n          for (var i = 0; i < len; ++i) {\n            var item = this[i];\n\n            if (item instanceof Promise) {\n              item.cancel();\n            }\n          }\n        };\n\n        Promise.using = function () {\n          var len = arguments.length;\n          if (len < 2) return apiRejection(\"you must pass at least 2 arguments to Promise.using\");\n          var fn = arguments[len - 1];\n\n          if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n          }\n\n          var input;\n          var spreadArgs = true;\n\n          if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n          } else {\n            input = arguments;\n            len--;\n          }\n\n          var resources = new ResourceList(len);\n\n          for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n\n            if (Disposer.isDisposer(resource)) {\n              var disposer = resource;\n              resource = resource.promise();\n\n              resource._setDisposable(disposer);\n            } else {\n              var maybePromise = tryConvertToPromise(resource);\n\n              if (maybePromise instanceof Promise) {\n                resource = maybePromise._then(maybeUnwrapDisposer, null, null, {\n                  resources: resources,\n                  index: i\n                }, undefined);\n              }\n            }\n\n            resources[i] = resource;\n          }\n\n          var reflectedResources = new Array(resources.length);\n\n          for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n          }\n\n          var resultPromise = Promise.all(reflectedResources).then(function (inspections) {\n            for (var i = 0; i < inspections.length; ++i) {\n              var inspection = inspections[i];\n\n              if (inspection.isRejected()) {\n                errorObj.e = inspection.error();\n                return errorObj;\n              } else if (!inspection.isFulfilled()) {\n                resultPromise.cancel();\n                return;\n              }\n\n              inspections[i] = inspection.value();\n            }\n\n            promise._pushContext();\n\n            fn = tryCatch(fn);\n            var ret = spreadArgs ? fn.apply(undefined, inspections) : fn(inspections);\n\n            var promiseCreated = promise._popContext();\n\n            debug.checkForgottenReturns(ret, promiseCreated, \"Promise.using\", promise);\n            return ret;\n          });\n          var promise = resultPromise.lastly(function () {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n          });\n          resources.promise = promise;\n\n          promise._setOnCancel(resources);\n\n          return promise;\n        };\n\n        Promise.prototype._setDisposable = function (disposer) {\n          this._bitField = this._bitField | 131072;\n          this._disposer = disposer;\n        };\n\n        Promise.prototype._isDisposable = function () {\n          return (this._bitField & 131072) > 0;\n        };\n\n        Promise.prototype._getDisposer = function () {\n          return this._disposer;\n        };\n\n        Promise.prototype._unsetDisposable = function () {\n          this._bitField = this._bitField & ~131072;\n          this._disposer = undefined;\n        };\n\n        Promise.prototype.disposer = function (fn) {\n          if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n          }\n\n          throw new TypeError();\n        };\n      };\n    }, {\n      \"./errors\": 12,\n      \"./util\": 36\n    }],\n    36: [function (_dereq_, module, exports) {\n      \"use strict\";\n\n      var es5 = _dereq_(\"./es5\");\n\n      var canEvaluate = typeof navigator == \"undefined\";\n      var errorObj = {\n        e: {}\n      };\n      var tryCatchTarget;\n      var globalObject = typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : this !== undefined ? this : null;\n\n      function tryCatcher() {\n        try {\n          var target = tryCatchTarget;\n          tryCatchTarget = null;\n          return target.apply(this, arguments);\n        } catch (e) {\n          errorObj.e = e;\n          return errorObj;\n        }\n      }\n\n      function tryCatch(fn) {\n        tryCatchTarget = fn;\n        return tryCatcher;\n      }\n\n      var inherits = function inherits(Child, Parent) {\n        var hasProp = {}.hasOwnProperty;\n\n        function T() {\n          this.constructor = Child;\n          this.constructor$ = Parent;\n\n          for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== \"$\") {\n              this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n          }\n        }\n\n        T.prototype = Parent.prototype;\n        Child.prototype = new T();\n        return Child.prototype;\n      };\n\n      function isPrimitive(val) {\n        return val == null || val === true || val === false || typeof val === \"string\" || typeof val === \"number\";\n      }\n\n      function isObject(value) {\n        return typeof value === \"function\" || _typeof(value) === \"object\" && value !== null;\n      }\n\n      function maybeWrapAsError(maybeError) {\n        if (!isPrimitive(maybeError)) return maybeError;\n        return new Error(safeToString(maybeError));\n      }\n\n      function withAppended(target, appendee) {\n        var len = target.length;\n        var ret = new Array(len + 1);\n        var i;\n\n        for (i = 0; i < len; ++i) {\n          ret[i] = target[i];\n        }\n\n        ret[i] = appendee;\n        return ret;\n      }\n\n      function getDataPropertyOrDefault(obj, key, defaultValue) {\n        if (es5.isES5) {\n          var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n          if (desc != null) {\n            return desc.get == null && desc.set == null ? desc.value : defaultValue;\n          }\n        } else {\n          return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n        }\n      }\n\n      function notEnumerableProp(obj, name, value) {\n        if (isPrimitive(obj)) return obj;\n        var descriptor = {\n          value: value,\n          configurable: true,\n          enumerable: false,\n          writable: true\n        };\n        es5.defineProperty(obj, name, descriptor);\n        return obj;\n      }\n\n      function thrower(r) {\n        throw r;\n      }\n\n      var inheritedDataKeys = function () {\n        var excludedPrototypes = [Array.prototype, Object.prototype, Function.prototype];\n\n        var isExcludedProto = function isExcludedProto(val) {\n          for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n\n        if (es5.isES5) {\n          var getKeys = Object.getOwnPropertyNames;\n          return function (obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n\n            while (obj != null && !isExcludedProto(obj)) {\n              var keys;\n\n              try {\n                keys = getKeys(obj);\n              } catch (e) {\n                return ret;\n              }\n\n              for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (visitedKeys[key]) continue;\n                visitedKeys[key] = true;\n                var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n                if (desc != null && desc.get == null && desc.set == null) {\n                  ret.push(key);\n                }\n              }\n\n              obj = es5.getPrototypeOf(obj);\n            }\n\n            return ret;\n          };\n        } else {\n          var hasProp = {}.hasOwnProperty;\n          return function (obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n            /*jshint forin:false */\n\n            enumeration: for (var key in obj) {\n              if (hasProp.call(obj, key)) {\n                ret.push(key);\n              } else {\n                for (var i = 0; i < excludedPrototypes.length; ++i) {\n                  if (hasProp.call(excludedPrototypes[i], key)) {\n                    continue enumeration;\n                  }\n                }\n\n                ret.push(key);\n              }\n            }\n\n            return ret;\n          };\n        }\n      }();\n\n      var thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\n\n      function isClass(fn) {\n        try {\n          if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 && !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods = thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor || hasThisAssignmentAndStaticMethods) {\n              return true;\n            }\n          }\n\n          return false;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      function toFastProperties(obj) {\n        /*jshint -W027,-W055,-W031*/\n        function FakeConstructor() {}\n\n        FakeConstructor.prototype = obj;\n        var receiver = new FakeConstructor();\n\n        function ic() {\n          return _typeof(receiver.foo);\n        }\n\n        ic();\n        ic();\n        return obj;\n        eval(obj);\n      }\n\n      var rident = /^[a-z$_][a-z$_0-9]*$/i;\n\n      function isIdentifier(str) {\n        return rident.test(str);\n      }\n\n      function filledRange(count, prefix, suffix) {\n        var ret = new Array(count);\n\n        for (var i = 0; i < count; ++i) {\n          ret[i] = prefix + i + suffix;\n        }\n\n        return ret;\n      }\n\n      function safeToString(obj) {\n        try {\n          return obj + \"\";\n        } catch (e) {\n          return \"[no string representation]\";\n        }\n      }\n\n      function isError(obj) {\n        return obj instanceof Error || obj !== null && _typeof(obj) === \"object\" && typeof obj.message === \"string\" && typeof obj.name === \"string\";\n      }\n\n      function markAsOriginatingFromRejection(e) {\n        try {\n          notEnumerableProp(e, \"isOperational\", true);\n        } catch (ignore) {}\n      }\n\n      function originatesFromRejection(e) {\n        if (e == null) return false;\n        return e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError || e[\"isOperational\"] === true;\n      }\n\n      function canAttachTrace(obj) {\n        return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n      }\n\n      var ensureErrorObject = function () {\n        if (!(\"stack\" in new Error())) {\n          return function (value) {\n            if (canAttachTrace(value)) return value;\n\n            try {\n              throw new Error(safeToString(value));\n            } catch (err) {\n              return err;\n            }\n          };\n        } else {\n          return function (value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n          };\n        }\n      }();\n\n      function classString(obj) {\n        return {}.toString.call(obj);\n      }\n\n      function copyDescriptors(from, to, filter) {\n        var keys = es5.names(from);\n\n        for (var i = 0; i < keys.length; ++i) {\n          var key = keys[i];\n\n          if (filter(key)) {\n            try {\n              es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n          }\n        }\n      }\n\n      var asArray = function asArray(v) {\n        if (es5.isArray(v)) {\n          return v;\n        }\n\n        return null;\n      };\n\n      if (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n        var ArrayFrom = typeof Array.from === \"function\" ? function (v) {\n          return Array.from(v);\n        } : function (v) {\n          var ret = [];\n          var it = v[Symbol.iterator]();\n          var itResult;\n\n          while (!(itResult = it.next()).done) {\n            ret.push(itResult.value);\n          }\n\n          return ret;\n        };\n\n        asArray = function asArray(v) {\n          if (es5.isArray(v)) {\n            return v;\n          } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n          }\n\n          return null;\n        };\n      }\n\n      var isNode = typeof process !== \"undefined\" && classString(process).toLowerCase() === \"[object process]\";\n      var hasEnvVariables = typeof process !== \"undefined\" && typeof process.env !== \"undefined\";\n\n      function env(key) {\n        return hasEnvVariables ? process.env[key] : undefined;\n      }\n\n      function getNativePromise() {\n        if (typeof Promise === \"function\") {\n          try {\n            var promise = new Promise(function () {});\n\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n              return Promise;\n            }\n          } catch (e) {}\n        }\n      }\n\n      function domainBind(self, cb) {\n        return self.bind(cb);\n      }\n\n      var ret = {\n        isClass: isClass,\n        isIdentifier: isIdentifier,\n        inheritedDataKeys: inheritedDataKeys,\n        getDataPropertyOrDefault: getDataPropertyOrDefault,\n        thrower: thrower,\n        isArray: es5.isArray,\n        asArray: asArray,\n        notEnumerableProp: notEnumerableProp,\n        isPrimitive: isPrimitive,\n        isObject: isObject,\n        isError: isError,\n        canEvaluate: canEvaluate,\n        errorObj: errorObj,\n        tryCatch: tryCatch,\n        inherits: inherits,\n        withAppended: withAppended,\n        maybeWrapAsError: maybeWrapAsError,\n        toFastProperties: toFastProperties,\n        filledRange: filledRange,\n        toString: safeToString,\n        canAttachTrace: canAttachTrace,\n        ensureErrorObject: ensureErrorObject,\n        originatesFromRejection: originatesFromRejection,\n        markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n        classString: classString,\n        copyDescriptors: copyDescriptors,\n        hasDevTools: typeof chrome !== \"undefined\" && chrome && typeof chrome.loadTimes === \"function\",\n        isNode: isNode,\n        hasEnvVariables: hasEnvVariables,\n        env: env,\n        global: globalObject,\n        getNativePromise: getNativePromise,\n        domainBind: domainBind\n      };\n\n      ret.isRecentNode = ret.isNode && function () {\n        var version = process.versions.node.split(\".\").map(Number);\n        return version[0] === 0 && version[1] > 10 || version[0] > 0;\n      }();\n\n      if (ret.isNode) ret.toFastProperties(process);\n\n      try {\n        throw new Error();\n      } catch (e) {\n        ret.lastLineError = e;\n      }\n\n      module.exports = ret;\n    }, {\n      \"./es5\": 13\n    }]\n  }, {}, [4])(4);\n});\n;\n\nif (typeof window !== 'undefined' && window !== null) {\n  window.P = window.Promise;\n} else if (typeof self !== 'undefined' && self !== null) {\n  self.P = self.Promise;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/bluebird/js/browser/bluebird.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\");\n\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\");\n\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/buffer/node_modules/isarray/index.js\");\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/buffer/node_modules/isarray/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/buffer/node_modules/isarray/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n//# sourceURL=webpack:///./node_modules/buffer/node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/component-bind/index.js":
/*!**********************************************!*\
  !*** ./node_modules/component-bind/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/component-bind/index.js?");

/***/ }),

/***/ "./node_modules/component-emitter/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-emitter/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\r\n * Expose `Emitter`.\r\n */\nif (true) {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};\n\n//# sourceURL=webpack:///./node_modules/component-emitter/index.js?");

/***/ }),

/***/ "./node_modules/component-inherit/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-inherit/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};\n\n//# sourceURL=webpack:///./node_modules/component-inherit/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./socket */ \"./node_modules/engine.io-client/lib/socket.js\");\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/socket.js":
/*!*****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/socket.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Module dependencies.\n */\nvar transports = __webpack_require__(/*! ./transports/index */ \"./node_modules/engine.io-client/lib/transports/index.js\");\n\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:socket');\n\nvar index = __webpack_require__(/*! indexof */ \"./node_modules/indexof/index.js\");\n\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\n\nvar parseuri = __webpack_require__(/*! parseuri */ \"./node_modules/parseuri/index.js\");\n\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === _typeof(uri)) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\n\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\n\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = __webpack_require__(/*! ./transport */ \"./node_modules/engine.io-client/lib/transport.js\");\nSocket.transports = __webpack_require__(/*! ./transports/index */ \"./node_modules/engine.io-client/lib/transports/index.js\");\nSocket.parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // per-transport options\n\n  var options = this.transportOptions[name] || {}; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/socket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transport.js":
/*!********************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transport.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\n\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\n\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transport.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies\n */\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\n\nvar XHR = __webpack_require__(/*! ./polling-xhr */ \"./node_modules/engine.io-client/lib/transports/polling-xhr.js\");\n\nvar JSONP = __webpack_require__(/*! ./polling-jsonp */ \"./node_modules/engine.io-client/lib/transports/polling-jsonp.js\");\n\nvar websocket = __webpack_require__(/*! ./websocket */ \"./node_modules/engine.io-client/lib/transports/websocket.js\");\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-jsonp.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module requirements.\n */\nvar Polling = __webpack_require__(/*! ./polling */ \"./node_modules/engine.io-client/lib/transports/polling.js\");\n\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\n\n\nfunction glob() {\n  return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = global.___eio || [];\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling-xhr.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-xhr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\n\nvar Polling = __webpack_require__(/*! ./polling */ \"./node_modules/engine.io-client/lib/transports/polling.js\");\n\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\n\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\nvar Transport = __webpack_require__(/*! ../transport */ \"./node_modules/engine.io-client/lib/transport.js\");\n\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\n\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\n\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\n\nvar yeast = __webpack_require__(/*! yeast */ \"./node_modules/yeast/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/websocket.js":
/*!*******************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/websocket.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * Module dependencies.\n */\nvar Transport = __webpack_require__(/*! ../transport */ \"./node_modules/engine.io-client/lib/transport.js\");\n\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\n\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\n\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\n\nvar yeast = __webpack_require__(/*! yeast */ \"./node_modules/yeast/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof self === 'undefined') {\n  try {\n    NodeWebSocket = __webpack_require__(/*! ws */ 0);\n  } catch (e) {}\n} else {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocket = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/websocket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/xmlhttprequest.js":
/*!*************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/xmlhttprequest.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// browser shim for xmlhttprequest module\nvar hasCORS = __webpack_require__(/*! has-cors */ \"./node_modules/has-cors/index.js\");\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/engine.io-client/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/debug/src/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/debug/src/debug.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/engine.io-client/node_modules/ms/index.js\");\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/debug/src/debug.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/ms/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/ms/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n\n  var type = _typeof(val);\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/lib/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/browser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\nvar keys = __webpack_require__(/*! ./keys */ \"./node_modules/engine.io-parser/lib/keys.js\");\n\nvar hasBinary = __webpack_require__(/*! has-binary2 */ \"./node_modules/has-binary2/index.js\");\n\nvar sliceBuffer = __webpack_require__(/*! arraybuffer.slice */ \"./node_modules/arraybuffer.slice/index.js\");\n\nvar after = __webpack_require__(/*! after */ \"./node_modules/after/index.js\");\n\nvar utf8 = __webpack_require__(/*! ./utf8 */ \"./node_modules/engine.io-parser/lib/utf8.js\");\n\nvar base64encoder;\n\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = __webpack_require__(/*! base64-arraybuffer */ \"./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\");\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = __webpack_require__(/*! blob */ \"./node_modules/blob/index.js\");\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\n      strict: false\n    }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    exports.encodePacket({\n      type: packet.type,\n      data: fr.result\n    }, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, {\n      strict: false\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    } // advance cursor\n\n\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\n\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/lib/keys.js":
/*!***************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/keys.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/keys.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/lib/utf8.js":
/*!***************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/utf8.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, it’s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/utf8.js?");

/***/ }),

/***/ "./node_modules/getscreenmedia/getscreenmedia.js":
/*!*******************************************************!*\
  !*** ./node_modules/getscreenmedia/getscreenmedia.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var adapter = __webpack_require__(/*! webrtc-adapter */ \"./node_modules/webrtc-adapter/src/js/adapter_core.js\");\n\nmodule.exports = function (constraints, cb) {\n  var hasConstraints = arguments.length === 2;\n  var callback = hasConstraints ? cb : constraints;\n  var error;\n\n  if (adapter.browserDetails.browser === 'chrome') {\n    // check that the extension is installed by looking for a\n    // sessionStorage variable that contains the extension id\n    // this has to be set after installation unless the content\n    // script does that\n    if (sessionStorage.getScreenMediaJSExtensionId) {\n      chrome.runtime.sendMessage(sessionStorage.getScreenMediaJSExtensionId, {\n        type: 'getScreen',\n        id: 1\n      }, null, function (data) {\n        if (!data || data.sourceId === '') {\n          // user canceled\n          var error = new Error('NavigatorUserMediaError');\n          error.name = 'NotAllowedError';\n          callback(error);\n        } else {\n          constraints = hasConstraints && constraints || {\n            audio: false,\n            video: {\n              mandatory: {\n                chromeMediaSource: 'desktop',\n                maxWidth: window.screen.width,\n                maxHeight: window.screen.height,\n                maxFrameRate: 3\n              }\n            }\n          };\n          constraints.video.mandatory.chromeMediaSourceId = data.sourceId;\n          window.navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n            callback(null, stream);\n          }).catch(function (err) {\n            callback(err);\n          });\n        }\n      });\n    } else if (window.cefGetScreenMedia) {\n      //window.cefGetScreenMedia is experimental - may be removed without notice\n      window.cefGetScreenMedia(function (sourceId) {\n        if (!sourceId) {\n          var error = new Error('cefGetScreenMediaError');\n          error.name = 'CEF_GETSCREENMEDIA_CANCELED';\n          callback(error);\n        } else {\n          constraints = hasConstraints && constraints || {\n            audio: false,\n            video: {\n              mandatory: {\n                chromeMediaSource: 'desktop',\n                maxWidth: window.screen.width,\n                maxHeight: window.screen.height,\n                maxFrameRate: 3\n              }\n            }\n          };\n          constraints.video.mandatory.chromeMediaSourceId = sourceId;\n          window.navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n            callback(null, stream);\n          }).catch(function (err) {\n            callback(err);\n          });\n        }\n      });\n    } else {\n      error = new Error('Screensharing is not supported');\n      error.name = 'NotSupportedError';\n      callback(error);\n    }\n  } else if (adapter.browserDetails.browser === 'firefox' && adapter.browserDetails.version >= 33) {\n    constraints = hasConstraints && constraints || {\n      video: {\n        mediaSource: 'window'\n      }\n    };\n    window.navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n      callback(null, stream);\n    }).catch(function (err) {\n      callback(err);\n    });\n  } else if (adapter.browserDetails.browser === 'edge' && 'getDisplayMedia' in window.navigator) {\n    window.navigator.getDisplayMedia({\n      video: true\n    }).then(function (stream) {\n      callback(null, stream);\n    }).catch(function (err) {\n      callback(err);\n    });\n  } else {\n    error = new Error('Screensharing is not supported');\n    error.name = 'NotSupportedError';\n    callback(error);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/getscreenmedia/getscreenmedia.js?");

/***/ }),

/***/ "./node_modules/hark/hark.js":
/*!***********************************!*\
  !*** ./node_modules/hark/hark.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var WildEmitter = __webpack_require__(/*! wildemitter */ \"./node_modules/wildemitter/wildemitter.js\");\n\nfunction getMaxVolume(analyser, fftBins) {\n  var maxVolume = -Infinity;\n  analyser.getFloatFrequencyData(fftBins);\n\n  for (var i = 4, ii = fftBins.length; i < ii; i++) {\n    if (fftBins[i] > maxVolume && fftBins[i] < 0) {\n      maxVolume = fftBins[i];\n    }\n  }\n\n  ;\n  return maxVolume;\n}\n\nvar audioContextType;\n\nif (typeof window !== 'undefined') {\n  audioContextType = window.AudioContext || window.webkitAudioContext;\n} // use a single audio context due to hardware limits\n\n\nvar audioContext = null;\n\nmodule.exports = function (stream, options) {\n  var harker = new WildEmitter(); // make it not break in non-supported browsers\n\n  if (!audioContextType) return harker; //Config\n\n  var options = options || {},\n      smoothing = options.smoothing || 0.1,\n      interval = options.interval || 50,\n      threshold = options.threshold,\n      play = options.play,\n      history = options.history || 10,\n      running = true; // Ensure that just a single AudioContext is internally created\n\n  audioContext = options.audioContext || audioContext || new audioContextType();\n  var sourceNode, fftBins, analyser;\n  analyser = audioContext.createAnalyser();\n  analyser.fftSize = 512;\n  analyser.smoothingTimeConstant = smoothing;\n  fftBins = new Float32Array(analyser.frequencyBinCount);\n  if (stream.jquery) stream = stream[0];\n\n  if (stream instanceof HTMLAudioElement || stream instanceof HTMLVideoElement) {\n    //Audio Tag\n    sourceNode = audioContext.createMediaElementSource(stream);\n    if (typeof play === 'undefined') play = true;\n    threshold = threshold || -50;\n  } else {\n    //WebRTC Stream\n    sourceNode = audioContext.createMediaStreamSource(stream);\n    threshold = threshold || -50;\n  }\n\n  sourceNode.connect(analyser);\n  if (play) analyser.connect(audioContext.destination);\n  harker.speaking = false;\n\n  harker.suspend = function () {\n    return audioContext.suspend();\n  };\n\n  harker.resume = function () {\n    return audioContext.resume();\n  };\n\n  Object.defineProperty(harker, 'state', {\n    get: function get() {\n      return audioContext.state;\n    }\n  });\n\n  audioContext.onstatechange = function () {\n    harker.emit('state_change', audioContext.state);\n  };\n\n  harker.setThreshold = function (t) {\n    threshold = t;\n  };\n\n  harker.setInterval = function (i) {\n    interval = i;\n  };\n\n  harker.stop = function () {\n    running = false;\n    harker.emit('volume_change', -100, threshold);\n\n    if (harker.speaking) {\n      harker.speaking = false;\n      harker.emit('stopped_speaking');\n    }\n\n    analyser.disconnect();\n    sourceNode.disconnect();\n  };\n\n  harker.speakingHistory = [];\n\n  for (var i = 0; i < history; i++) {\n    harker.speakingHistory.push(0);\n  } // Poll the analyser node to determine if speaking\n  // and emit events if changed\n\n\n  var looper = function looper() {\n    setTimeout(function () {\n      //check if stop has been called\n      if (!running) {\n        return;\n      }\n\n      var currentVolume = getMaxVolume(analyser, fftBins);\n      harker.emit('volume_change', currentVolume, threshold);\n      var history = 0;\n\n      if (currentVolume > threshold && !harker.speaking) {\n        // trigger quickly, short history\n        for (var i = harker.speakingHistory.length - 3; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n\n        if (history >= 2) {\n          harker.speaking = true;\n          harker.emit('speaking');\n        }\n      } else if (currentVolume < threshold && harker.speaking) {\n        for (var i = 0; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n\n        if (history == 0) {\n          harker.speaking = false;\n          harker.emit('stopped_speaking');\n        }\n      }\n\n      harker.speakingHistory.shift();\n      harker.speakingHistory.push(0 + (currentVolume > threshold));\n      looper();\n    }, interval);\n  };\n\n  looper();\n  return harker;\n};\n\n//# sourceURL=webpack:///./node_modules/hark/hark.js?");

/***/ }),

/***/ "./node_modules/has-binary2/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-binary2/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* global Blob File */\n\n/*\n * Module requirements.\n */\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(obj) {\n  if (!obj || _typeof(obj) !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n    return true;\n  } // see: https://github.com/Automattic/has-binary/pull/4\n\n\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/has-binary2/index.js?");

/***/ }),

/***/ "./node_modules/has-cors/index.js":
/*!****************************************!*\
  !*** ./node_modules/has-cors/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n//# sourceURL=webpack:///./node_modules/has-cors/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/indexof/index.js":
/*!***************************************!*\
  !*** ./node_modules/indexof/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};\n\n//# sourceURL=webpack:///./node_modules/indexof/index.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if (( false ? undefined : _typeof(module)) === \"object\" && _typeof(module.exports) === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var document = window.document;\n  var getProto = Object.getPrototypeOf;\n  var _slice = arr.slice;\n  var concat = arr.concat;\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    noModule: true\n  };\n\n  function DOMEval(code, doc, node) {\n    doc = doc || document;\n    var i,\n        script = doc.createElement(\"script\");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        if (node[i]) {\n          script[i] = node[i];\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return _typeof(obj) === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : _typeof(obj);\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = \"3.3.1\",\n      // Define a local copy of jQuery\n  jQuery = function jQuery(selector, context) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  },\n      // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n  rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function toArray() {\n      return _slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function get(num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return _slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function pushStack(elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function each(callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function map(callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function slice() {\n      return this.pushStack(_slice.apply(this, arguments));\n    },\n    first: function first() {\n      return this.eq(0);\n    },\n    last: function last() {\n      return this.eq(-1);\n    },\n    eq: function eq(i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function end() {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === \"boolean\") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (_typeof(target) !== \"object\" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          src = target[name];\n          copy = options[name]; // Prevent never-ending loop\n\n          if (target === copy) {\n            continue;\n          } // Recurse if we're merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && Array.isArray(src) ? src : [];\n            } else {\n              clone = src && jQuery.isPlainObject(src) ? src : {};\n            } // Never move original objects, clone them\n\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function error(msg) {\n      throw new Error(msg);\n    },\n    noop: function noop() {},\n    isPlainObject: function isPlainObject(obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function isEmptyObject(obj) {\n      /* eslint-disable no-unused-vars */\n      // See https://github.com/eslint/eslint/issues/6125\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a global context\n    globalEval: function globalEval(code) {\n      DOMEval(code);\n    },\n    each: function each(obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // Support: Android <=4.0 only\n    trim: function trim(text) {\n      return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n    },\n    // results is for internal usage only\n    makeArray: function makeArray(arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function inArray(elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function merge(first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function grep(elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function map(elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return concat.apply([], ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.3\n   * https://sizzlejs.com/\n   *\n   * Copyright jQuery Foundation and other contributors\n   * Released under the MIT license\n   * http://jquery.org/license\n   *\n   * Date: 2016-08-08\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = \"sizzle\" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        sortOrder = function sortOrder(a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        push_native = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function indexOf(list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n        // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n    identifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n    \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n    \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n        pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n    \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n    \".*\" + \")\\\\)|)\",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n        rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n        rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n        rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n        rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n        matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    },\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n        funescape = function funescape(_, escaped, escapedWhitespace) {\n      var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n      // Support: Firefox<24\n      // Workaround erroneous numeric interpretation of +\"0x\"\n\n      return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n      String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n      String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function fcssescape(ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return \"\\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE\n    unloadHandler = function unloadHandler() {\n      setDocument();\n    },\n        disabledAncestor = addCombinator(function (elem) {\n      return elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          push_native.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can't trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n          setDocument(context);\n        }\n\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !compilerCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n            if (nodeType !== 1) {\n              newContext = context;\n              newSelector = selector; // qSA looks outside Element context, which is not what we want\n              // Thanks to Andrew Dupont for this workaround technique\n              // Support: IE <=8\n              // Exclude object elements\n            } else if (context.nodeName.toLowerCase() !== \"object\") {\n              // Capture the context ID, setting it first if necessary\n              if (nid = context.getAttribute(\"id\")) {\n                nid = nid.replace(rcssescape, fcssescape);\n              } else {\n                context.setAttribute(\"id\", nid = expando);\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = \"#\" + nid + \" \" + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(\",\"); // Expand context for sibling selectors\n\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n            }\n\n            if (newSelector) {\n              try {\n                push.apply(results, newContext.querySelectorAll(newSelector));\n                return results;\n              } catch (qsaError) {} finally {\n                if (nid === expando) {\n                  context.removeAttribute(\"id\");\n                }\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + \" \"] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split(\"|\"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      // documentElement is verified for cases where it doesn't yet exist\n      // (such as loading iframes in IE - #4833)\n      var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n      return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n\n      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9-11, Edge\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\n      if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      }\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n\n      support.attributes = assert(function (el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName(\"*\") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === \"*\") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n\n\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          }\n        });\n        assert(function (el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n\n\n        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          }\n\n          if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      } // Make sure that attribute selectors are quoted\n\n\n      expr = expr.replace(rattributeQuotes, \"='$1']\");\n\n      if (support.matchesSelector && documentIsHTML && !compilerCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {}\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      if ((context.ownerDocument || context) !== document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = \"\",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        \"ATTR\": function ATTR(match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function CHILD(match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        \"PSEUDO\": function PSEUDO(match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function TAG(nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        \"CLASS\": function CLASS(className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function ATTR(name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === \"!=\";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += \"\";\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n          };\n        },\n        \"CHILD\": function CHILD(type, what, argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n              forward = type.slice(-4) !== \"last\",\n              ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function PSEUDO(pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle.error(\"unsupported lang: \" + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        \"target\": function target(elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function root(elem) {\n          return elem === docElem;\n        },\n        \"focus\": function focus(elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function checked(elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        },\n        \"selected\": function selected(elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        \"empty\": function empty(elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        \"parent\": function parent(elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        // Element/input types\n        \"header\": function header(elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function input(elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function button(elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function text(elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function () {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function (matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + \" \"];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = \"\";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === \"parentNode\",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[\" \"],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function superMatcher(seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          outermostContext = context === document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0;\n\n            if (!context && elem.ownerDocument !== document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n        // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + \" \"];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === \"function\" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function (elem, name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function dir(elem, _dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[_dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var _siblings = function siblings(n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  ;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function find(selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function filter(selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function not(selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function is(selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function has(target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function closest(selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function index(elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function add(selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function addBack(selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function parent(elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function parents(elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function parentsUntil(elem, i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function next(elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function prev(elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function nextAll(elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function prevAll(elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function nextUntil(elem, i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function prevUntil(elem, i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function siblings(elem) {\n      return _siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function children(elem) {\n      return _siblings(elem.firstChild);\n    },\n    contents: function contents(elem) {\n      if (nodeName(elem, \"iframe\")) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n\n\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    _fired,\n        // Flag to prevent firing\n    _locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function fire() {\n      // Enforce single-firing\n      _locked = _locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      _fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn't re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we're done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we're done firing for good\n\n      if (_locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = \"\";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function add() {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function remove() {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function has(fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function empty() {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function disable() {\n        _locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function disabled() {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function lock() {\n        _locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n\n        return this;\n      },\n      locked: function locked() {\n        return !!_locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function fireWith(context, args) {\n        if (!_locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function fire() {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function fired() {\n        return !!_fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function Deferred(func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n          _state = \"pending\",\n          _promise = {\n        state: function state() {\n          return _state;\n        },\n        always: function always() {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function _catch(fn) {\n          return _promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function pipe()\n        /* fnDone, fnFail, fnProgress */\n        {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function then(onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function mightThrow() {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                _typeof(returned) === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it's otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function promise(obj) {\n          return obj != null ? jQuery.extend(obj, _promise) : _promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        _promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            _state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      _promise.promise(deferred); // Call given func if any\n\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function when(singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = _slice.call(arguments),\n          // the master Deferred\n      master = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function updateFunc(i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;\n\n          if (! --remaining) {\n            master.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (master.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return master.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), master.reject);\n      }\n\n      return master.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function ready(wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n\n  var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function fn(elem, key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function acceptData(owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function cache(owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function set(owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function get(owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function access(owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function remove(owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there's no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function hasData(owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n\n    if (data === \"false\") {\n      return false;\n    }\n\n    if (data === \"null\") {\n      return null;\n    } // Only convert to a number if it doesn't change the string\n\n\n    if (data === +data + \"\") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function hasData(elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function data(elem, name, _data) {\n      return dataUser.access(elem, name, _data);\n    },\n    removeData: function removeData(elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function _data(elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function _removeData(elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function data(key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (_typeof(key) === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn't exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function removeData(key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function queue(elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function dequeue(elem, type) {\n      type = type || \"fx\";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function next() {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function _queueHooks(elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function queue(type, data) {\n      var setter = 2;\n\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function dequeue(type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function clearQueue(type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function promise(type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function resolve() {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || \"fx\";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n\n  var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n\n  var swap = function swap(elem, options, callback, args) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.apply(elem, args || []); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, \"\");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n\n    if (display === \"none\") {\n      display = \"block\";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\"; // Remember what we're overwriting\n\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function show() {\n      return showHide(this, true);\n    },\n    hide: function hide() {\n      return showHide(this);\n    },\n    toggle: function toggle(state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i; // We have to close these tags to support XHTML (#13200)\n\n  var wrapMap = {\n    // Support: IE <=9 only\n    option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  }; // Support: IE <=9 only\n\n  wrapMap.optgroup = wrapMap.option;\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        contains,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = \"\";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = \"\";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      contains = jQuery.contains(elem.ownerDocument, elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n      if (contains) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement(\"div\")),\n        input = document.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n  })();\n\n  var documentElement = document.documentElement;\n  var rkeyEvent = /^key/,\n      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n      rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 only\n  // See #13393 for more info\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function _on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (_typeof(types) === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        _on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function fn(event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function add(elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Don't attach events to noData or text/comment nodes (but allow plain objects)\n\n      if (!elemData) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element's event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = {};\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn); // Init the event handler queue if we're the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element's handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function remove(elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it's no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function dispatch(nativeEvent) {\n      // Make a writable jQuery.Event from the native event object\n      var event = jQuery.event.fix(nativeEvent);\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          handlers = (dataPriv.get(this, \"events\") || {})[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n          // a subset or equal to those in the bound event (both can have no namespace).\n          if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function handlers(event, _handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = _handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = _handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + \" \";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < _handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: _handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function addProp(name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function set(value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function fix(originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      focus: {\n        // Fire native event if possible so blur/focus sequence is correct\n        trigger: function trigger() {\n          if (this !== safeActiveElement() && this.focus) {\n            this.focus();\n            return false;\n          }\n        },\n        delegateType: \"focusin\"\n      },\n      blur: {\n        trigger: function trigger() {\n          if (this === safeActiveElement() && this.blur) {\n            this.blur();\n            return false;\n          }\n        },\n        delegateType: \"focusout\"\n      },\n      click: {\n        // For checkbox, fire native event so checked state will be right\n        trigger: function trigger() {\n          if (this.type === \"checkbox\" && this.click && nodeName(this, \"input\")) {\n            this.click();\n            return false;\n          }\n        },\n        // For cross-browser consistency, don't fire native .click() on links\n        _default: function _default(event) {\n          return nodeName(event.target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function postDispatch(event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  };\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn't have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function preventDefault() {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function stopPropagation() {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function stopImmediatePropagation() {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: function which(event) {\n      var button = event.button; // Add which for key events\n\n      if (event.which == null && rkeyEvent.test(event.type)) {\n        return event.charCode != null ? event.charCode : event.keyCode;\n      } // Add which for click: 1 === left; 2 === middle; 3 === right\n\n\n      if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n        if (button & 1) {\n          return 1;\n        }\n\n        if (button & 2) {\n          return 3;\n        }\n\n        if (button & 4) {\n          return 2;\n        }\n\n        return 0;\n      }\n\n      return event.which;\n    }\n  }, jQuery.event.addProp); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function handle(event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function on(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn);\n    },\n    one: function one(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn, 1);\n    },\n    off: function off(types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (_typeof(types) === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var\n  /* eslint-disable max-len */\n  // See https://github.com/eslint/eslint/issues/3229\n  rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n  /* eslint-enable */\n  // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked=\"checked\" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.access(src);\n      pdataCur = dataPriv.set(dest, pdataOld);\n      events = pdataOld.events;\n\n      if (events) {\n        delete pdataCur.handle;\n        pdataCur.events = {};\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = concat.apply([], args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl) {\n                  jQuery._evalUrl(node.src);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), doc, node);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function _remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && jQuery.contains(node.ownerDocument, node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function htmlPrefilter(html) {\n      return html.replace(rxhtmlTag, \"<$1></$2>\");\n    },\n    clone: function clone(elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = jQuery.contains(elem.ownerDocument, elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, \"script\");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function cleanData(elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function detach(selector) {\n      return _remove(this, selector, true);\n    },\n    remove: function remove(selector) {\n      return _remove(this, selector);\n    },\n    text: function text(value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function append() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function prepend() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function before() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function after() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function empty() {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = \"\";\n        }\n      }\n\n      return this;\n    },\n    clone: function clone(dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function html(value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function replaceWith() {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n  var getStyles = function getStyles(elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function boxSizingReliable() {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function pixelBoxStyles() {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function pixelPosition() {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function reliableMarginLeft() {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function scrollboxSize() {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function get() {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var // Swappable if display is none or starts with table\n  // except \"table\", \"table-cell\", or \"table-caption\"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: \"absolute\",\n    visibility: \"hidden\",\n    display: \"block\"\n  },\n      cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  },\n      cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n      emptyStyle = document.createElement(\"div\").style; // Return a css property mapped to a potentially vendor prefixed property\n\n  function vendorPropName(name) {\n    // Shortcut for names that are not vendor prefixed\n    if (name in emptyStyle) {\n      return name;\n    } // Check for vendor prefixed names\n\n\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a property mapped along what jQuery.cssProps suggests or to\n  // a vendor prefixed property.\n\n\n  function finalPropName(name) {\n    var ret = jQuery.cssProps[name];\n\n    if (!ret) {\n      ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n    }\n\n    return ret;\n  }\n\n  function setPositiveNumber(elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        } // For \"content\" or \"padding\", subtract border\n\n\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5));\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        val = curCSS(elem, dimension, styles),\n        isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n        valueIsBorderBox = isBorderBox; // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = \"auto\";\n    } // Check for style in case a browser which returns unreliable values\n    // for getComputedStyle silently falls back to the reliable elem.style\n\n\n    valueIsBorderBox = valueIsBorderBox && (support.boxSizingReliable() || val === elem.style[dimension]); // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\n    if (val === \"auto\" || !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") {\n      val = elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)]; // offsetWidth/offsetHeight provide border-box values\n\n      valueIsBorderBox = true;\n    } // Normalize \"\" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element's box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function get(elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function style(elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we're working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n      if (value !== undefined) {\n        type = _typeof(value); // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = \"number\";\n        } // Make sure that null and NaN values aren't set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n\n\n        if (type === \"number\") {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        } // background-* props affect original clone's values\n\n\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function css(elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert \"normal\" to computed value\n\n\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function get(elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function set(elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n            subtract = extra && boxModelAdjustment(elem, dimension, extra, isBorderBox, styles); // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && support.scrollboxSize() === styles.position) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function expand(value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function css(name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function init(elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function cur() {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function run(percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function get(tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function set(tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function set(tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function linear(p) {\n      return p;\n    },\n    swing: function swing(p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = \"width\" in props || \"height\" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, \"fxshow\"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict \"overflow\" and \"display\" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n\n      display = jQuery.css(elem, \"display\");\n\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n\n          style.display = \"inline-block\";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, \"fxshow\");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don't match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function tick() {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function createTween(prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function stop(gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function tweener(props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function prefilter(callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && _typeof(speed) === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function fadeTo(speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function animate(prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function doAnimation() {\n        // Operate on a copy of prop so per-property easing won't be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function stop(type, clearQueue, gotoEnd) {\n      var stopQueue = function stopQueue(hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue && type !== false) {\n        this.queue(type || \"fx\", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + \"queueHooks\",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function finish(type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + \"queue\"],\n            hooks = data[type + \"queueHooks\"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement(\"input\"),\n        select = document.createElement(\"select\"),\n        opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n\n    support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function attr(name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function removeAttr(name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function attr(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function set(elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function removeAttr(elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function set(elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function prop(name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function removeProp(name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function prop(elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function get(elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function get(elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function set(elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function addClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function removeClass(value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function toggleClass(value, stateVal) {\n      var type = _typeof(value),\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function hasClass(selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function val(value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? \"\" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as \"\"; convert numbers to string\n\n\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function get(elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function get(elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === \"select-one\",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don't need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function set(elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function set(elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function stopPropagationCallback(e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function trigger(event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, \"type\") ? event.type : event,\n          namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, _typeof(event) === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, \"events\") || {})[event.type] && dataPriv.get(cur, \"handle\");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function simulate(type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function trigger(type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function triggerHandler(type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function handler(event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function setup() {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function teardown() {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = Date.now();\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml;\n\n    if (!data || typeof data !== \"string\") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {\n      xml = undefined;\n    }\n\n    if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n      jQuery.error(\"Invalid XML: \" + data);\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (_typeof(v) === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function add(key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    }; // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function serialize() {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function serializeArray() {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol \"*\" can be used\n   * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol \"*\" can be used\n   * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = \"*/\".concat(\"*\"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  } // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    } // Check if we're dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function ajaxSetup(target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function ajax(url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (_typeof(url) === \"object\") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks(\"once memory\"),\n          // Status-dependent callbacks\n      _statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = \"canceled\",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function getResponseHeader(key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase()] = match[2];\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase()];\n          }\n\n          return match == null ? null : match;\n        },\n        // Raw string\n        getAllResponseHeaders: function getAllResponseHeaders() {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function setRequestHeader(name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function overrideMimeType(type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function statusCode(map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                _statusCode[code] = [_statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function abort(statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"]; // A cross-domain request is in order when the origin doesn't match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, \"\"); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = \"abort\"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || \"\"; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader(\"etag\");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\"; // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\"; // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = \"error\";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(_statusCode);\n        _statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function getJSON(url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function getScript(url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n\n  jQuery._evalUrl = function (url) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      \"throws\": true\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function wrapAll(html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function wrapInner(html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function wrap(html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function unwrap(selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var _callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function send(headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n\n\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          _callback = function callback(type) {\n            return function () {\n              if (_callback) {\n                _callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = _callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = _callback(\"error\"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (_callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          _callback = _callback(\"abort\");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (_callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function abort() {\n          if (_callback) {\n            _callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function textScript(text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache's special case and crossDomain\n\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain requests\n    if (s.crossDomain) {\n      var script, _callback2;\n\n      return {\n        send: function send(_, complete) {\n          script = jQuery(\"<script>\").prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", _callback2 = function callback(evt) {\n            script.remove();\n            _callback2 = null;\n\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function abort() {\n          if (_callback2) {\n            _callback2();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function jsonpCallback() {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = \"json\"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return \"script\";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }(); // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it's a function\n\n\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && _typeof(params) === \"object\") {\n      type = \"POST\";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  }; // Attach a bunch of functions for handling common AJAX events\n\n\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function setOffset(elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, \"position\"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function offset(options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function position() {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function offsetParent() {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each([\"top\", \"left\"], function (i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n            extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  });\n  jQuery.fn.extend({\n    hover: function hover(fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.fn.extend({\n    bind: function bind(types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function unbind(types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function delegate(selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function undelegate(selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    }\n  }); // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = _slice.call(arguments, 2);\n\n    proxy = function proxy() {\n      return fn.apply(context || this, args.concat(_slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (!noGlobal) {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/json3/lib/json3.js":
/*!*****************************************!*\
  !*** ./node_modules/json3/lib/json3.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;\n(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader =  true && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\"); // A set of types used to distinguish objects from primitives.\n\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  }; // Detect the `exports` object exposed by CommonJS implementations.\n\n  var freeExports = objectTypes[ false ? undefined : _typeof(exports)] && exports && !exports.nodeType && exports; // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n\n  var root = objectTypes[typeof window === \"undefined\" ? \"undefined\" : _typeof(window)] && window || this,\n      freeGlobal = freeExports && objectTypes[ false ? undefined : _typeof(module)] && module && !module.nodeType && (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  } // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n\n\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]()); // Native constructor aliases.\n\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"]; // Delegate to the native `stringify` and `parse` implementations.\n\n    if (_typeof(nativeJSON) == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    } // Convenience aliases.\n\n\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        _isProperty,\n        _forEach,\n        undef; // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\n\n    var isExtended = new Date(-3509827334573292);\n\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 && // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {} // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n\n\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n\n      var isSupported;\n\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value,\n            serialized = \"{\\\"a\\\":[1,true,false,null,\\\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\\\"]}\"; // Test `JSON.stringify`.\n\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify,\n              stringifySupported = typeof stringify == \"function\" && isExtended;\n\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function value() {\n              return 1;\n            }).toJSON = value;\n\n            try {\n              stringifySupported = // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" && // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" && stringify(new String()) == '\"\"' && // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef && // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef && // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef && // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" && stringify([value]) == \"[1]\" && // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" && // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" && // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" && // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({\n                \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"]\n              }) == serialized && // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" && stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" && // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' && // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' && // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' && // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n\n          isSupported = stringifySupported;\n        } // Test `JSON.parse`.\n\n\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n\n          isSupported = parseSupported;\n        }\n      }\n\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\"; // Detect incomplete support for accessing string characters by index.\n\n      var charIndexBuggy = has(\"bug-string-char-index\"); // Define additional utility methods if the `Date` methods are buggy.\n\n      if (!isExtended) {\n        var floor = Math.floor; // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]; // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n\n        var getDay = function getDay(year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      } // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n\n\n      if (!(_isProperty = objectProto.hasOwnProperty)) {\n        _isProperty = function isProperty(property) {\n          var members = {},\n              constructor;\n\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            _isProperty = function isProperty(property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__,\n                  result = property in (this.__proto__ = null, this); // Restore the original prototype chain.\n\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor; // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n\n            _isProperty = function isProperty(property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n\n          members = null;\n          return _isProperty.call(this, property);\n        };\n      } // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n\n\n      _forEach = function forEach(object, callback) {\n        var size = 0,\n            Properties,\n            members,\n            property; // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\n        (Properties = function Properties() {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0; // Iterate over a new instance of the `Properties` class.\n\n        members = new Properties();\n\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (_isProperty.call(members, property)) {\n            size++;\n          }\n        }\n\n        Properties = members = null; // Normalize the iteration algorithm.\n\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"]; // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n\n          _forEach = function forEach(object, callback) {\n            var isFunction = getClass.call(object) == functionClass,\n                property,\n                length;\n\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[_typeof(object.hasOwnProperty)] && object.hasOwnProperty || _isProperty;\n\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            } // Manually invoke the callback for each non-enumerable property.\n\n\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property)) {\n              ;\n            }\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          _forEach = function forEach(object, callback) {\n            // Create a set of iterated properties.\n            var members = {},\n                isFunction = getClass.call(object) == functionClass,\n                property;\n\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !_isProperty.call(members, property) && (members[property] = 1) && _isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          _forEach = function forEach(object, callback) {\n            var isFunction = getClass.call(object) == functionClass,\n                property,\n                isConstructor;\n\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && _isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            } // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n\n\n            if (isConstructor || _isProperty.call(object, property = \"constructor\")) {\n              callback(property);\n            }\n          };\n        }\n\n        return _forEach(object, callback);\n      }; // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n\n\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        }; // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n\n        var leadingZeroes = \"000000\";\n\n        var toPaddedString = function toPaddedString(width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        }; // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\n\n        var unicodePrefix = \"\\\\u00\";\n\n        var quote = function quote(value) {\n          var result = '\"',\n              index = 0,\n              length = value.length,\n              useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index); // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n\n            switch (charCode) {\n              case 8:\n              case 9:\n              case 10:\n              case 12:\n              case 13:\n              case 34:\n              case 92:\n                result += Escapes[charCode];\n                break;\n\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n\n          return result + '\"';\n        }; // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\n\n        var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n\n          if (_typeof(value) == \"object\" && value) {\n            className = getClass.call(value);\n\n            if (className == dateClass && !_isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++) {\n                    ;\n                  }\n\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++) {\n                    ;\n                  }\n\n                  date = 1 + date - getDay(year, month); // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n\n                  time = (value % 864e5 + 864e5) % 864e5; // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                } // Serialize extended years correctly.\n\n\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) + // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) + // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && (className != numberClass && className != stringClass && className != arrayClass || _isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n\n          if (value === null) {\n            return \"null\";\n          }\n\n          className = getClass.call(value);\n\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          } // Recursively serialize objects and arrays.\n\n\n          if (_typeof(value) == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            } // Add the object to the stack of traversed objects.\n\n\n            stack.push(value);\n            results = []; // Save the current indentation level and indent one additional level.\n\n            prefix = indentation;\n            indentation += whitespace;\n\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n\n              result = results.length ? whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : \"[\" + results.join(\",\") + \"]\" : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              _forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n\n              result = results.length ? whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : \"{\" + results.join(\",\") + \"}\" : \"{}\";\n            } // Remove the object from the traversed object stack.\n\n\n            stack.pop();\n            return result;\n          }\n        }; // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\n\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n\n          if (objectTypes[_typeof(filter)] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1)) {\n                ;\n              }\n            }\n          }\n\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \") {\n                  ;\n                }\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          } // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n\n\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      } // Public: Parses a JSON source string.\n\n\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode; // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        }; // Internal: Stores the parser state.\n\n        var Index, Source; // Internal: Resets the parser state and throws a `SyntaxError`.\n\n        var abort = function abort() {\n          Index = Source = null;\n          throw SyntaxError();\n        }; // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n\n\n        var lex = function lex() {\n          var source = Source,\n              length = source.length,\n              value,\n              begin,\n              position,\n              isSigned,\n              charCode;\n\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n\n            switch (charCode) {\n              case 9:\n              case 10:\n              case 13:\n              case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n\n              case 123:\n              case 125:\n              case 91:\n              case 93:\n              case 58:\n              case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n\n                    switch (charCode) {\n                      case 92:\n                      case 34:\n                      case 47:\n                      case 98:\n                      case 116:\n                      case 110:\n                      case 102:\n                      case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index); // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        } // Revive the escaped character.\n\n\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n\n                    charCode = source.charCodeAt(Index);\n                    begin = Index; // Optimize for the common case where a string is valid.\n\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    } // Append the string as-is.\n\n\n                    value += source.slice(begin, Index);\n                  }\n                }\n\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                } // Unterminated string.\n\n\n                abort();\n\n              default:\n                // Parse numbers and literals.\n                begin = Index; // Advance past the negative sign, if one is specified.\n\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                } // Parse an integer or floating-point value.\n\n\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n\n                  isSigned = false; // Parse the integer component.\n\n                  for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++) {\n                    ;\n                  } // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n\n\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index; // Parse the decimal component.\n\n                    for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {\n                      ;\n                    }\n\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n\n                    Index = position;\n                  } // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n\n\n                  charCode = source.charCodeAt(Index);\n\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index); // Skip past the sign following the exponent, if one is\n                    // specified.\n\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    } // Parse the exponential component.\n\n\n                    for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {\n                      ;\n                    }\n\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n\n                    Index = position;\n                  } // Coerce the parsed value to a JavaScript number.\n\n\n                  return +source.slice(begin, Index);\n                } // A negative sign may only precede numbers.\n\n\n                if (isSigned) {\n                  abort();\n                } // `true`, `false`, and `null` literals.\n\n\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                } // Unrecognized token.\n\n\n                abort();\n            }\n          } // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n\n\n          return \"$\";\n        }; // Internal: Parses a JSON `value` token.\n\n\n        var get = function get(value) {\n          var results, hasMembers;\n\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            } // Parse object and array literals.\n\n\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex(); // A closing square bracket marks the end of the array literal.\n\n                if (value == \"]\") {\n                  break;\n                } // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n\n\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                } // Elisions and leading commas are not permitted.\n\n\n                if (value == \",\") {\n                  abort();\n                }\n\n                results.push(get(value));\n              }\n\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex(); // A closing curly brace marks the end of the object literal.\n\n                if (value == \"}\") {\n                  break;\n                } // If the object literal contains members, the current token\n                // should be a comma separator.\n\n\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                } // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n\n\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n\n                results[value.slice(1)] = get(lex());\n              }\n\n              return results;\n            } // Unexpected token encountered.\n\n\n            abort();\n          }\n\n          return value;\n        }; // Internal: Updates a traversed object member.\n\n\n        var update = function update(source, property, callback) {\n          var element = walk(source, property, callback);\n\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        }; // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\n\n        var walk = function walk(source, property, callback) {\n          var value = source[property],\n              length;\n\n          if (_typeof(value) == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              _forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n\n          return callback.call(source, property, value);\n        }; // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\n\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex()); // If a JSON string contains multiple tokens, it is invalid.\n\n          if (lex() != \"$\") {\n            abort();\n          } // Reset the parser state.\n\n\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n    var JSON3 = runInContext(root, root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function noConflict() {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n\n        return JSON3;\n      }\n    });\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  } // Export for asynchronous module loaders.\n\n\n  if (isLoader) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return JSON3;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}).call(this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/json3/lib/json3.js?");

/***/ }),

/***/ "./node_modules/localmedia/localmedia.js":
/*!***********************************************!*\
  !*** ./node_modules/localmedia/localmedia.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar hark = __webpack_require__(/*! hark */ \"./node_modules/hark/hark.js\");\n\nvar getScreenMedia = __webpack_require__(/*! getscreenmedia */ \"./node_modules/getscreenmedia/getscreenmedia.js\");\n\nvar WildEmitter = __webpack_require__(/*! wildemitter */ \"./node_modules/wildemitter/wildemitter.js\");\n\nvar mockconsole = __webpack_require__(/*! mockconsole */ \"./node_modules/mockconsole/mockconsole.js\");\n\nfunction isAllTracksEnded(stream) {\n  var isAllTracksEnded = true;\n  stream.getTracks().forEach(function (t) {\n    isAllTracksEnded = t.readyState === 'ended' && isAllTracksEnded;\n  });\n  return isAllTracksEnded;\n}\n\nfunction shouldWorkAroundFirefoxStopStream() {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  if (!window.navigator.mozGetUserMedia) {\n    return false;\n  }\n\n  var match = window.navigator.userAgent.match(/Firefox\\/(\\d+)\\./);\n  var version = match && match.length >= 1 && parseInt(match[1], 10);\n  return version < 50;\n}\n\nfunction LocalMedia(opts) {\n  WildEmitter.call(this);\n  var config = this.config = {\n    detectSpeakingEvents: false,\n    audioFallback: false,\n    media: {\n      audio: true,\n      video: true\n    },\n    harkOptions: null,\n    logger: mockconsole\n  };\n  var item;\n\n  for (item in opts) {\n    if (opts.hasOwnProperty(item)) {\n      this.config[item] = opts[item];\n    }\n  }\n\n  this.logger = config.logger;\n  this._log = this.logger.log.bind(this.logger, 'LocalMedia:');\n  this._logerror = this.logger.error.bind(this.logger, 'LocalMedia:');\n  this.localStreams = [];\n  this.localScreens = [];\n\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n    this._logerror('Your browser does not support local media capture.');\n  }\n\n  this._audioMonitors = [];\n  this.on('localStreamStopped', this._stopAudioMonitor.bind(this));\n  this.on('localScreenStopped', this._stopAudioMonitor.bind(this));\n}\n\nutil.inherits(LocalMedia, WildEmitter);\n\nLocalMedia.prototype.start = function (mediaConstraints, cb) {\n  var self = this;\n  var constraints = mediaConstraints || this.config.media;\n  this.emit('localStreamRequested', constraints);\n  navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n    if (constraints.audio && self.config.detectSpeakingEvents) {\n      self._setupAudioMonitor(stream, self.config.harkOptions);\n    }\n\n    self.localStreams.push(stream);\n    stream.getTracks().forEach(function (track) {\n      track.addEventListener('ended', function () {\n        if (isAllTracksEnded(stream)) {\n          self._removeStream(stream);\n        }\n      });\n    });\n    self.emit('localStream', stream);\n\n    if (cb) {\n      return cb(null, stream);\n    }\n  }).catch(function (err) {\n    // Fallback for users without a camera\n    if (self.config.audioFallback && err.name === 'NotFoundError' && constraints.video !== false) {\n      constraints.video = false;\n      self.start(constraints, cb);\n      return;\n    }\n\n    self.emit('localStreamRequestFailed', constraints);\n\n    if (cb) {\n      return cb(err, null);\n    }\n  });\n};\n\nLocalMedia.prototype.stop = function (stream) {\n  this.stopStream(stream);\n  this.stopScreenShare(stream);\n};\n\nLocalMedia.prototype.stopStream = function (stream) {\n  var self = this;\n\n  if (stream) {\n    var idx = this.localStreams.indexOf(stream);\n\n    if (idx > -1) {\n      stream.getTracks().forEach(function (track) {\n        track.stop();\n      }); //Half-working fix for Firefox, see: https://bugzilla.mozilla.org/show_bug.cgi?id=1208373\n\n      if (shouldWorkAroundFirefoxStopStream()) {\n        this._removeStream(stream);\n      }\n    }\n  } else {\n    this.localStreams.forEach(function (stream) {\n      stream.getTracks().forEach(function (track) {\n        track.stop();\n      }); //Half-working fix for Firefox, see: https://bugzilla.mozilla.org/show_bug.cgi?id=1208373\n\n      if (shouldWorkAroundFirefoxStopStream()) {\n        self._removeStream(stream);\n      }\n    });\n  }\n};\n\nLocalMedia.prototype.startScreenShare = function (constraints, cb) {\n  var self = this;\n  this.emit('localScreenRequested');\n\n  if (typeof constraints === 'function' && !cb) {\n    cb = constraints;\n    constraints = null;\n  }\n\n  getScreenMedia(constraints, function (err, stream) {\n    if (!err) {\n      self.localScreens.push(stream);\n      stream.getTracks().forEach(function (track) {\n        track.addEventListener('ended', function () {\n          var isAllTracksEnded = true;\n          stream.getTracks().forEach(function (t) {\n            isAllTracksEnded = t.readyState === 'ended' && isAllTracksEnded;\n          });\n\n          if (isAllTracksEnded) {\n            self._removeStream(stream);\n          }\n        });\n      });\n      self.emit('localScreen', stream);\n    } else {\n      self.emit('localScreenRequestFailed');\n    } // enable the callback\n\n\n    if (cb) {\n      return cb(err, stream);\n    }\n  });\n};\n\nLocalMedia.prototype.stopScreenShare = function (stream) {\n  var self = this;\n\n  if (stream) {\n    var idx = this.localScreens.indexOf(stream);\n\n    if (idx > -1) {\n      stream.getTracks().forEach(function (track) {\n        track.stop();\n      }); //Half-working fix for Firefox, see: https://bugzilla.mozilla.org/show_bug.cgi?id=1208373\n\n      if (shouldWorkAroundFirefoxStopStream()) {\n        this._removeStream(stream);\n      }\n    }\n  } else {\n    this.localScreens.forEach(function (stream) {\n      stream.getTracks().forEach(function (track) {\n        track.stop();\n      }); //Half-working fix for Firefox, see: https://bugzilla.mozilla.org/show_bug.cgi?id=1208373\n\n      if (shouldWorkAroundFirefoxStopStream()) {\n        self._removeStream(stream);\n      }\n    });\n  }\n}; // Audio controls\n\n\nLocalMedia.prototype.mute = function () {\n  this._audioEnabled(false);\n\n  this.emit('audioOff');\n};\n\nLocalMedia.prototype.unmute = function () {\n  this._audioEnabled(true);\n\n  this.emit('audioOn');\n}; // Video controls\n\n\nLocalMedia.prototype.pauseVideo = function () {\n  this._videoEnabled(false);\n\n  this.emit('videoOff');\n};\n\nLocalMedia.prototype.resumeVideo = function () {\n  this._videoEnabled(true);\n\n  this.emit('videoOn');\n}; // Combined controls\n\n\nLocalMedia.prototype.pause = function () {\n  this.mute();\n  this.pauseVideo();\n};\n\nLocalMedia.prototype.resume = function () {\n  this.unmute();\n  this.resumeVideo();\n}; // Internal methods for enabling/disabling audio/video\n\n\nLocalMedia.prototype._audioEnabled = function (bool) {\n  this.localStreams.forEach(function (stream) {\n    stream.getAudioTracks().forEach(function (track) {\n      track.enabled = !!bool;\n    });\n  });\n};\n\nLocalMedia.prototype._videoEnabled = function (bool) {\n  this.localStreams.forEach(function (stream) {\n    stream.getVideoTracks().forEach(function (track) {\n      track.enabled = !!bool;\n    });\n  });\n}; // check if all audio streams are enabled\n\n\nLocalMedia.prototype.isAudioEnabled = function () {\n  var enabled = true;\n  this.localStreams.forEach(function (stream) {\n    stream.getAudioTracks().forEach(function (track) {\n      enabled = enabled && track.enabled;\n    });\n  });\n  return enabled;\n}; // check if all video streams are enabled\n\n\nLocalMedia.prototype.isVideoEnabled = function () {\n  var enabled = true;\n  this.localStreams.forEach(function (stream) {\n    stream.getVideoTracks().forEach(function (track) {\n      enabled = enabled && track.enabled;\n    });\n  });\n  return enabled;\n};\n\nLocalMedia.prototype._removeStream = function (stream) {\n  var idx = this.localStreams.indexOf(stream);\n\n  if (idx > -1) {\n    this.localStreams.splice(idx, 1);\n    this.emit('localStreamStopped', stream);\n  } else {\n    idx = this.localScreens.indexOf(stream);\n\n    if (idx > -1) {\n      this.localScreens.splice(idx, 1);\n      this.emit('localScreenStopped', stream);\n    }\n  }\n};\n\nLocalMedia.prototype._setupAudioMonitor = function (stream, harkOptions) {\n  this._log('Setup audio');\n\n  var audio = hark(stream, harkOptions);\n  var self = this;\n  var timeout;\n  audio.on('speaking', function () {\n    self.emit('speaking');\n  });\n  audio.on('stopped_speaking', function () {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(function () {\n      self.emit('stoppedSpeaking');\n    }, 1000);\n  });\n  audio.on('volume_change', function (volume, threshold) {\n    self.emit('volumeChange', volume, threshold);\n  });\n\n  this._audioMonitors.push({\n    audio: audio,\n    stream: stream\n  });\n};\n\nLocalMedia.prototype._stopAudioMonitor = function (stream) {\n  var idx = -1;\n\n  this._audioMonitors.forEach(function (monitors, i) {\n    if (monitors.stream === stream) {\n      idx = i;\n    }\n  });\n\n  if (idx > -1) {\n    this._audioMonitors[idx].audio.stop();\n\n    this._audioMonitors.splice(idx, 1);\n  }\n};\n\nmodule.exports = LocalMedia;\n\n//# sourceURL=webpack:///./node_modules/localmedia/localmedia.js?");

/***/ }),

/***/ "./node_modules/mockconsole/mockconsole.js":
/*!*************************************************!*\
  !*** ./node_modules/mockconsole/mockconsole.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var methods = \"assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn\".split(\",\");\nvar l = methods.length;\n\nvar fn = function fn() {};\n\nvar mockconsole = {};\n\nwhile (l--) {\n  mockconsole[methods[l]] = fn;\n}\n\nmodule.exports = mockconsole;\n\n//# sourceURL=webpack:///./node_modules/mockconsole/mockconsole.js?");

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n\n  var type = _typeof(val);\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/myclass/index.js":
/*!***************************************!*\
  !*** ./node_modules/myclass/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./my.class.js */ \"./node_modules/myclass/my.class.js\");\n\n//# sourceURL=webpack:///./node_modules/myclass/index.js?");

/***/ }),

/***/ "./node_modules/myclass/my.class.js":
/*!******************************************!*\
  !*** ./node_modules/myclass/my.class.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*globals define:true, window:true, module:true*/\n(function () {\n  // Namespace object\n  var my = {}; // Return as AMD module or attach to head object\n\n  if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n    return my;\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {} //============================================================================\n  // @method my.Class\n  // @params body:Object\n  // @params SuperClass:function, ImplementClasses:function..., body:Object\n  // @return function\n\n  my.Class = function () {\n    var len = arguments.length;\n    var body = arguments[len - 1];\n    var SuperClass = len > 1 ? arguments[0] : null;\n    var hasImplementClasses = len > 2;\n    var Class, SuperClassEmpty;\n\n    if (body.constructor === Object) {\n      Class = function Class() {};\n    } else {\n      Class = body.constructor;\n      delete body.constructor;\n    }\n\n    if (SuperClass) {\n      SuperClassEmpty = function SuperClassEmpty() {};\n\n      SuperClassEmpty.prototype = SuperClass.prototype;\n      Class.prototype = new SuperClassEmpty();\n      Class.prototype.constructor = Class;\n      Class.Super = SuperClass;\n      extend(Class, SuperClass, false);\n    }\n\n    if (hasImplementClasses) for (var i = 1; i < len - 1; i++) {\n      extend(Class.prototype, arguments[i].prototype, false);\n    }\n    extendClass(Class, body);\n    return Class;\n  }; //============================================================================\n  // @method my.extendClass\n  // @params Class:function, extension:Object, ?override:boolean=true\n\n\n  var extendClass = my.extendClass = function (Class, extension, override) {\n    if (extension.STATIC) {\n      extend(Class, extension.STATIC, override);\n      delete extension.STATIC;\n    }\n\n    extend(Class.prototype, extension, override);\n  }; //============================================================================\n\n\n  var extend = function extend(obj, extension, override) {\n    var prop;\n\n    if (override === false) {\n      for (prop in extension) {\n        if (!(prop in obj)) obj[prop] = extension[prop];\n      }\n    } else {\n      for (prop in extension) {\n        obj[prop] = extension[prop];\n      }\n\n      if (extension.toString !== Object.prototype.toString) obj.toString = extension.toString;\n    }\n  };\n})();\n\n//# sourceURL=webpack:///./node_modules/myclass/my.class.js?");

/***/ }),

/***/ "./node_modules/parseqs/index.js":
/*!***************************************!*\
  !*** ./node_modules/parseqs/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};\n\n//# sourceURL=webpack:///./node_modules/parseqs/index.js?");

/***/ }),

/***/ "./node_modules/parseuri/index.js":
/*!****************************************!*\
  !*** ./node_modules/parseuri/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};\n\n//# sourceURL=webpack:///./node_modules/parseuri/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/q/q.js":
/*!*****************************!*\
  !*** ./node_modules/q/q.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// vim:ts=4:sts=4:sw=4:\n\n/*!\n *\n * Copyright 2009-2017 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n(function (definition) {\n  \"use strict\"; // This file will function properly as a <script> tag, or a module\n  // using CommonJS and NodeJS or RequireJS module formats.  In\n  // Common/Node/RequireJS, the module exports the Q API and when\n  // executed as a simple <script>, it creates a Q global instead.\n  // Montage Require\n\n  if (typeof bootstrap === \"function\") {\n    bootstrap(\"promise\", definition); // CommonJS\n  } else if (( false ? undefined : _typeof(exports)) === \"object\" && ( false ? undefined : _typeof(module)) === \"object\") {\n    module.exports = definition(); // RequireJS\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // SES (Secure EcmaScript)\n  } else { var previousQ, global; }\n})(function () {\n  \"use strict\";\n\n  var hasStacks = false;\n\n  try {\n    throw new Error();\n  } catch (e) {\n    hasStacks = !!e.stack;\n  } // All code after this point will be filtered from stack traces reported\n  // by Q.\n\n\n  var qStartingLine = captureLine();\n  var qFileName; // shims\n  // used for fallback in \"allResolved\"\n\n  var noop = function noop() {}; // Use the fastest possible means to execute a task in a future turn\n  // of the event loop.\n\n\n  var nextTick = function () {\n    // linked list of tasks (single, with head node)\n    var head = {\n      task: void 0,\n      next: null\n    };\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false; // queue for late tasks, used by unhandled rejection tracking\n\n    var laterQueue = [];\n\n    function flush() {\n      /* jshint loopfunc: true */\n      var task, domain;\n\n      while (head.next) {\n        head = head.next;\n        task = head.task;\n        head.task = void 0;\n        domain = head.domain;\n\n        if (domain) {\n          head.domain = void 0;\n          domain.enter();\n        }\n\n        runSingle(task, domain);\n      }\n\n      while (laterQueue.length) {\n        task = laterQueue.pop();\n        runSingle(task);\n      }\n\n      flushing = false;\n    } // runs a single function in the async queue\n\n\n    function runSingle(task, domain) {\n      try {\n        task();\n      } catch (e) {\n        if (isNodeJS) {\n          // In node, uncaught exceptions are considered fatal errors.\n          // Re-throw them synchronously to interrupt flushing!\n          // Ensure continuation if the uncaught exception is suppressed\n          // listening \"uncaughtException\" events (as domains does).\n          // Continue in next event to avoid tick recursion.\n          if (domain) {\n            domain.exit();\n          }\n\n          setTimeout(flush, 0);\n\n          if (domain) {\n            domain.enter();\n          }\n\n          throw e;\n        } else {\n          // In browsers, uncaught exceptions are not fatal.\n          // Re-throw them asynchronously to avoid slow-downs.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      }\n\n      if (domain) {\n        domain.exit();\n      }\n    }\n\n    nextTick = function nextTick(task) {\n      tail = tail.next = {\n        task: task,\n        domain: isNodeJS && process.domain,\n        next: null\n      };\n\n      if (!flushing) {\n        flushing = true;\n        requestTick();\n      }\n    };\n\n    if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && process.toString() === \"[object process]\" && process.nextTick) {\n      // Ensure Q is in a real Node environment, with a `process.nextTick`.\n      // To see through fake Node environments:\n      // * Mocha test runner - exposes a `process` global without a `nextTick`\n      // * Browserify - exposes a `process.nexTick` function that uses\n      //   `setTimeout`. In this case `setImmediate` is preferred because\n      //    it is faster. Browserify's `process.toString()` yields\n      //   \"[object Object]\", while in a real Node environment\n      //   `process.toString()` yields \"[object process]\".\n      isNodeJS = true;\n\n      requestTick = function requestTick() {\n        process.nextTick(flush);\n      };\n    } else if (typeof setImmediate === \"function\") {\n      // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n      if (typeof window !== \"undefined\") {\n        requestTick = setImmediate.bind(window, flush);\n      } else {\n        requestTick = function requestTick() {\n          setImmediate(flush);\n        };\n      }\n    } else if (typeof MessageChannel !== \"undefined\") {\n      // modern browsers\n      // http://www.nonblocking.io/2011/06/windownexttick.html\n      var channel = new MessageChannel(); // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n      // working message ports the first time a page loads.\n\n      channel.port1.onmessage = function () {\n        requestTick = requestPortTick;\n        channel.port1.onmessage = flush;\n        flush();\n      };\n\n      var requestPortTick = function requestPortTick() {\n        // Opera requires us to provide a message payload, regardless of\n        // whether we use it.\n        channel.port2.postMessage(0);\n      };\n\n      requestTick = function requestTick() {\n        setTimeout(flush, 0);\n        requestPortTick();\n      };\n    } else {\n      // old browsers\n      requestTick = function requestTick() {\n        setTimeout(flush, 0);\n      };\n    } // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n\n\n    nextTick.runAfter = function (task) {\n      laterQueue.push(task);\n\n      if (!flushing) {\n        flushing = true;\n        requestTick();\n      }\n    };\n\n    return nextTick;\n  }(); // Attempt to make generics safe in the face of downstream\n  // modifications.\n  // There is no situation where this is necessary.\n  // If you need a security guarantee, these primordials need to be\n  // deeply frozen anyway, and if you don’t need a security guarantee,\n  // this is just plain paranoid.\n  // However, this **might** have the nice side-effect of reducing the size of\n  // the minified code by reducing x.call() to merely x()\n  // See Mark Miller’s explanation of what this does.\n  // http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\n\n\n  var call = Function.call;\n\n  function uncurryThis(f) {\n    return function () {\n      return call.apply(f, arguments);\n    };\n  } // This is equivalent, but slower:\n  // uncurryThis = Function_bind.bind(Function_bind.call);\n  // http://jsperf.com/uncurrythis\n\n\n  var array_slice = uncurryThis(Array.prototype.slice);\n  var array_reduce = uncurryThis(Array.prototype.reduce || function (callback, basis) {\n    var index = 0,\n        length = this.length; // concerning the initial value, if one is not provided\n\n    if (arguments.length === 1) {\n      // seek to the first value in the array, accounting\n      // for the possibility that is is a sparse array\n      do {\n        if (index in this) {\n          basis = this[index++];\n          break;\n        }\n\n        if (++index >= length) {\n          throw new TypeError();\n        }\n      } while (1);\n    } // reduce\n\n\n    for (; index < length; index++) {\n      // account for the possibility that the array is sparse\n      if (index in this) {\n        basis = callback(basis, this[index], index);\n      }\n    }\n\n    return basis;\n  });\n  var array_indexOf = uncurryThis(Array.prototype.indexOf || function (value) {\n    // not a very good shim, but good enough for our one use of it\n    for (var i = 0; i < this.length; i++) {\n      if (this[i] === value) {\n        return i;\n      }\n    }\n\n    return -1;\n  });\n  var array_map = uncurryThis(Array.prototype.map || function (callback, thisp) {\n    var self = this;\n    var collect = [];\n    array_reduce(self, function (undefined, value, index) {\n      collect.push(callback.call(thisp, value, index, self));\n    }, void 0);\n    return collect;\n  });\n\n  var object_create = Object.create || function (prototype) {\n    function Type() {}\n\n    Type.prototype = prototype;\n    return new Type();\n  };\n\n  var object_defineProperty = Object.defineProperty || function (obj, prop, descriptor) {\n    obj[prop] = descriptor.value;\n    return obj;\n  };\n\n  var object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\n  var object_keys = Object.keys || function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      if (object_hasOwnProperty(object, key)) {\n        keys.push(key);\n      }\n    }\n\n    return keys;\n  };\n\n  var object_toString = uncurryThis(Object.prototype.toString);\n\n  function isObject(value) {\n    return value === Object(value);\n  } // generator related shims\n  // FIXME: Remove this function once ES6 generators are in SpiderMonkey.\n\n\n  function isStopIteration(exception) {\n    return object_toString(exception) === \"[object StopIteration]\" || exception instanceof QReturnValue;\n  } // FIXME: Remove this helper and Q.return once ES6 generators are in\n  // SpiderMonkey.\n\n\n  var QReturnValue;\n\n  if (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n  } else {\n    QReturnValue = function QReturnValue(value) {\n      this.value = value;\n    };\n  } // long stack traces\n\n\n  var STACK_JUMP_SEPARATOR = \"From previous event:\";\n\n  function makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks && promise.stack && _typeof(error) === \"object\" && error !== null && error.stack) {\n      var stacks = [];\n\n      for (var p = promise; !!p; p = p.source) {\n        if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {\n          object_defineProperty(error, \"__minimumStackCounter__\", {\n            value: p.stackCounter,\n            configurable: true\n          });\n          stacks.unshift(p.stack);\n        }\n      }\n\n      stacks.unshift(error.stack);\n      var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n      var stack = filterStackString(concatedStacks);\n      object_defineProperty(error, \"stack\", {\n        value: stack,\n        configurable: true\n      });\n    }\n  }\n\n  function filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n\n    for (var i = 0; i < lines.length; ++i) {\n      var line = lines[i];\n\n      if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n        desiredLines.push(line);\n      }\n    }\n\n    return desiredLines.join(\"\\n\");\n  }\n\n  function isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 || stackLine.indexOf(\"(node.js:\") !== -1;\n  }\n\n  function getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n\n    if (attempt1) {\n      return [attempt1[1], Number(attempt1[2])];\n    } // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n\n\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n\n    if (attempt2) {\n      return [attempt2[1], Number(attempt2[2])];\n    } // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n\n\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n\n    if (attempt3) {\n      return [attempt3[1], Number(attempt3[2])];\n    }\n  }\n\n  function isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n      return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n    return fileName === qFileName && lineNumber >= qStartingLine && lineNumber <= qEndingLine;\n  } // discover own file name and line number range for filtering stack\n  // traces\n\n\n  function captureLine() {\n    if (!hasStacks) {\n      return;\n    }\n\n    try {\n      throw new Error();\n    } catch (e) {\n      var lines = e.stack.split(\"\\n\");\n      var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n      var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n\n      if (!fileNameAndLineNumber) {\n        return;\n      }\n\n      qFileName = fileNameAndLineNumber[0];\n      return fileNameAndLineNumber[1];\n    }\n  }\n\n  function deprecate(callback, name, alternative) {\n    return function () {\n      if (typeof console !== \"undefined\" && typeof console.warn === \"function\") {\n        console.warn(name + \" is deprecated, use \" + alternative + \" instead.\", new Error(\"\").stack);\n      }\n\n      return callback.apply(callback, arguments);\n    };\n  } // end of shims\n  // beginning of real work\n\n  /**\n   * Constructs a promise for an immediate reference, passes promises through, or\n   * coerces promises from different systems.\n   * @param value immediate reference or promise\n   */\n\n\n  function Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n      return value;\n    } // assimilate thenables\n\n\n    if (isPromiseAlike(value)) {\n      return coerce(value);\n    } else {\n      return fulfill(value);\n    }\n  }\n\n  Q.resolve = Q;\n  /**\n   * Performs a task in a future turn of the event loop.\n   * @param {Function} task\n   */\n\n  Q.nextTick = nextTick;\n  /**\n   * Controls whether or not long stack traces will be on\n   */\n\n  Q.longStackSupport = false;\n  /**\n   * The counter is used to determine the stopping point for building\n   * long stack traces. In makeStackTraceLong we walk backwards through\n   * the linked list of promises, only stacks which were created before\n   * the rejection are concatenated.\n   */\n\n  var longStackCounter = 1; // enable long stacks if Q_DEBUG is set\n\n  if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n  }\n  /**\n   * Constructs a {promise, resolve, reject} object.\n   *\n   * `resolve` is a callback to invoke with a more resolved value for the\n   * promise. To fulfill the promise, invoke `resolve` with any value that is\n   * not a thenable. To reject the promise, invoke `resolve` with a rejected\n   * thenable, or invoke `reject` with the reason directly. To resolve the\n   * promise to another thenable, thus putting it in the same state, invoke\n   * `resolve` with that other thenable.\n   */\n\n\n  Q.defer = defer;\n\n  function defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [],\n        progressListeners = [],\n        resolvedPromise;\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n      var args = array_slice(arguments);\n\n      if (messages) {\n        messages.push(args);\n\n        if (op === \"when\" && operands[1]) {\n          // progress operand\n          progressListeners.push(operands[1]);\n        }\n      } else {\n        Q.nextTick(function () {\n          resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n        });\n      }\n    }; // XXX deprecated\n\n\n    promise.valueOf = function () {\n      if (messages) {\n        return promise;\n      }\n\n      var nearerValue = nearer(resolvedPromise);\n\n      if (isPromise(nearerValue)) {\n        resolvedPromise = nearerValue; // shorten chain\n      }\n\n      return nearerValue;\n    };\n\n    promise.inspect = function () {\n      if (!resolvedPromise) {\n        return {\n          state: \"pending\"\n        };\n      }\n\n      return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n      try {\n        throw new Error();\n      } catch (e) {\n        // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n        // accessor around; that causes memory leaks as per GH-111. Just\n        // reify the stack trace as a string ASAP.\n        //\n        // At the same time, cut off the first line; it's always just\n        // \"[object Promise]\\n\", as per the `toString`.\n        promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        promise.stackCounter = longStackCounter++;\n      }\n    } // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n\n    function become(newPromise) {\n      resolvedPromise = newPromise;\n\n      if (Q.longStackSupport && hasStacks) {\n        // Only hold a reference to the new promise if long stacks\n        // are enabled to reduce memory usage\n        promise.source = newPromise;\n      }\n\n      array_reduce(messages, function (undefined, message) {\n        Q.nextTick(function () {\n          newPromise.promiseDispatch.apply(newPromise, message);\n        });\n      }, void 0);\n      messages = void 0;\n      progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n\n    deferred.resolve = function (value) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      become(fulfill(value));\n    };\n\n    deferred.reject = function (reason) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      become(reject(reason));\n    };\n\n    deferred.notify = function (progress) {\n      if (resolvedPromise) {\n        return;\n      }\n\n      array_reduce(progressListeners, function (undefined, progressListener) {\n        Q.nextTick(function () {\n          progressListener(progress);\n        });\n      }, void 0);\n    };\n\n    return deferred;\n  }\n  /**\n   * Creates a Node-style callback that will resolve or reject the deferred\n   * promise.\n   * @returns a nodeback\n   */\n\n\n  defer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n      if (error) {\n        self.reject(error);\n      } else if (arguments.length > 2) {\n        self.resolve(array_slice(arguments, 1));\n      } else {\n        self.resolve(value);\n      }\n    };\n  };\n  /**\n   * @param resolver {Function} a function that returns nothing and accepts\n   * the resolve, reject, and notify functions for a deferred.\n   * @returns a promise that may be resolved with the given resolve and reject\n   * functions, or rejected by a thrown exception in resolver\n   */\n\n\n  Q.Promise = promise; // ES6\n\n  Q.promise = promise;\n\n  function promise(resolver) {\n    if (typeof resolver !== \"function\") {\n      throw new TypeError(\"resolver must be a function.\");\n    }\n\n    var deferred = defer();\n\n    try {\n      resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n      deferred.reject(reason);\n    }\n\n    return deferred.promise;\n  }\n\n  promise.race = race; // ES6\n\n  promise.all = all; // ES6\n\n  promise.reject = reject; // ES6\n\n  promise.resolve = Q; // ES6\n  // XXX experimental.  This method is a way to denote that a local value is\n  // serializable and should be immediately dispatched to a remote upon request,\n  // instead of passing a reference.\n\n  Q.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n  };\n\n  Promise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n  };\n  /**\n   * If two promises eventually fulfill to the same value, promises that value,\n   * but otherwise rejects.\n   * @param x {Any*}\n   * @param y {Any*}\n   * @returns {Any*} a promise for x and y if they are the same, but a rejection\n   * otherwise.\n   *\n   */\n\n\n  Q.join = function (x, y) {\n    return Q(x).join(y);\n  };\n\n  Promise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n      if (x === y) {\n        // TODO: \"===\" should be Object.is or equiv\n        return x;\n      } else {\n        throw new Error(\"Q can't join: not the same: \" + x + \" \" + y);\n      }\n    });\n  };\n  /**\n   * Returns a promise for the first of an array of promises to become settled.\n   * @param answers {Array[Any*]} promises to race\n   * @returns {Any*} the first promise to be settled\n   */\n\n\n  Q.race = race;\n\n  function race(answerPs) {\n    return promise(function (resolve, reject) {\n      // Switch to this once we can assume at least ES5\n      // answerPs.forEach(function (answerP) {\n      //     Q(answerP).then(resolve, reject);\n      // });\n      // Use this in the meantime\n      for (var i = 0, len = answerPs.length; i < len; i++) {\n        Q(answerPs[i]).then(resolve, reject);\n      }\n    });\n  }\n\n  Promise.prototype.race = function () {\n    return this.then(Q.race);\n  };\n  /**\n   * Constructs a Promise with a promise descriptor object and optional fallback\n   * function.  The descriptor contains methods like when(rejected), get(name),\n   * set(name, value), post(name, args), and delete(name), which all\n   * return either a value, a promise for a value, or a rejection.  The fallback\n   * accepts the operation name, a resolver, and any further arguments that would\n   * have been forwarded to the appropriate method above had a method been\n   * provided with the proper name.  The API makes no guarantees about the nature\n   * of the returned object, apart from that it is usable whereever promises are\n   * bought and sold.\n   */\n\n\n  Q.makePromise = Promise;\n\n  function Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n      fallback = function fallback(op) {\n        return reject(new Error(\"Promise does not support operation: \" + op));\n      };\n    }\n\n    if (inspect === void 0) {\n      inspect = function inspect() {\n        return {\n          state: \"unknown\"\n        };\n      };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n      var result;\n\n      try {\n        if (descriptor[op]) {\n          result = descriptor[op].apply(promise, args);\n        } else {\n          result = fallback.call(promise, op, args);\n        }\n      } catch (exception) {\n        result = reject(exception);\n      }\n\n      if (resolve) {\n        resolve(result);\n      }\n    };\n\n    promise.inspect = inspect; // XXX deprecated `valueOf` and `exception` support\n\n    if (inspect) {\n      var inspected = inspect();\n\n      if (inspected.state === \"rejected\") {\n        promise.exception = inspected.reason;\n      }\n\n      promise.valueOf = function () {\n        var inspected = inspect();\n\n        if (inspected.state === \"pending\" || inspected.state === \"rejected\") {\n          return promise;\n        }\n\n        return inspected.value;\n      };\n    }\n\n    return promise;\n  }\n\n  Promise.prototype.toString = function () {\n    return \"[object Promise]\";\n  };\n\n  Promise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false; // ensure the untrusted promise makes at most a\n    // single call to one of the callbacks\n\n    function _fulfilled(value) {\n      try {\n        return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n      } catch (exception) {\n        return reject(exception);\n      }\n    }\n\n    function _rejected(exception) {\n      if (typeof rejected === \"function\") {\n        makeStackTraceLong(exception, self);\n\n        try {\n          return rejected(exception);\n        } catch (newException) {\n          return reject(newException);\n        }\n      }\n\n      return reject(exception);\n    }\n\n    function _progressed(value) {\n      return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n      self.promiseDispatch(function (value) {\n        if (done) {\n          return;\n        }\n\n        done = true;\n        deferred.resolve(_fulfilled(value));\n      }, \"when\", [function (exception) {\n        if (done) {\n          return;\n        }\n\n        done = true;\n        deferred.resolve(_rejected(exception));\n      }]);\n    }); // Progress propagator need to be attached in the current tick.\n\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n      var newValue;\n      var threw = false;\n\n      try {\n        newValue = _progressed(value);\n      } catch (e) {\n        threw = true;\n\n        if (Q.onerror) {\n          Q.onerror(e);\n        } else {\n          throw e;\n        }\n      }\n\n      if (!threw) {\n        deferred.notify(newValue);\n      }\n    }]);\n    return deferred.promise;\n  };\n\n  Q.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n  };\n  /**\n   * Works almost like \"finally\", but not called for rejections.\n   * Original resolution value is passed through callback unaffected.\n   * Callback may return a promise that will be awaited for.\n   * @param {Function} callback\n   * @returns {Q.Promise}\n   * @example\n   * doSomething()\n   *   .then(...)\n   *   .tap(console.log)\n   *   .then(...);\n   */\n\n\n  Promise.prototype.tap = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n      return callback.fcall(value).thenResolve(value);\n    });\n  };\n  /**\n   * Registers an observer on a promise.\n   *\n   * Guarantees:\n   *\n   * 1. that fulfilled and rejected will be called only once.\n   * 2. that either the fulfilled callback or the rejected callback will be\n   *    called, but not both.\n   * 3. that fulfilled and rejected will not be called in this turn.\n   *\n   * @param value      promise or immediate reference to observe\n   * @param fulfilled  function to be called with the fulfilled value\n   * @param rejected   function to be called with the rejection exception\n   * @param progressed function to be called on any progress notifications\n   * @return promise for the return value from the invoked callback\n   */\n\n\n  Q.when = when;\n\n  function when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n  }\n\n  Promise.prototype.thenResolve = function (value) {\n    return this.then(function () {\n      return value;\n    });\n  };\n\n  Q.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n  };\n\n  Promise.prototype.thenReject = function (reason) {\n    return this.then(function () {\n      throw reason;\n    });\n  };\n\n  Q.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n  };\n  /**\n   * If an object is not a promise, it is as \"near\" as possible.\n   * If a promise is rejected, it is as \"near\" as possible too.\n   * If it’s a fulfilled promise, the fulfillment value is nearer.\n   * If it’s a deferred promise and the deferred has been resolved, the\n   * resolution is \"nearer\".\n   * @param object\n   * @returns most resolved (nearest) form of the object\n   */\n  // XXX should we re-do this?\n\n\n  Q.nearer = nearer;\n\n  function nearer(value) {\n    if (isPromise(value)) {\n      var inspected = value.inspect();\n\n      if (inspected.state === \"fulfilled\") {\n        return inspected.value;\n      }\n    }\n\n    return value;\n  }\n  /**\n   * @returns whether the given object is a promise.\n   * Otherwise it is a fulfilled value.\n   */\n\n\n  Q.isPromise = isPromise;\n\n  function isPromise(object) {\n    return object instanceof Promise;\n  }\n\n  Q.isPromiseAlike = isPromiseAlike;\n\n  function isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n  }\n  /**\n   * @returns whether the given object is a pending promise, meaning not\n   * fulfilled or rejected.\n   */\n\n\n  Q.isPending = isPending;\n\n  function isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n  }\n\n  Promise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n  };\n  /**\n   * @returns whether the given object is a value or fulfilled\n   * promise.\n   */\n\n\n  Q.isFulfilled = isFulfilled;\n\n  function isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n  }\n\n  Promise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n  };\n  /**\n   * @returns whether the given object is a rejected promise.\n   */\n\n\n  Q.isRejected = isRejected;\n\n  function isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n  }\n\n  Promise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n  }; //// BEGIN UNHANDLED REJECTION TRACKING\n  // This promise library consumes exceptions thrown in handlers so they can be\n  // handled by a subsequent promise.  The exceptions get added to this array when\n  // they are created, and removed when they are handled.  Note that in ES6 or\n  // shimmed environments, this would naturally be a `Set`.\n\n\n  var unhandledReasons = [];\n  var unhandledRejections = [];\n  var reportedUnhandledRejections = [];\n  var trackUnhandledRejections = true;\n\n  function resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n      trackUnhandledRejections = true;\n    }\n  }\n\n  function trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n      return;\n    }\n\n    if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && typeof process.emit === \"function\") {\n      Q.nextTick.runAfter(function () {\n        if (array_indexOf(unhandledRejections, promise) !== -1) {\n          process.emit(\"unhandledRejection\", reason, promise);\n          reportedUnhandledRejections.push(promise);\n        }\n      });\n    }\n\n    unhandledRejections.push(promise);\n\n    if (reason && typeof reason.stack !== \"undefined\") {\n      unhandledReasons.push(reason.stack);\n    } else {\n      unhandledReasons.push(\"(no stack) \" + reason);\n    }\n  }\n\n  function untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n      return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n\n    if (at !== -1) {\n      if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n          var atReport = array_indexOf(reportedUnhandledRejections, promise);\n\n          if (atReport !== -1) {\n            process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n            reportedUnhandledRejections.splice(atReport, 1);\n          }\n        });\n      }\n\n      unhandledRejections.splice(at, 1);\n      unhandledReasons.splice(at, 1);\n    }\n  }\n\n  Q.resetUnhandledRejections = resetUnhandledRejections;\n\n  Q.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n  };\n\n  Q.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n  };\n\n  resetUnhandledRejections(); //// END UNHANDLED REJECTION TRACKING\n\n  /**\n   * Constructs a rejected promise.\n   * @param reason value describing the failure\n   */\n\n  Q.reject = reject;\n\n  function reject(reason) {\n    var rejection = Promise({\n      \"when\": function when(rejected) {\n        // note that the error has been handled\n        if (rejected) {\n          untrackRejection(this);\n        }\n\n        return rejected ? rejected(reason) : this;\n      }\n    }, function fallback() {\n      return this;\n    }, function inspect() {\n      return {\n        state: \"rejected\",\n        reason: reason\n      };\n    }); // Note that the reason has not been handled.\n\n    trackRejection(rejection, reason);\n    return rejection;\n  }\n  /**\n   * Constructs a fulfilled promise for an immediate reference.\n   * @param value immediate reference\n   */\n\n\n  Q.fulfill = fulfill;\n\n  function fulfill(value) {\n    return Promise({\n      \"when\": function when() {\n        return value;\n      },\n      \"get\": function get(name) {\n        return value[name];\n      },\n      \"set\": function set(name, rhs) {\n        value[name] = rhs;\n      },\n      \"delete\": function _delete(name) {\n        delete value[name];\n      },\n      \"post\": function post(name, args) {\n        // Mark Miller proposes that post with no name should apply a\n        // promised function.\n        if (name === null || name === void 0) {\n          return value.apply(void 0, args);\n        } else {\n          return value[name].apply(value, args);\n        }\n      },\n      \"apply\": function apply(thisp, args) {\n        return value.apply(thisp, args);\n      },\n      \"keys\": function keys() {\n        return object_keys(value);\n      }\n    }, void 0, function inspect() {\n      return {\n        state: \"fulfilled\",\n        value: value\n      };\n    });\n  }\n  /**\n   * Converts thenables to Q promises.\n   * @param promise thenable promise\n   * @returns a Q promise\n   */\n\n\n  function coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n      try {\n        promise.then(deferred.resolve, deferred.reject, deferred.notify);\n      } catch (exception) {\n        deferred.reject(exception);\n      }\n    });\n    return deferred.promise;\n  }\n  /**\n   * Annotates an object such that it will never be\n   * transferred away from this process over any promise\n   * communication channel.\n   * @param object\n   * @returns promise a wrapping of that object that\n   * additionally responds to the \"isDef\" message\n   * without a rejection.\n   */\n\n\n  Q.master = master;\n\n  function master(object) {\n    return Promise({\n      \"isDef\": function isDef() {}\n    }, function fallback(op, args) {\n      return dispatch(object, op, args);\n    }, function () {\n      return Q(object).inspect();\n    });\n  }\n  /**\n   * Spreads the values of a promised array of arguments into the\n   * fulfillment callback.\n   * @param fulfilled callback that receives variadic arguments from the\n   * promised array\n   * @param rejected callback that receives the exception if the promise\n   * is rejected.\n   * @returns a promise for the return value or thrown exception of\n   * either callback.\n   */\n\n\n  Q.spread = spread;\n\n  function spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n  }\n\n  Promise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n      return fulfilled.apply(void 0, array);\n    }, rejected);\n  };\n  /**\n   * The async function is a decorator for generator functions, turning\n   * them into asynchronous generators.  Although generators are only part\n   * of the newest ECMAScript 6 drafts, this code does not cause syntax\n   * errors in older engines.  This code should continue to work and will\n   * in fact improve over time as the language improves.\n   *\n   * ES6 generators are currently part of V8 version 3.19 with the\n   * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n   * for longer, but under an older Python-inspired form.  This function\n   * works on both kinds of generators.\n   *\n   * Decorates a generator function such that:\n   *  - it may yield promises\n   *  - execution will continue when that promise is fulfilled\n   *  - the value of the yield expression will be the fulfilled value\n   *  - it returns a promise for the return value (when the generator\n   *    stops iterating)\n   *  - the decorated function returns a promise for the return value\n   *    of the generator or the first rejected promise among those\n   *    yielded.\n   *  - if an error is thrown in the generator, it propagates through\n   *    every following yield until it is caught, or until it escapes\n   *    the generator function altogether, and is translated into a\n   *    rejection for the promise returned by the decorated generator.\n   */\n\n\n  Q.async = async;\n\n  function async(makeGenerator) {\n    return function () {\n      // when verb is \"send\", arg is a value\n      // when verb is \"throw\", arg is an exception\n      function continuer(verb, arg) {\n        var result; // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n        // engine that has a deployed base of browsers that support generators.\n        // However, SM's generators use the Python-inspired semantics of\n        // outdated ES6 drafts.  We would like to support ES6, but we'd also\n        // like to make it possible to use generators in deployed browsers, so\n        // we also support Python-style generators.  At some point we can remove\n        // this block.\n\n        if (typeof StopIteration === \"undefined\") {\n          // ES6 Generators\n          try {\n            result = generator[verb](arg);\n          } catch (exception) {\n            return reject(exception);\n          }\n\n          if (result.done) {\n            return Q(result.value);\n          } else {\n            return when(result.value, callback, errback);\n          }\n        } else {\n          // SpiderMonkey Generators\n          // FIXME: Remove this case when SM does ES6 generators.\n          try {\n            result = generator[verb](arg);\n          } catch (exception) {\n            if (isStopIteration(exception)) {\n              return Q(exception.value);\n            } else {\n              return reject(exception);\n            }\n          }\n\n          return when(result, callback, errback);\n        }\n      }\n\n      var generator = makeGenerator.apply(this, arguments);\n      var callback = continuer.bind(continuer, \"next\");\n      var errback = continuer.bind(continuer, \"throw\");\n      return callback();\n    };\n  }\n  /**\n   * The spawn function is a small wrapper around async that immediately\n   * calls the generator and also ends the promise chain, so that any\n   * unhandled errors are thrown instead of forwarded to the error\n   * handler. This is useful because it's extremely common to run\n   * generators at the top-level to work with libraries.\n   */\n\n\n  Q.spawn = spawn;\n\n  function spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n  } // FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n\n  /**\n   * Throws a ReturnValue exception to stop an asynchronous generator.\n   *\n   * This interface is a stop-gap measure to support generator return\n   * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n   * generators like Chromium 29, just use \"return\" in your generator\n   * functions.\n   *\n   * @param value the return value for the surrounding generator\n   * @throws ReturnValue exception with the value.\n   * @example\n   * // ES6 style\n   * Q.async(function* () {\n   *      var foo = yield getFooPromise();\n   *      var bar = yield getBarPromise();\n   *      return foo + bar;\n   * })\n   * // Older SpiderMonkey style\n   * Q.async(function () {\n   *      var foo = yield getFooPromise();\n   *      var bar = yield getBarPromise();\n   *      Q.return(foo + bar);\n   * })\n   */\n\n\n  Q[\"return\"] = _return;\n\n  function _return(value) {\n    throw new QReturnValue(value);\n  }\n  /**\n   * The promised function decorator ensures that any promise arguments\n   * are settled and passed as values (`this` is also settled and passed\n   * as a value).  It will also ensure that the result of a function is\n   * always a promise.\n   *\n   * @example\n   * var add = Q.promised(function (a, b) {\n   *     return a + b;\n   * });\n   * add(Q(a), Q(B));\n   *\n   * @param {function} callback The function to decorate\n   * @returns {function} a function that has been decorated.\n   */\n\n\n  Q.promised = promised;\n\n  function promised(callback) {\n    return function () {\n      return spread([this, all(arguments)], function (self, args) {\n        return callback.apply(self, args);\n      });\n    };\n  }\n  /**\n   * sends a message to a value in a future turn\n   * @param object* the recipient\n   * @param op the name of the message operation, e.g., \"when\",\n   * @param args further arguments to be forwarded to the operation\n   * @returns result {Promise} a promise for the result of the operation\n   */\n\n\n  Q.dispatch = dispatch;\n\n  function dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n  }\n\n  Promise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n      self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n  };\n  /**\n   * Gets the value of a property in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of property to get\n   * @return promise for the property value\n   */\n\n\n  Q.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n  };\n\n  Promise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n  };\n  /**\n   * Sets the value of a property in a future turn.\n   * @param object    promise or immediate reference for object object\n   * @param name      name of property to set\n   * @param value     new value of property\n   * @return promise for the return value\n   */\n\n\n  Q.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n  };\n\n  Promise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n  };\n  /**\n   * Deletes a property in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of property to delete\n   * @return promise for the return value\n   */\n\n\n  Q.del = // XXX legacy\n  Q[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n  };\n\n  Promise.prototype.del = // XXX legacy\n  Promise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n  };\n  /**\n   * Invokes a method in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of method to invoke\n   * @param value     a value to post, typically an array of\n   *                  invocation arguments for promises that\n   *                  are ultimately backed with `resolve` values,\n   *                  as opposed to those backed with URLs\n   *                  wherein the posted value can be any\n   *                  JSON serializable object.\n   * @return promise for the return value\n   */\n  // bound locally because it is used by other methods\n\n\n  Q.mapply = // XXX As proposed by \"Redsandro\"\n  Q.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n  };\n\n  Promise.prototype.mapply = // XXX As proposed by \"Redsandro\"\n  Promise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n  };\n  /**\n   * Invokes a method in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @param name      name of method to invoke\n   * @param ...args   array of invocation arguments\n   * @return promise for the return value\n   */\n\n\n  Q.send = // XXX Mark Miller's proposed parlance\n  Q.mcall = // XXX As proposed by \"Redsandro\"\n  Q.invoke = function (object, name\n  /*...args*/\n  ) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n  };\n\n  Promise.prototype.send = // XXX Mark Miller's proposed parlance\n  Promise.prototype.mcall = // XXX As proposed by \"Redsandro\"\n  Promise.prototype.invoke = function (name\n  /*...args*/\n  ) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n  };\n  /**\n   * Applies the promised function in a future turn.\n   * @param object    promise or immediate reference for target function\n   * @param args      array of application arguments\n   */\n\n\n  Q.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n  };\n\n  Promise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n  };\n  /**\n   * Calls the promised function in a future turn.\n   * @param object    promise or immediate reference for target function\n   * @param ...args   array of application arguments\n   */\n\n\n  Q[\"try\"] = Q.fcall = function (object\n  /* ...args*/\n  ) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n  };\n\n  Promise.prototype.fcall = function ()\n  /*...args*/\n  {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n  };\n  /**\n   * Binds the promised function, transforming return values into a fulfilled\n   * promise and thrown errors into a rejected one.\n   * @param object    promise or immediate reference for target function\n   * @param ...args   array of application arguments\n   */\n\n\n  Q.fbind = function (object\n  /*...args*/\n  ) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n      return promise.dispatch(\"apply\", [this, args.concat(array_slice(arguments))]);\n    };\n  };\n\n  Promise.prototype.fbind = function ()\n  /*...args*/\n  {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n      return promise.dispatch(\"apply\", [this, args.concat(array_slice(arguments))]);\n    };\n  };\n  /**\n   * Requests the names of the owned properties of a promised\n   * object in a future turn.\n   * @param object    promise or immediate reference for target object\n   * @return promise for the keys of the eventually settled object\n   */\n\n\n  Q.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n  };\n\n  Promise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n  };\n  /**\n   * Turns an array of promises into a promise for an array.  If any of\n   * the promises gets rejected, the whole array is rejected immediately.\n   * @param {Array*} an array (or promise for an array) of values (or\n   * promises for values)\n   * @returns a promise for an array of the corresponding values\n   */\n  // By Mark Miller\n  // http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\n\n\n  Q.all = all;\n\n  function all(promises) {\n    return when(promises, function (promises) {\n      var pendingCount = 0;\n      var deferred = defer();\n      array_reduce(promises, function (undefined, promise, index) {\n        var snapshot;\n\n        if (isPromise(promise) && (snapshot = promise.inspect()).state === \"fulfilled\") {\n          promises[index] = snapshot.value;\n        } else {\n          ++pendingCount;\n          when(promise, function (value) {\n            promises[index] = value;\n\n            if (--pendingCount === 0) {\n              deferred.resolve(promises);\n            }\n          }, deferred.reject, function (progress) {\n            deferred.notify({\n              index: index,\n              value: progress\n            });\n          });\n        }\n      }, void 0);\n\n      if (pendingCount === 0) {\n        deferred.resolve(promises);\n      }\n\n      return deferred.promise;\n    });\n  }\n\n  Promise.prototype.all = function () {\n    return all(this);\n  };\n  /**\n   * Returns the first resolved promise of an array. Prior rejected promises are\n   * ignored.  Rejects only if all promises are rejected.\n   * @param {Array*} an array containing values or promises for values\n   * @returns a promise fulfilled with the value of the first resolved promise,\n   * or a rejected promise if all promises are rejected.\n   */\n\n\n  Q.any = any;\n\n  function any(promises) {\n    if (promises.length === 0) {\n      return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n      var promise = promises[index];\n      pendingCount++;\n      when(promise, onFulfilled, onRejected, onProgress);\n\n      function onFulfilled(result) {\n        deferred.resolve(result);\n      }\n\n      function onRejected(err) {\n        pendingCount--;\n\n        if (pendingCount === 0) {\n          var rejection = err || new Error(\"\" + err);\n          rejection.message = \"Q can't get fulfillment value from any promise, all \" + \"promises were rejected. Last error message: \" + rejection.message;\n          deferred.reject(rejection);\n        }\n      }\n\n      function onProgress(progress) {\n        deferred.notify({\n          index: index,\n          value: progress\n        });\n      }\n    }, undefined);\n    return deferred.promise;\n  }\n\n  Promise.prototype.any = function () {\n    return any(this);\n  };\n  /**\n   * Waits for all promises to be settled, either fulfilled or\n   * rejected.  This is distinct from `all` since that would stop\n   * waiting at the first rejection.  The promise returned by\n   * `allResolved` will never be rejected.\n   * @param promises a promise for an array (or an array) of promises\n   * (or values)\n   * @return a promise for an array of promises\n   */\n\n\n  Q.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\n\n  function allResolved(promises) {\n    return when(promises, function (promises) {\n      promises = array_map(promises, Q);\n      return when(all(array_map(promises, function (promise) {\n        return when(promise, noop, noop);\n      })), function () {\n        return promises;\n      });\n    });\n  }\n\n  Promise.prototype.allResolved = function () {\n    return allResolved(this);\n  };\n  /**\n   * @see Promise#allSettled\n   */\n\n\n  Q.allSettled = allSettled;\n\n  function allSettled(promises) {\n    return Q(promises).allSettled();\n  }\n  /**\n   * Turns an array of promises into a promise for an array of their states (as\n   * returned by `inspect`) when they have all settled.\n   * @param {Array[Any*]} values an array (or promise for an array) of values (or\n   * promises for values)\n   * @returns {Array[State]} an array of states for the respective values.\n   */\n\n\n  Promise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n      return all(array_map(promises, function (promise) {\n        promise = Q(promise);\n\n        function regardless() {\n          return promise.inspect();\n        }\n\n        return promise.then(regardless, regardless);\n      }));\n    });\n  };\n  /**\n   * Captures the failure of a promise, giving an oportunity to recover\n   * with a callback.  If the given promise is fulfilled, the returned\n   * promise is fulfilled.\n   * @param {Any*} promise for something\n   * @param {Function} callback to fulfill the returned promise if the\n   * given promise is rejected\n   * @returns a promise for the return value of the callback\n   */\n\n\n  Q.fail = // XXX legacy\n  Q[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n  };\n\n  Promise.prototype.fail = // XXX legacy\n  Promise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n  };\n  /**\n   * Attaches a listener that can respond to progress notifications from a\n   * promise's originating deferred. This listener receives the exact arguments\n   * passed to ``deferred.notify``.\n   * @param {Any*} promise for something\n   * @param {Function} callback to receive any progress notifications\n   * @returns the given promise, unchanged\n   */\n\n\n  Q.progress = progress;\n\n  function progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n  }\n\n  Promise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n  };\n  /**\n   * Provides an opportunity to observe the settling of a promise,\n   * regardless of whether the promise is fulfilled or rejected.  Forwards\n   * the resolution to the returned promise when the callback is done.\n   * The callback can return a promise to defer completion.\n   * @param {Any*} promise\n   * @param {Function} callback to observe the resolution of the given\n   * promise, takes no arguments.\n   * @returns a promise for the resolution of the given promise when\n   * ``fin`` is done.\n   */\n\n\n  Q.fin = // XXX legacy\n  Q[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n  };\n\n  Promise.prototype.fin = // XXX legacy\n  Promise.prototype[\"finally\"] = function (callback) {\n    if (!callback || typeof callback.apply !== \"function\") {\n      throw new Error(\"Q can't apply finally callback\");\n    }\n\n    callback = Q(callback);\n    return this.then(function (value) {\n      return callback.fcall().then(function () {\n        return value;\n      });\n    }, function (reason) {\n      // TODO attempt to recycle the rejection with \"this\".\n      return callback.fcall().then(function () {\n        throw reason;\n      });\n    });\n  };\n  /**\n   * Terminates a chain of promises, forcing rejections to be\n   * thrown as exceptions.\n   * @param {Any*} promise at the end of a chain of promises\n   * @returns nothing\n   */\n\n\n  Q.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n  };\n\n  Promise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function onUnhandledError(error) {\n      // forward to a future turn so that ``when``\n      // does not catch it and turn it into a rejection.\n      Q.nextTick(function () {\n        makeStackTraceLong(error, promise);\n\n        if (Q.onerror) {\n          Q.onerror(error);\n        } else {\n          throw error;\n        }\n      });\n    }; // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n\n\n    var promise = fulfilled || rejected || progress ? this.then(fulfilled, rejected, progress) : this;\n\n    if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && process && process.domain) {\n      onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n  };\n  /**\n   * Causes a promise to be rejected if it does not get fulfilled before\n   * some milliseconds time out.\n   * @param {Any*} promise\n   * @param {Number} milliseconds timeout\n   * @param {Any*} custom error message or Error object (optional)\n   * @returns a promise for the resolution of the given promise if it is\n   * fulfilled before the timeout, otherwise rejected.\n   */\n\n\n  Q.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n  };\n\n  Promise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n      if (!error || \"string\" === typeof error) {\n        error = new Error(error || \"Timed out after \" + ms + \" ms\");\n        error.code = \"ETIMEDOUT\";\n      }\n\n      deferred.reject(error);\n    }, ms);\n    this.then(function (value) {\n      clearTimeout(timeoutId);\n      deferred.resolve(value);\n    }, function (exception) {\n      clearTimeout(timeoutId);\n      deferred.reject(exception);\n    }, deferred.notify);\n    return deferred.promise;\n  };\n  /**\n   * Returns a promise for the given value (or promised value), some\n   * milliseconds after it resolved. Passes rejections immediately.\n   * @param {Any*} promise\n   * @param {Number} milliseconds\n   * @returns a promise for the resolution of the given promise after milliseconds\n   * time has elapsed since the resolution of the given promise.\n   * If the given promise rejects, that is passed immediately.\n   */\n\n\n  Q.delay = function (object, timeout) {\n    if (timeout === void 0) {\n      timeout = object;\n      object = void 0;\n    }\n\n    return Q(object).delay(timeout);\n  };\n\n  Promise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n      var deferred = defer();\n      setTimeout(function () {\n        deferred.resolve(value);\n      }, timeout);\n      return deferred.promise;\n    });\n  };\n  /**\n   * Passes a continuation to a Node function, which is called with the given\n   * arguments provided as an array, and returns a promise.\n   *\n   *      Q.nfapply(FS.readFile, [__filename])\n   *      .then(function (content) {\n   *      })\n   *\n   */\n\n\n  Q.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n  };\n\n  Promise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * Passes a continuation to a Node function, which is called with the given\n   * arguments provided individually, and returns a promise.\n   * @example\n   * Q.nfcall(FS.readFile, __filename)\n   * .then(function (content) {\n   * })\n   *\n   */\n\n\n  Q.nfcall = function (callback\n  /*...args*/\n  ) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n  };\n\n  Promise.prototype.nfcall = function ()\n  /*...args*/\n  {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * Wraps a NodeJS continuation passing function and returns an equivalent\n   * version that returns a promise.\n   * @example\n   * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n   * .then(console.log)\n   * .done()\n   */\n\n\n  Q.nfbind = Q.denodeify = function (callback\n  /*...args*/\n  ) {\n    if (callback === undefined) {\n      throw new Error(\"Q can't wrap an undefined function\");\n    }\n\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n      var nodeArgs = baseArgs.concat(array_slice(arguments));\n      var deferred = defer();\n      nodeArgs.push(deferred.makeNodeResolver());\n      Q(callback).fapply(nodeArgs).fail(deferred.reject);\n      return deferred.promise;\n    };\n  };\n\n  Promise.prototype.nfbind = Promise.prototype.denodeify = function ()\n  /*...args*/\n  {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n  };\n\n  Q.nbind = function (callback, thisp\n  /*...args*/\n  ) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n      var nodeArgs = baseArgs.concat(array_slice(arguments));\n      var deferred = defer();\n      nodeArgs.push(deferred.makeNodeResolver());\n\n      function bound() {\n        return callback.apply(thisp, arguments);\n      }\n\n      Q(bound).fapply(nodeArgs).fail(deferred.reject);\n      return deferred.promise;\n    };\n  };\n\n  Promise.prototype.nbind = function ()\n  /*thisp, ...args*/\n  {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n  };\n  /**\n   * Calls a method of a Node-style object that accepts a Node-style\n   * callback with a given array of arguments, plus a provided callback.\n   * @param object an object that has the named method\n   * @param {String} name name of the method of object\n   * @param {Array} args arguments to pass to the method; the callback\n   * will be provided by Q and appended to these arguments.\n   * @returns a promise for the value or error\n   */\n\n\n  Q.nmapply = // XXX As proposed by \"Redsandro\"\n  Q.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n  };\n\n  Promise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\n  Promise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * Calls a method of a Node-style object that accepts a Node-style\n   * callback, forwarding the given variadic arguments, plus a provided\n   * callback argument.\n   * @param object an object that has the named method\n   * @param {String} name name of the method of object\n   * @param ...args arguments to pass to the method; the callback will\n   * be provided by Q and appended to these arguments.\n   * @returns a promise for the value or error\n   */\n\n\n  Q.nsend = // XXX Based on Mark Miller's proposed \"send\"\n  Q.nmcall = // XXX Based on \"Redsandro's\" proposal\n  Q.ninvoke = function (object, name\n  /*...args*/\n  ) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n  };\n\n  Promise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\n  Promise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\n  Promise.prototype.ninvoke = function (name\n  /*...args*/\n  ) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n  };\n  /**\n   * If a function would like to support both Node continuation-passing-style and\n   * promise-returning-style, it can end its internal promise chain with\n   * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n   * elects to use a nodeback, the result will be sent there.  If they do not\n   * pass a nodeback, they will receive the result promise.\n   * @param object a result (or a promise for a result)\n   * @param {Function} nodeback a Node.js-style callback\n   * @returns either the promise or nothing\n   */\n\n\n  Q.nodeify = nodeify;\n\n  function nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n  }\n\n  Promise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n      this.then(function (value) {\n        Q.nextTick(function () {\n          nodeback(null, value);\n        });\n      }, function (error) {\n        Q.nextTick(function () {\n          nodeback(error);\n        });\n      });\n    } else {\n      return this;\n    }\n  };\n\n  Q.noConflict = function () {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n  }; // All code before this point will be filtered from stack traces.\n\n\n  var qEndingLine = captureLine();\n  return Q;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/q/q.js?");

/***/ }),

/***/ "./node_modules/querystringify/index.js":
/*!**********************************************!*\
  !*** ./node_modules/querystringify/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty,\n    undef;\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\n\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\n\n\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g,\n      result = {},\n      part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1]),\n        value = decode(part[2]); //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n\n    if (key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\n\n\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n  var pairs = [],\n      value,\n      key; //\n  // Optionally prefix with a '?' if needed\n  //\n\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key]; //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n} //\n// Expose the module.\n//\n\n\nexports.stringify = querystringify;\nexports.parse = querystring;\n\n//# sourceURL=webpack:///./node_modules/querystringify/index.js?");

/***/ }),

/***/ "./node_modules/requires-port/index.js":
/*!*********************************************!*\
  !*** ./node_modules/requires-port/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\n\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n      return port !== 80;\n\n    case 'https':\n    case 'wss':\n      return port !== 443;\n\n    case 'ftp':\n      return port !== 21;\n\n    case 'gopher':\n      return port !== 70;\n\n    case 'file':\n      return false;\n  }\n\n  return port !== 0;\n};\n\n//# sourceURL=webpack:///./node_modules/requires-port/index.js?");

/***/ }),

/***/ "./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js":
/*!******************************************************************!*\
  !*** ./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nvar SDPUtils = __webpack_require__(/*! sdp */ \"./node_modules/sdp/sdp.js\");\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps); // Map ICE parameters (ufrag, pwd) to SDP.\n\n  sdp += SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()); // Map DTLS parameters to SDP.\n\n  sdp += SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(), type === 'offer' ? 'actpass' : dtlsRole || 'active');\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId || transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId; // spec.\n\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' + trackId + '\\r\\n';\n    sdp += 'a=' + msid; // for Chrome. Legacy should no longer be required.\n\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' ' + msid; // RTX\n\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' + transceiver.sendEncodingParameters[0].ssrc + ' ' + transceiver.sendEncodingParameters[0].rtx.ssrc + '\\r\\n';\n    }\n  } // FIXME: this should be written by writeRtpDescription.\n\n\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n\n  return sdp;\n} // Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\n\n\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n\n      var isString = typeof urls === 'string';\n\n      if (isString) {\n        urls = [urls];\n      }\n\n      urls = urls.filter(function (url) {\n        var validTurn = url.indexOf('turn:') === 0 && url.indexOf('transport=udp') !== -1 && url.indexOf('turn:[') === -1 && !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 && url.indexOf('?transport=udp') === -1;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n} // Determines the intersection of local and remote capabilities.\n\n\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function findCodecByPayloadType(pt, codecs) {\n    pt = parseInt(pt, 10);\n\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt || codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function rtxCapabilityMatches(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec && lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function (lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() && lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' && lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec, localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n\n        rCodec.numChannels = Math.min(lCodec.numChannels, rCodec.numChannels); // push rCodec so we reply with offerer payload type\n\n        commonCapabilities.codecs.push(rCodec); // determine common feedback mechanisms\n\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function (fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type && lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n\n          return false;\n        }); // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n\n        break;\n      }\n    }\n  });\n  localCapabilities.headerExtensions.forEach(function (lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length; i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  }); // FIXME: fecMechanisms\n\n  return commonCapabilities;\n} // is action=setLocalDescription with type allowed in signalingState\n\n\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates().find(function (remoteCandidate) {\n    return candidate.foundation === remoteCandidate.foundation && candidate.ip === remoteCandidate.ip && candidate.port === remoteCandidate.port && candidate.priority === remoteCandidate.priority && candidate.protocol === remoteCandidate.protocol && candidate.type === remoteCandidate.type;\n  });\n\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n\n  return !alreadyAdded;\n}\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name; // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function (window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack', {\n      track: track\n    }));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack', {\n      track: track\n    }));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {\n      receiver: receiver\n    };\n    trackEvent.streams = streams;\n    window.setTimeout(function () {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function RTCPeerConnection(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n\n    ['addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(function (method) {\n      pc[method] = _eventTarget[method].bind(_eventTarget);\n    });\n    this.canTrickleIceCandidates = null;\n    this.needNegotiation = false;\n    this.localStreams = [];\n    this.remoteStreams = [];\n    this._localDescription = null;\n    this._remoteDescription = null;\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n    config = JSON.parse(JSON.stringify(config || {}));\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw makeError('NotSupportedError', 'rtcpMuxPolicy \\'negotiate\\' is not supported');\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n    this._iceGatherers = [];\n\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config; // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n\n    this.transceivers = [];\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function get() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function get() {\n      return this._remoteDescription;\n    }\n  }); // set up event handlers on prototype\n\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function (name, event) {\n    if (this._isClosed) {\n      return;\n    }\n\n    this.dispatchEvent(event);\n\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function () {\n    var event = new Event('icegatheringstatechange');\n\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function () {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function () {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function () {\n    return this.remoteStreams;\n  }; // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n\n\n  RTCPeerConnection.prototype._createTransceiver = function (kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function (track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function (s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track && this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track, transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function (stream) {\n    var pc = this;\n\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function (track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function (track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function (event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function (sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function (t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError', 'Sender was not created by this connection.');\n    }\n\n    var stream = transceiver.stream;\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null; // remove the stream from the set of local streams\n\n    var localStreams = this.transceivers.map(function (t) {\n      return t.stream;\n    });\n\n    if (localStreams.indexOf(stream) === -1 && this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function (stream) {\n    var pc = this;\n    stream.getTracks().forEach(function (track) {\n      var sender = pc.getSenders().find(function (s) {\n        return s.track === track;\n      });\n\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpSender;\n    }).map(function (transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpReceiver;\n    }).map(function (transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n  RTCPeerConnection.prototype._createIceGatherer = function (sdpMLineIndex, usingBundle) {\n    var pc = this;\n\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state', {\n      value: 'new',\n      writable: true\n    });\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n\n    this.transceivers[sdpMLineIndex].bufferCandidates = function (event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0; // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n\n      iceGatherer.state = end ? 'completed' : 'gathering';\n\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n\n    iceGatherer.addEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  }; // start gathering from an RTCIceGatherer.\n\n\n  RTCPeerConnection.prototype._gather = function (mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n\n    var bufferedCandidateEvents = this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n\n    iceGatherer.onlocalcandidate = function (evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n\n      var event = new Event('icecandidate');\n      event.candidate = {\n        sdpMid: mid,\n        sdpMLineIndex: sdpMLineIndex\n      };\n      var cand = evt.candidate; // Edge emits an empty object for RTCIceCandidateComplete‥\n\n      var end = !cand || Object.keys(cand).length === 0;\n\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        } // RTCIceCandidate doesn't have a component, needs to be added\n\n\n        cand.component = 1; // also the usernameFragment. TODO: update SDP to take both variants.\n\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate, SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n\n        event.candidate.toJSON = function () {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      } // update local description.\n\n\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] += 'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] += 'a=end-of-candidates\\r\\n';\n      }\n\n      pc._localDescription.sdp = SDPUtils.getDescription(pc._localDescription.sdp) + sections.join('');\n      var complete = pc.transceivers.every(function (transceiver) {\n        return transceiver.iceGatherer && transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n\n        pc._emitGatheringStateChange();\n      } // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n\n\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n\n        pc.iceGatheringState = 'complete';\n\n        pc._emitGatheringStateChange();\n      }\n    }; // emit already gathered candidates.\n\n\n    window.setTimeout(function () {\n      bufferedCandidateEvents.forEach(function (e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  }; // Create ICE transport and DTLS transport.\n\n\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function () {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n\n    iceTransport.onicestatechange = function () {\n      pc._updateIceConnectionState();\n\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n\n    dtlsTransport.ondtlsstatechange = function () {\n      pc._updateConnectionState();\n    };\n\n    dtlsTransport.onerror = function () {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state', {\n        value: 'failed',\n        writable: true\n      });\n\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  }; // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n\n\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function (sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  }; // Start the RTP Sender and Receiver for a transceiver.\n\n\n  RTCPeerConnection.prototype._transceive = function (transceiver, send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n\n      transceiver.rtpSender.send(params);\n    }\n\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video' && transceiver.recvEncodingParameters && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function (p) {\n          delete p.rtx;\n        });\n      }\n\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function (description) {\n    var pc = this; // Note: pranswer is not supported.\n\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set local ' + description.type + ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n      pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities; // treat bundle-only as not-rejected.\n\n        var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters, isIceLite ? 'controlling' : 'controlled');\n            }\n\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          } // Calculate intersection of capabilities.\n\n\n          var params = getCommonCapabilities(localCapabilities, remoteCapabilities); // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n\n          pc._transceive(transceiver, params.codecs.length > 0, false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function (description) {\n    var pc = this; // Note: pranswer is not supported.\n\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set remote ' + description.type + ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function (stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart, 'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart, 'a=ice-options:')[0];\n\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ').indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function (mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection); // treat bundle-only as not-rejected.\n\n      var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier(); // Reject datachannels which are not implemented yet.\n\n      if (rejected || kind === 'application' && (protocol === 'DTLS/SCTP' || protocol === 'UDP/DTLS/SCTP')) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] && pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n      var track; // FIXME: ensure the mediaSection has rtcp-mux set.\n\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n\n      recvEncodingParameters = SDPUtils.parseRtpEncodingParameters(mediaSection);\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n      var isComplete = SDPUtils.matchPrefix(mediaSection, 'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:').map(function (cand) {\n        return SDPUtils.parseCandidate(cand);\n      }).filter(function (cand) {\n        return cand.component === 1;\n      }); // Check if we can use BUNDLE and dispose transports.\n\n      if ((description.type === 'offer' || description.type === 'answer') && !rejected && usingBundle && sdpMLineIndex > 0 && pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n\n        pc.transceivers[sdpMLineIndex].iceGatherer = pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport = pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport = pc.transceivers[0].dtlsTransport;\n\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n      }\n\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] || pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind); // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n            return codec.name !== 'rtx';\n          });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }]; // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n\n        var isNewTrack = false;\n\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver || new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track; // FIXME: does not work with Plan B.\n\n            if (remoteMsid && remoteMsid.stream === '-') {// no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function get() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n\n              Object.defineProperty(track, 'id', {\n                get: function get() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n\n              stream = streams.default;\n            }\n\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function (s) {\n            var nativeTrack = s.getTracks().find(function (t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters; // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n\n        pc._transceive(pc.transceivers[sdpMLineIndex], false, isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters = recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities = remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) && (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters, 'controlling');\n          }\n\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        } // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n\n\n        var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n        var hasRtx = commonCapabilities.codecs.filter(function (c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver, direction === 'sendrecv' || direction === 'recvonly', direction === 'sendrecv' || direction === 'sendonly'); // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n\n\n        if (rtpReceiver && (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    Object.keys(streams).forEach(function (sid) {\n      var stream = streams[sid];\n\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function () {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function (item) {\n          var track = item[0];\n          var receiver = item[1];\n\n          if (stream.id !== item[2].id) {\n            return;\n          }\n\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function (item) {\n      if (item[2]) {\n        return;\n      }\n\n      fireAddTrack(pc, item[0], item[1], []);\n    }); // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n\n    window.setTimeout(function () {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n\n      pc.transceivers.forEach(function (transceiver) {\n        if (transceiver.iceTransport && transceiver.iceTransport.state === 'new' && transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' + 'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function () {\n    this.transceivers.forEach(function (transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    }); // FIXME: clean up tracks, local streams, remote streams, etc\n\n    this._isClosed = true;\n\n    this._updateSignalingState('closed');\n  }; // Update the signaling state.\n\n\n  RTCPeerConnection.prototype._updateSignalingState = function (newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n\n    this._dispatchEvent('signalingstatechange', event);\n  }; // Determine whether to fire the negotiationneeded event.\n\n\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function () {\n    var pc = this;\n\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n\n    this.needNegotiation = true;\n    window.setTimeout(function () {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  }; // Update the ice connection state.\n\n\n  RTCPeerConnection.prototype._updateIceConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n    newState = 'new';\n\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  }; // Update the connection state.\n\n\n  RTCPeerConnection.prototype._updateConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    }); // ICETransport.completed and connected are the same for this purpose.\n\n    states.connected += states.completed;\n    newState = 'new';\n\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function () {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'video';\n    }).length; // Determine number of audio and video tracks we need to send/recv.\n\n    var offerOptions = arguments[0];\n\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError('Legacy mandatory/optional constraints not supported.');\n      }\n\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function (transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    }); // Create M-lines for recvonly streams.\n\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n\n        numAudioTracks--;\n      }\n\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind); // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n          return codec.name !== 'rtx';\n        });\n      }\n\n      localCapabilities.codecs.forEach(function (codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' && codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        } // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n\n\n        if (transceiver.remoteCapabilities && transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function (remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() && codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function (hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities && transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function (rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      }); // generate an ssrc now, to be used later in rtpSender.send\n\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' && !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    }); // always offer BUNDLE and dispose on return if not supported.\n\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n\n    sdp += 'a=ice-options:trickle\\r\\n';\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities, 'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' && (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function (cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function () {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' || pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n\n    sdp += 'a=ice-options:trickle\\r\\n';\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') {\n            // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol + ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' + 'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' + 'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' + 'a=inactive\\r\\n' + 'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      } // FIXME: look at direction.\n\n\n      if (transceiver.stream) {\n        var localTrack;\n\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' && !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      } // Calculate intersection of capabilities.\n\n\n      var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n      var hasRtx = commonCapabilities.codecs.filter(function (c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities, 'answer', transceiver.stream, pc._dtlsRole);\n\n      if (transceiver.rtcpParameters && transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function (candidate) {\n    var pc = this;\n    var sections;\n\n    if (candidate && !(candidate.sdpMLineIndex !== undefined || candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    } // TODO: needs to go into ops queue.\n\n\n    return new Promise(function (resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError', 'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp = SDPUtils.getDescription(pc._remoteDescription.sdp) + sections.join('');\n\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n\n        var transceiver = pc.transceivers[sdpMLineIndex];\n\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n\n          var cand = Object.keys(candidate.candidate).length > 0 ? SDPUtils.parseCandidate(candidate.candidate) : {}; // Ignore Chrome's invalid candidates since Edge does not like them.\n\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          } // Ignore RTCP candidates, we assume RTCP-MUX.\n\n\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          } // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n\n\n          if (sdpMLineIndex === 0 || sdpMLineIndex > 0 && transceiver.iceTransport !== pc.transceivers[0].iceTransport) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError', 'Can not add ICE candidate'));\n            }\n          } // update the remoteDescription.\n\n\n          var candidateString = candidate.candidate.trim();\n\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' + (cand.type ? candidateString : 'end-of-candidates') + '\\r\\n';\n          pc._remoteDescription.sdp = SDPUtils.getDescription(pc._remoteDescription.sdp) + sections.join('');\n        } else {\n          return reject(makeError('OperationError', 'Can not add ICE candidate'));\n        }\n      }\n\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function (selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function (transceiver) {\n        if (transceiver.rtpSender && transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function (transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport', 'dtlsTransport'].forEach(function (method) {\n        if (transceiver[method]) {\n          promises.push(transceiver[method].getStats());\n        }\n      });\n    });\n    return Promise.all(promises).then(function (allStats) {\n      var results = new Map();\n      allStats.forEach(function (stats) {\n        stats.forEach(function (stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  }; // fix low-level stat names and return Map instead of object.\n\n\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer', 'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function (ortcObjectName) {\n    var obj = window[ortcObjectName];\n\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n\n      obj.prototype.getStats = function () {\n        return nativeGetstats.apply(this).then(function (nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function (id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  }); // legacy callback shims. Should be moved to adapter.js some days.\n\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[0] === 'function' || typeof args[1] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, [arguments[2]]).then(function (description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function (error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[1] === 'function' || typeof args[2] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function (error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  }); // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n\n  ['getStats'].forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  return RTCPeerConnection;\n};\n\n//# sourceURL=webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js?");

/***/ }),

/***/ "./node_modules/sdp/sdp.js":
/*!*********************************!*\
  !*** ./node_modules/sdp/sdp.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {/* eslint-env node */\n // SDP helpers.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar SDPUtils = {}; // Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\n\nSDPUtils.generateIdentifier = function () {\n  return Math.random().toString(36).substr(2, 10);\n}; // The RTCP CNAME used by all peerconnections from the same JS.\n\n\nSDPUtils.localCName = SDPUtils.generateIdentifier(); // Splits SDP into lines, dealing with both CRLF and LF.\n\nSDPUtils.splitLines = function (blob) {\n  return blob.trim().split('\\n').map(function (line) {\n    return line.trim();\n  });\n}; // Splits SDP into sessionpart and mediasections. Ensures CRLF.\n\n\nSDPUtils.splitSections = function (blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function (part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n}; // returns the session description.\n\n\nSDPUtils.getDescription = function (blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n}; // returns the individual media sections.\n\n\nSDPUtils.getMediaSections = function (blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n}; // Returns lines that start with a certain prefix.\n\n\nSDPUtils.matchPrefix = function (blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function (line) {\n    return line.indexOf(prefix) === 0;\n  });\n}; // Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n\n\nSDPUtils.parseCandidate = function (line) {\n  var parts; // Parse both variants.\n\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4],\n    // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n\n        candidate.usernameFragment = parts[i + 1];\n        break;\n\n      default:\n        // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n\n  return candidate;\n}; // Translates a candidate object into SDP candidate attribute.\n\n\nSDPUtils.writeCandidate = function (candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n\n  if (type !== 'host' && candidate.relatedAddress && candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n\n  return 'candidate:' + sdp.join(' ');\n}; // Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\n\n\nSDPUtils.parseIceOptions = function (line) {\n  return line.substr(14).split(' ');\n}; // Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\n\n\nSDPUtils.parseRtpMap = function (line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n\n  };\n  parts = parts[0].split('/');\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1; // legacy alias, got renamed back to channels in ORTC.\n\n  parsed.numChannels = parsed.channels;\n  return parsed;\n}; // Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\n\n\nSDPUtils.writeRtpMap = function (codec) {\n  var pt = codec.payloadType;\n\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate + (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n}; // Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\n\n\nSDPUtils.parseExtmap = function (line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n}; // Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\n\n\nSDPUtils.writeExtmap = function (headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) + (headerExtension.direction && headerExtension.direction !== 'sendrecv' ? '/' + headerExtension.direction : '') + ' ' + headerExtension.uri + '\\r\\n';\n}; // Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\n\n\nSDPUtils.parseFmtp = function (line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n\n  return parsed;\n}; // Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\n\n\nSDPUtils.writeFmtp = function (codec) {\n  var line = '';\n  var pt = codec.payloadType;\n\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function (param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n\n  return line;\n}; // Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\n\n\nSDPUtils.parseRtcpFb = function (line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n}; // Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\n\n\nSDPUtils.writeRtcpFb = function (codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function (fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type + (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') + '\\r\\n';\n    });\n  }\n\n  return lines;\n}; // Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\n\n\nSDPUtils.parseSsrcMedia = function (line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function (line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function (ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n}; // Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\n\n\nSDPUtils.getMid = function (mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function (line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(),\n    // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n}; // Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\n\n\nSDPUtils.getDtlsParameters = function (mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=fingerprint:'); // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n}; // Serializes DTLS parameters to SDP.\n\n\nSDPUtils.writeDtlsParameters = function (params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function (fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n}; // Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\n\n\nSDPUtils.getIceParameters = function (mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection); // Search in session part, too.\n\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function (line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function (line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n}; // Serializes ICE parameters to SDP.\n\n\nSDPUtils.writeIceParameters = function (params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' + 'a=ice-pwd:' + params.password + '\\r\\n';\n}; // Parses the SDP media section and returns RTCRtpParameters.\n\n\nSDPUtils.parseRtpParameters = function (mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n\n  for (var i = 3; i < mline.length; i++) {\n    // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(mediaSection, 'a=fmtp:' + pt + ' '); // Only the first a=fmtp:<pt> is considered.\n\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:' + pt + ' ').map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec); // parse FEC mechanisms from rtpmap lines.\n\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n\n        default:\n          // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function (line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  }); // FIXME: parse rtcp.\n\n  return description;\n}; // Generates parts of the SDP media section describing the capabilities /\n// parameters.\n\n\nSDPUtils.writeRtpDescription = function (kind, caps) {\n  var sdp = ''; // Build the mline.\n\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function (codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n'; // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n\n  caps.codecs.forEach(function (codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function (codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function (extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  } // FIXME: write fecMechanisms.\n\n\n  return sdp;\n}; // Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\n\n\nSDPUtils.parseRtpEncodingParameters = function (mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1; // filter a=ssrc:... cname:, ignore PlanB-msid\n\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID').map(function (line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function (part) {\n      return parseInt(part, 10);\n    });\n  });\n\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function (codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {\n          ssrc: secondarySsrc\n        };\n      }\n\n      encodingParameters.push(encParam);\n\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  } // we support both b=AS and b=TIAS but interpret AS as TIAS.\n\n\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95 - 50 * 40 * 8;\n    } else {\n      bandwidth = undefined;\n    }\n\n    encodingParameters.forEach(function (params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n\n  return encodingParameters;\n}; // parses http://draft.ortc.org/#rtcrtcpparameters*\n\n\nSDPUtils.parseRtcpParameters = function (mediaSection) {\n  var rtcpParameters = {}; // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (obj) {\n    return obj.attribute === 'cname';\n  })[0];\n\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  } // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n\n\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0; // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n  return rtcpParameters;\n}; // parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\n\n\nSDPUtils.parseMsid = function (mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {\n      stream: parts[0],\n      track: parts[1]\n    };\n  }\n\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {\n      stream: parts[0],\n      track: parts[1]\n    };\n  }\n}; // Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\n\n\nSDPUtils.generateSessionId = function () {\n  return Math.random().toString().substr(2, 21);\n}; // Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\n\n\nSDPUtils.writeSessionBoilerplate = function (sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n\n  var user = sessUser || 'thisisadapterortc'; // FIXME: sess-id should be an NTP timestamp.\n\n  return 'v=0\\r\\n' + 'o=' + user + ' ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' + 's=-\\r\\n' + 't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function (transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps); // Map ICE parameters (ufrag, pwd) to SDP.\n\n  sdp += SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()); // Map DTLS parameters to SDP.\n\n  sdp += SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(), type === 'offer' ? 'actpass' : 'active');\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' + transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid; // for Chrome.\n\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' ' + msid;\n\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' + transceiver.sendEncodingParameters[0].ssrc + ' ' + transceiver.sendEncodingParameters[0].rtx.ssrc + '\\r\\n';\n    }\n  } // FIXME: this should be written by writeRtpDescription.\n\n\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n\n  return sdp;\n}; // Gets the direction from the mediaSection or the sessionpart.\n\n\nSDPUtils.getDirection = function (mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n\n      default: // FIXME: What should happen here?\n\n    }\n  }\n\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function (mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function (mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function (mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function (mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n}; // a very naive interpretation of a valid SDP.\n\n\nSDPUtils.isValidSDP = function (blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n\n  var lines = SDPUtils.splitLines(blob);\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    } // TODO: check the modifier a bit more.\n\n  }\n\n  return true;\n}; // Expose public methods.\n\n\nif (( false ? undefined : _typeof(module)) === 'object') {\n  module.exports = SDPUtils;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/sdp/sdp.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Module dependencies.\n */\nvar url = __webpack_require__(/*! ./url */ \"./node_modules/socket.io-client/lib/url.js\");\n\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\n\nvar Manager = __webpack_require__(/*! ./manager */ \"./node_modules/socket.io-client/lib/manager.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (_typeof(uri) === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = __webpack_require__(/*! ./manager */ \"./node_modules/socket.io-client/lib/manager.js\");\nexports.Socket = __webpack_require__(/*! ./socket */ \"./node_modules/socket.io-client/lib/socket.js\");\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/manager.js":
/*!******************************************************!*\
  !*** ./node_modules/socket.io-client/lib/manager.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Module dependencies.\n */\nvar eio = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/lib/index.js\");\n\nvar Socket = __webpack_require__(/*! ./socket */ \"./node_modules/socket.io-client/lib/socket.js\");\n\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\n\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\n\nvar on = __webpack_require__(/*! ./on */ \"./node_modules/socket.io-client/lib/on.js\");\n\nvar bind = __webpack_require__(/*! component-bind */ \"./node_modules/component-bind/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:manager');\n\nvar indexOf = __webpack_require__(/*! indexof */ \"./node_modules/indexof/index.js\");\n\nvar Backoff = __webpack_require__(/*! backo2 */ \"./node_modules/backo2/index.js\");\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === _typeof(uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n\n  var _parser = opts.parser || parser;\n\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/manager.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/on.js":
/*!*************************************************!*\
  !*** ./node_modules/socket.io-client/lib/on.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/on.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/socket.js":
/*!*****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/socket.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Module dependencies.\n */\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\n\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\n\nvar toArray = __webpack_require__(/*! to-array */ \"./node_modules/to-array/index.js\");\n\nvar on = __webpack_require__(/*! ./on */ \"./node_modules/socket.io-client/lib/on.js\");\n\nvar bind = __webpack_require__(/*! component-bind */ \"./node_modules/component-bind/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:socket');\n\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\n\nvar hasBin = __webpack_require__(/*! has-binary2 */ \"./node_modules/has-binary2/index.js\");\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = _typeof(this.query) === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/socket.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/url.js":
/*!**************************************************!*\
  !*** ./node_modules/socket.io-client/lib/url.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\nvar parseuri = __webpack_require__(/*! parseuri */ \"./node_modules/parseuri/index.js\");\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/url.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/socket.io-client/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/debug/src/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/debug/src/debug.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-client/node_modules/ms/index.js\");\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/debug/src/debug.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/ms/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/ms/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n\n  var type = _typeof(val);\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/binary.js":
/*!*************************************************!*\
  !*** ./node_modules/socket.io-parser/binary.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"./node_modules/socket.io-parser/is-buffer.js\");\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n\n    return newData;\n  } else if (_typeof(data) === 'object' && !(data instanceof Date)) {\n    var newData = {};\n\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n\n    return newData;\n  }\n\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (_typeof(data) === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (_typeof(obj) === 'object' && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/binary.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/index.js":
/*!************************************************!*\
  !*** ./node_modules/socket.io-parser/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-parser/node_modules/debug/src/browser.js\")('socket.io-parser');\n\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\n\nvar binary = __webpack_require__(/*! ./binary */ \"./node_modules/socket.io-parser/binary.js\");\n\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"./node_modules/socket.io-parser/is-buffer.js\");\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  // first is type\n  var str = '' + obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var i = 0; // look up type\n\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  } // look up attachments if type binary\n\n\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length === this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/is-buffer.js":
/*!****************************************************!*\
  !*** ./node_modules/socket.io-parser/is-buffer.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = isBuf;\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\n\nfunction isBuf(obj) {\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/is-buffer.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/socket.io-parser/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/socket.io-parser/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/node_modules/debug/src/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/socket.io-parser/node_modules/debug/src/debug.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-parser/node_modules/ms/index.js\");\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/debug/src/debug.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/node_modules/ms/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/socket.io-parser/node_modules/ms/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n\n  var type = _typeof(val);\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/entry.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/entry.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar transportList = __webpack_require__(/*! ./transport-list */ \"./node_modules/sockjs-client/lib/transport-list.js\");\n\nmodule.exports = __webpack_require__(/*! ./main */ \"./node_modules/sockjs-client/lib/main.js\")(transportList); // TODO can't get rid of this until all servers do\n\nif ('_sockjs_onload' in global) {\n  setTimeout(global._sockjs_onload, 1);\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/entry.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/close.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/close.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    Event = __webpack_require__(/*! ./event */ \"./node_modules/sockjs-client/lib/event/event.js\");\n\nfunction CloseEvent() {\n  Event.call(this);\n  this.initEvent('close', false, false);\n  this.wasClean = false;\n  this.code = 0;\n  this.reason = '';\n}\n\ninherits(CloseEvent, Event);\nmodule.exports = CloseEvent;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/event/close.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/emitter.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/emitter.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventTarget = __webpack_require__(/*! ./eventtarget */ \"./node_modules/sockjs-client/lib/event/eventtarget.js\");\n\nfunction EventEmitter() {\n  EventTarget.call(this);\n}\n\ninherits(EventEmitter, EventTarget);\n\nEventEmitter.prototype.removeAllListeners = function (type) {\n  if (type) {\n    delete this._listeners[type];\n  } else {\n    this._listeners = {};\n  }\n};\n\nEventEmitter.prototype.once = function (type, listener) {\n  var self = this,\n      fired = false;\n\n  function g() {\n    self.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  this.on(type, g);\n};\n\nEventEmitter.prototype.emit = function () {\n  var type = arguments[0];\n  var listeners = this._listeners[type];\n\n  if (!listeners) {\n    return;\n  } // equivalent of Array.prototype.slice.call(arguments, 1);\n\n\n  var l = arguments.length;\n  var args = new Array(l - 1);\n\n  for (var ai = 1; ai < l; ai++) {\n    args[ai - 1] = arguments[ai];\n  }\n\n  for (var i = 0; i < listeners.length; i++) {\n    listeners[i].apply(this, args);\n  }\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;\nEventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;\nmodule.exports.EventEmitter = EventEmitter;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/event/emitter.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/event.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction Event(eventType) {\n  this.type = eventType;\n}\n\nEvent.prototype.initEvent = function (eventType, canBubble, cancelable) {\n  this.type = eventType;\n  this.bubbles = canBubble;\n  this.cancelable = cancelable;\n  this.timeStamp = +new Date();\n  return this;\n};\n\nEvent.prototype.stopPropagation = function () {};\n\nEvent.prototype.preventDefault = function () {};\n\nEvent.CAPTURING_PHASE = 1;\nEvent.AT_TARGET = 2;\nEvent.BUBBLING_PHASE = 3;\nmodule.exports = Event;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/event/event.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/eventtarget.js":
/*!*************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/eventtarget.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* Simplified implementation of DOM2 EventTarget.\n *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\n */\n\nfunction EventTarget() {\n  this._listeners = {};\n}\n\nEventTarget.prototype.addEventListener = function (eventType, listener) {\n  if (!(eventType in this._listeners)) {\n    this._listeners[eventType] = [];\n  }\n\n  var arr = this._listeners[eventType]; // #4\n\n  if (arr.indexOf(listener) === -1) {\n    // Make a copy so as not to interfere with a current dispatchEvent.\n    arr = arr.concat([listener]);\n  }\n\n  this._listeners[eventType] = arr;\n};\n\nEventTarget.prototype.removeEventListener = function (eventType, listener) {\n  var arr = this._listeners[eventType];\n\n  if (!arr) {\n    return;\n  }\n\n  var idx = arr.indexOf(listener);\n\n  if (idx !== -1) {\n    if (arr.length > 1) {\n      // Make a copy so as not to interfere with a current dispatchEvent.\n      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\n    } else {\n      delete this._listeners[eventType];\n    }\n\n    return;\n  }\n};\n\nEventTarget.prototype.dispatchEvent = function () {\n  var event = arguments[0];\n  var t = event.type; // equivalent of Array.prototype.slice.call(arguments, 0);\n\n  var args = arguments.length === 1 ? [event] : Array.apply(null, arguments); // TODO: This doesn't match the real behavior; per spec, onfoo get\n  // their place in line from the /first/ time they're set from\n  // non-null. Although WebKit bumps it to the end every time it's\n  // set.\n\n  if (this['on' + t]) {\n    this['on' + t].apply(this, args);\n  }\n\n  if (t in this._listeners) {\n    // Grab a reference to the listeners list. removeEventListener may alter the list.\n    var listeners = this._listeners[t];\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(this, args);\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/event/eventtarget.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/trans-message.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/trans-message.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    Event = __webpack_require__(/*! ./event */ \"./node_modules/sockjs-client/lib/event/event.js\");\n\nfunction TransportMessageEvent(data) {\n  Event.call(this);\n  this.initEvent('message', false, false);\n  this.data = data;\n}\n\ninherits(TransportMessageEvent, Event);\nmodule.exports = TransportMessageEvent;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/event/trans-message.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/facade.js":
/*!**************************************************!*\
  !*** ./node_modules/sockjs-client/lib/facade.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    iframeUtils = __webpack_require__(/*! ./utils/iframe */ \"./node_modules/sockjs-client/lib/utils/iframe.js\");\n\nfunction FacadeJS(transport) {\n  this._transport = transport;\n  transport.on('message', this._transportMessage.bind(this));\n  transport.on('close', this._transportClose.bind(this));\n}\n\nFacadeJS.prototype._transportClose = function (code, reason) {\n  iframeUtils.postMessage('c', JSON3.stringify([code, reason]));\n};\n\nFacadeJS.prototype._transportMessage = function (frame) {\n  iframeUtils.postMessage('t', frame);\n};\n\nFacadeJS.prototype._send = function (data) {\n  this._transport.send(data);\n};\n\nFacadeJS.prototype._close = function () {\n  this._transport.close();\n\n  this._transport.removeAllListeners();\n};\n\nmodule.exports = FacadeJS;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/facade.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/iframe-bootstrap.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/iframe-bootstrap.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar urlUtils = __webpack_require__(/*! ./utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    eventUtils = __webpack_require__(/*! ./utils/event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    FacadeJS = __webpack_require__(/*! ./facade */ \"./node_modules/sockjs-client/lib/facade.js\"),\n    InfoIframeReceiver = __webpack_require__(/*! ./info-iframe-receiver */ \"./node_modules/sockjs-client/lib/info-iframe-receiver.js\"),\n    iframeUtils = __webpack_require__(/*! ./utils/iframe */ \"./node_modules/sockjs-client/lib/utils/iframe.js\"),\n    loc = __webpack_require__(/*! ./location */ \"./node_modules/sockjs-client/lib/location.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:iframe-bootstrap');\n}\n\nmodule.exports = function (SockJS, availableTransports) {\n  var transportMap = {};\n  availableTransports.forEach(function (at) {\n    if (at.facadeTransport) {\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\n    }\n  }); // hard-coded for the info iframe\n  // TODO see if we can make this more dynamic\n\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\n  var parentOrigin;\n  /* eslint-disable camelcase */\n\n  SockJS.bootstrap_iframe = function () {\n    /* eslint-enable camelcase */\n    var facade;\n    iframeUtils.currentWindowId = loc.hash.slice(1);\n\n    var onMessage = function onMessage(e) {\n      if (e.source !== parent) {\n        return;\n      }\n\n      if (typeof parentOrigin === 'undefined') {\n        parentOrigin = e.origin;\n      }\n\n      if (e.origin !== parentOrigin) {\n        return;\n      }\n\n      var iframeMessage;\n\n      try {\n        iframeMessage = JSON3.parse(e.data);\n      } catch (ignored) {\n        debug('bad json', e.data);\n        return;\n      }\n\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\n        return;\n      }\n\n      switch (iframeMessage.type) {\n        case 's':\n          var p;\n\n          try {\n            p = JSON3.parse(iframeMessage.data);\n          } catch (ignored) {\n            debug('bad json', iframeMessage.data);\n            break;\n          }\n\n          var version = p[0];\n          var transport = p[1];\n          var transUrl = p[2];\n          var baseUrl = p[3];\n          debug(version, transport, transUrl, baseUrl); // change this to semver logic\n\n          if (version !== SockJS.version) {\n            throw new Error('Incompatible SockJS! Main site uses:' + ' \"' + version + '\", the iframe:' + ' \"' + SockJS.version + '\".');\n          }\n\n          if (!urlUtils.isOriginEqual(transUrl, loc.href) || !urlUtils.isOriginEqual(baseUrl, loc.href)) {\n            throw new Error('Can\\'t connect to different domain from within an ' + 'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\n          }\n\n          facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\n          break;\n\n        case 'm':\n          facade._send(iframeMessage.data);\n\n          break;\n\n        case 'c':\n          if (facade) {\n            facade._close();\n          }\n\n          facade = null;\n          break;\n      }\n    };\n\n    eventUtils.attachEvent('message', onMessage); // Start\n\n    iframeUtils.postMessage('s');\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/iframe-bootstrap.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-ajax.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-ajax.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    objectUtils = __webpack_require__(/*! ./utils/object */ \"./node_modules/sockjs-client/lib/utils/object.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:info-ajax');\n}\n\nfunction InfoAjax(url, AjaxObject) {\n  EventEmitter.call(this);\n  var self = this;\n  var t0 = +new Date();\n  this.xo = new AjaxObject('GET', url);\n  this.xo.once('finish', function (status, text) {\n    var info, rtt;\n\n    if (status === 200) {\n      rtt = +new Date() - t0;\n\n      if (text) {\n        try {\n          info = JSON3.parse(text);\n        } catch (e) {\n          debug('bad json', text);\n        }\n      }\n\n      if (!objectUtils.isObject(info)) {\n        info = {};\n      }\n    }\n\n    self.emit('finish', info, rtt);\n    self.removeAllListeners();\n  });\n}\n\ninherits(InfoAjax, EventEmitter);\n\nInfoAjax.prototype.close = function () {\n  this.removeAllListeners();\n  this.xo.close();\n};\n\nmodule.exports = InfoAjax;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/info-ajax.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe-receiver.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe-receiver.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    XHRLocalObject = __webpack_require__(/*! ./transport/sender/xhr-local */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-local.js\"),\n    InfoAjax = __webpack_require__(/*! ./info-ajax */ \"./node_modules/sockjs-client/lib/info-ajax.js\");\n\nfunction InfoReceiverIframe(transUrl) {\n  var self = this;\n  EventEmitter.call(this);\n  this.ir = new InfoAjax(transUrl, XHRLocalObject);\n  this.ir.once('finish', function (info, rtt) {\n    self.ir = null;\n    self.emit('message', JSON3.stringify([info, rtt]));\n  });\n}\n\ninherits(InfoReceiverIframe, EventEmitter);\nInfoReceiverIframe.transportName = 'iframe-info-receiver';\n\nInfoReceiverIframe.prototype.close = function () {\n  if (this.ir) {\n    this.ir.close();\n    this.ir = null;\n  }\n\n  this.removeAllListeners();\n};\n\nmodule.exports = InfoReceiverIframe;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/info-iframe-receiver.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    utils = __webpack_require__(/*! ./utils/event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    IframeTransport = __webpack_require__(/*! ./transport/iframe */ \"./node_modules/sockjs-client/lib/transport/iframe.js\"),\n    InfoReceiverIframe = __webpack_require__(/*! ./info-iframe-receiver */ \"./node_modules/sockjs-client/lib/info-iframe-receiver.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:info-iframe');\n}\n\nfunction InfoIframe(baseUrl, url) {\n  var self = this;\n  EventEmitter.call(this);\n\n  var go = function go() {\n    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);\n    ifr.once('message', function (msg) {\n      if (msg) {\n        var d;\n\n        try {\n          d = JSON3.parse(msg);\n        } catch (e) {\n          debug('bad json', msg);\n          self.emit('finish');\n          self.close();\n          return;\n        }\n\n        var info = d[0],\n            rtt = d[1];\n        self.emit('finish', info, rtt);\n      }\n\n      self.close();\n    });\n    ifr.once('close', function () {\n      self.emit('finish');\n      self.close();\n    });\n  }; // TODO this seems the same as the 'needBody' from transports\n\n\n  if (!global.document.body) {\n    utils.attachEvent('load', go);\n  } else {\n    go();\n  }\n}\n\ninherits(InfoIframe, EventEmitter);\n\nInfoIframe.enabled = function () {\n  return IframeTransport.enabled();\n};\n\nInfoIframe.prototype.close = function () {\n  if (this.ifr) {\n    this.ifr.close();\n  }\n\n  this.removeAllListeners();\n  this.ifr = null;\n};\n\nmodule.exports = InfoIframe;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/info-iframe.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-receiver.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-receiver.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    urlUtils = __webpack_require__(/*! ./utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    XDR = __webpack_require__(/*! ./transport/sender/xdr */ \"./node_modules/sockjs-client/lib/transport/sender/xdr.js\"),\n    XHRCors = __webpack_require__(/*! ./transport/sender/xhr-cors */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js\"),\n    XHRLocal = __webpack_require__(/*! ./transport/sender/xhr-local */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-local.js\"),\n    XHRFake = __webpack_require__(/*! ./transport/sender/xhr-fake */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js\"),\n    InfoIframe = __webpack_require__(/*! ./info-iframe */ \"./node_modules/sockjs-client/lib/info-iframe.js\"),\n    InfoAjax = __webpack_require__(/*! ./info-ajax */ \"./node_modules/sockjs-client/lib/info-ajax.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:info-receiver');\n}\n\nfunction InfoReceiver(baseUrl, urlInfo) {\n  debug(baseUrl);\n  var self = this;\n  EventEmitter.call(this);\n  setTimeout(function () {\n    self.doXhr(baseUrl, urlInfo);\n  }, 0);\n}\n\ninherits(InfoReceiver, EventEmitter); // TODO this is currently ignoring the list of available transports and the whitelist\n\nInfoReceiver._getReceiver = function (baseUrl, url, urlInfo) {\n  // determine method of CORS support (if needed)\n  if (urlInfo.sameOrigin) {\n    return new InfoAjax(url, XHRLocal);\n  }\n\n  if (XHRCors.enabled) {\n    return new InfoAjax(url, XHRCors);\n  }\n\n  if (XDR.enabled && urlInfo.sameScheme) {\n    return new InfoAjax(url, XDR);\n  }\n\n  if (InfoIframe.enabled()) {\n    return new InfoIframe(baseUrl, url);\n  }\n\n  return new InfoAjax(url, XHRFake);\n};\n\nInfoReceiver.prototype.doXhr = function (baseUrl, urlInfo) {\n  var self = this,\n      url = urlUtils.addPath(baseUrl, '/info');\n  debug('doXhr', url);\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\n  this.timeoutRef = setTimeout(function () {\n    debug('timeout');\n\n    self._cleanup(false);\n\n    self.emit('finish');\n  }, InfoReceiver.timeout);\n  this.xo.once('finish', function (info, rtt) {\n    debug('finish', info, rtt);\n\n    self._cleanup(true);\n\n    self.emit('finish', info, rtt);\n  });\n};\n\nInfoReceiver.prototype._cleanup = function (wasClean) {\n  debug('_cleanup');\n  clearTimeout(this.timeoutRef);\n  this.timeoutRef = null;\n\n  if (!wasClean && this.xo) {\n    this.xo.close();\n  }\n\n  this.xo = null;\n};\n\nInfoReceiver.prototype.close = function () {\n  debug('close');\n  this.removeAllListeners();\n\n  this._cleanup(false);\n};\n\nInfoReceiver.timeout = 8000;\nmodule.exports = InfoReceiver;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/info-receiver.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/location.js":
/*!****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/location.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nmodule.exports = global.location || {\n  origin: 'http://localhost:80',\n  protocol: 'http:',\n  host: 'localhost',\n  port: 80,\n  href: 'http://localhost/',\n  hash: ''\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/location.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/main.js":
/*!************************************************!*\
  !*** ./node_modules/sockjs-client/lib/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n__webpack_require__(/*! ./shims */ \"./node_modules/sockjs-client/lib/shims.js\");\n\nvar URL = __webpack_require__(/*! url-parse */ \"./node_modules/url-parse/index.js\"),\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    random = __webpack_require__(/*! ./utils/random */ \"./node_modules/sockjs-client/lib/utils/random.js\"),\n    escape = __webpack_require__(/*! ./utils/escape */ \"./node_modules/sockjs-client/lib/utils/escape.js\"),\n    urlUtils = __webpack_require__(/*! ./utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    eventUtils = __webpack_require__(/*! ./utils/event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    transport = __webpack_require__(/*! ./utils/transport */ \"./node_modules/sockjs-client/lib/utils/transport.js\"),\n    objectUtils = __webpack_require__(/*! ./utils/object */ \"./node_modules/sockjs-client/lib/utils/object.js\"),\n    browser = __webpack_require__(/*! ./utils/browser */ \"./node_modules/sockjs-client/lib/utils/browser.js\"),\n    log = __webpack_require__(/*! ./utils/log */ \"./node_modules/sockjs-client/lib/utils/log.js\"),\n    Event = __webpack_require__(/*! ./event/event */ \"./node_modules/sockjs-client/lib/event/event.js\"),\n    EventTarget = __webpack_require__(/*! ./event/eventtarget */ \"./node_modules/sockjs-client/lib/event/eventtarget.js\"),\n    loc = __webpack_require__(/*! ./location */ \"./node_modules/sockjs-client/lib/location.js\"),\n    CloseEvent = __webpack_require__(/*! ./event/close */ \"./node_modules/sockjs-client/lib/event/close.js\"),\n    TransportMessageEvent = __webpack_require__(/*! ./event/trans-message */ \"./node_modules/sockjs-client/lib/event/trans-message.js\"),\n    InfoReceiver = __webpack_require__(/*! ./info-receiver */ \"./node_modules/sockjs-client/lib/info-receiver.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:main');\n}\n\nvar transports; // follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\n\nfunction SockJS(url, protocols, options) {\n  if (!(this instanceof SockJS)) {\n    return new SockJS(url, protocols, options);\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\n  }\n\n  EventTarget.call(this);\n  this.readyState = SockJS.CONNECTING;\n  this.extensions = '';\n  this.protocol = ''; // non-standard extension\n\n  options = options || {};\n\n  if (options.protocols_whitelist) {\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\n  }\n\n  this._transportsWhitelist = options.transports;\n  this._transportOptions = options.transportOptions || {};\n  var sessionId = options.sessionId || 8;\n\n  if (typeof sessionId === 'function') {\n    this._generateSessionId = sessionId;\n  } else if (typeof sessionId === 'number') {\n    this._generateSessionId = function () {\n      return random.string(sessionId);\n    };\n  } else {\n    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\n  }\n\n  this._server = options.server || random.numberString(1000); // Step 1 of WS spec - parse and validate the url. Issue #8\n\n  var parsedUrl = new URL(url);\n\n  if (!parsedUrl.host || !parsedUrl.protocol) {\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\n  } else if (parsedUrl.hash) {\n    throw new SyntaxError('The URL must not contain a fragment');\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\n  }\n\n  var secure = parsedUrl.protocol === 'https:'; // Step 2 - don't allow secure origin with an insecure protocol\n\n  if (loc.protocol === 'https:' && !secure) {\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\n  } // Step 3 - check port access - no need here\n  // Step 4 - parse protocols argument\n\n\n  if (!protocols) {\n    protocols = [];\n  } else if (!Array.isArray(protocols)) {\n    protocols = [protocols];\n  } // Step 5 - check protocols argument\n\n\n  var sortedProtocols = protocols.sort();\n  sortedProtocols.forEach(function (proto, i) {\n    if (!proto) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\n    }\n\n    if (i < sortedProtocols.length - 1 && proto === sortedProtocols[i + 1]) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\n    }\n  }); // Step 6 - convert origin\n\n  var o = urlUtils.getOrigin(loc.href);\n  this._origin = o ? o.toLowerCase() : null; // remove the trailing slash\n\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, '')); // store the sanitized url\n\n  this.url = parsedUrl.href;\n  debug('using url', this.url); // Step 7 - start connection in background\n  // obtain server info\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\n\n  this._urlInfo = {\n    nullOrigin: !browser.hasDomain(),\n    sameOrigin: urlUtils.isOriginEqual(this.url, loc.href),\n    sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\n  };\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\n\n  this._ir.once('finish', this._receiveInfo.bind(this));\n}\n\ninherits(SockJS, EventTarget);\n\nfunction userSetCode(code) {\n  return code === 1000 || code >= 3000 && code <= 4999;\n}\n\nSockJS.prototype.close = function (code, reason) {\n  // Step 1\n  if (code && !userSetCode(code)) {\n    throw new Error('InvalidAccessError: Invalid code');\n  } // Step 2.4 states the max is 123 bytes, but we are just checking length\n\n\n  if (reason && reason.length > 123) {\n    throw new SyntaxError('reason argument has an invalid length');\n  } // Step 3.1\n\n\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\n    return;\n  } // TODO look at docs to determine how to set this\n\n\n  var wasClean = true;\n\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\n};\n\nSockJS.prototype.send = function (data) {\n  // #13 - convert anything non-string to string\n  // TODO this currently turns objects into [object Object]\n  if (typeof data !== 'string') {\n    data = '' + data;\n  }\n\n  if (this.readyState === SockJS.CONNECTING) {\n    throw new Error('InvalidStateError: The connection has not been established yet');\n  }\n\n  if (this.readyState !== SockJS.OPEN) {\n    return;\n  }\n\n  this._transport.send(escape.quote(data));\n};\n\nSockJS.version = __webpack_require__(/*! ./version */ \"./node_modules/sockjs-client/lib/version.js\");\nSockJS.CONNECTING = 0;\nSockJS.OPEN = 1;\nSockJS.CLOSING = 2;\nSockJS.CLOSED = 3;\n\nSockJS.prototype._receiveInfo = function (info, rtt) {\n  debug('_receiveInfo', rtt);\n  this._ir = null;\n\n  if (!info) {\n    this._close(1002, 'Cannot connect to server');\n\n    return;\n  } // establish a round-trip timeout (RTO) based on the\n  // round-trip time (RTT)\n\n\n  this._rto = this.countRTO(rtt); // allow server to override url used for the actual transport\n\n  this._transUrl = info.base_url ? info.base_url : this.url;\n  info = objectUtils.extend(info, this._urlInfo);\n  debug('info', info); // determine list of desired and supported transports\n\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\n  this._transports = enabledTransports.main;\n  debug(this._transports.length + ' enabled transports');\n\n  this._connect();\n};\n\nSockJS.prototype._connect = function () {\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\n    debug('attempt', Transport.transportName);\n\n    if (Transport.needBody) {\n      if (!global.document.body || typeof global.document.readyState !== 'undefined' && global.document.readyState !== 'complete' && global.document.readyState !== 'interactive') {\n        debug('waiting for body');\n\n        this._transports.unshift(Transport);\n\n        eventUtils.attachEvent('load', this._connect.bind(this));\n        return;\n      }\n    } // calculate timeout based on RTO and round trips. Default to 5s\n\n\n    var timeoutMs = this._rto * Transport.roundTrips || 5000;\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\n    debug('using timeout', timeoutMs);\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\n    var options = this._transportOptions[Transport.transportName];\n    debug('transport url', transportUrl);\n    var transportObj = new Transport(transportUrl, this._transUrl, options);\n    transportObj.on('message', this._transportMessage.bind(this));\n    transportObj.once('close', this._transportClose.bind(this));\n    transportObj.transportName = Transport.transportName;\n    this._transport = transportObj;\n    return;\n  }\n\n  this._close(2000, 'All transports failed', false);\n};\n\nSockJS.prototype._transportTimeout = function () {\n  debug('_transportTimeout');\n\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transport) {\n      this._transport.close();\n    }\n\n    this._transportClose(2007, 'Transport timed out');\n  }\n};\n\nSockJS.prototype._transportMessage = function (msg) {\n  debug('_transportMessage', msg);\n  var self = this,\n      type = msg.slice(0, 1),\n      content = msg.slice(1),\n      payload; // first check for messages that don't need a payload\n\n  switch (type) {\n    case 'o':\n      this._open();\n\n      return;\n\n    case 'h':\n      this.dispatchEvent(new Event('heartbeat'));\n      debug('heartbeat', this.transport);\n      return;\n  }\n\n  if (content) {\n    try {\n      payload = JSON3.parse(content);\n    } catch (e) {\n      debug('bad json', content);\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    debug('empty payload', content);\n    return;\n  }\n\n  switch (type) {\n    case 'a':\n      if (Array.isArray(payload)) {\n        payload.forEach(function (p) {\n          debug('message', self.transport, p);\n          self.dispatchEvent(new TransportMessageEvent(p));\n        });\n      }\n\n      break;\n\n    case 'm':\n      debug('message', this.transport, payload);\n      this.dispatchEvent(new TransportMessageEvent(payload));\n      break;\n\n    case 'c':\n      if (Array.isArray(payload) && payload.length === 2) {\n        this._close(payload[0], payload[1], true);\n      }\n\n      break;\n  }\n};\n\nSockJS.prototype._transportClose = function (code, reason) {\n  debug('_transportClose', this.transport, code, reason);\n\n  if (this._transport) {\n    this._transport.removeAllListeners();\n\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\n    this._connect();\n\n    return;\n  }\n\n  this._close(code, reason);\n};\n\nSockJS.prototype._open = function () {\n  debug('_open', this._transport.transportName, this.readyState);\n\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transportTimeoutId) {\n      clearTimeout(this._transportTimeoutId);\n      this._transportTimeoutId = null;\n    }\n\n    this.readyState = SockJS.OPEN;\n    this.transport = this._transport.transportName;\n    this.dispatchEvent(new Event('open'));\n    debug('connected', this.transport);\n  } else {\n    // The server might have been restarted, and lost track of our\n    // connection.\n    this._close(1006, 'Server lost session');\n  }\n};\n\nSockJS.prototype._close = function (code, reason, wasClean) {\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\n  var forceFail = false;\n\n  if (this._ir) {\n    forceFail = true;\n\n    this._ir.close();\n\n    this._ir = null;\n  }\n\n  if (this._transport) {\n    this._transport.close();\n\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (this.readyState === SockJS.CLOSED) {\n    throw new Error('InvalidStateError: SockJS has already been closed');\n  }\n\n  this.readyState = SockJS.CLOSING;\n  setTimeout(function () {\n    this.readyState = SockJS.CLOSED;\n\n    if (forceFail) {\n      this.dispatchEvent(new Event('error'));\n    }\n\n    var e = new CloseEvent('close');\n    e.wasClean = wasClean || false;\n    e.code = code || 1000;\n    e.reason = reason;\n    this.dispatchEvent(e);\n    this.onmessage = this.onclose = this.onerror = null;\n    debug('disconnected');\n  }.bind(this), 0);\n}; // See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\n// and RFC 2988.\n\n\nSockJS.prototype.countRTO = function (rtt) {\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\n  // transport the time needed to establish a connection (the time that pass\n  // from the opening of the transport to the call of `_dispatchOpen`) is\n  // around 200msec (the lower bound used in the article above) and this\n  // causes spurious timeouts. For this reason we calculate a value slightly\n  // larger than that used in the article.\n  if (rtt > 100) {\n    return 4 * rtt; // rto > 400msec\n  }\n\n  return 300 + rtt; // 300msec < rto <= 400msec\n};\n\nmodule.exports = function (availableTransports) {\n  transports = transport(availableTransports);\n\n  __webpack_require__(/*! ./iframe-bootstrap */ \"./node_modules/sockjs-client/lib/iframe-bootstrap.js\")(SockJS, availableTransports);\n\n  return SockJS;\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/main.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/shims.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/shims.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint-disable */\n\n/* jscs: disable */\n // pulled specific shims from https://github.com/es-shims/es5-shim\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar ArrayPrototype = Array.prototype;\nvar ObjectPrototype = Object.prototype;\nvar FunctionPrototype = Function.prototype;\nvar StringPrototype = String.prototype;\nvar array_slice = ArrayPrototype.slice;\nvar _toString = ObjectPrototype.toString;\n\nvar isFunction = function isFunction(val) {\n  return ObjectPrototype.toString.call(val) === '[object Function]';\n};\n\nvar isArray = function isArray(obj) {\n  return _toString.call(obj) === '[object Array]';\n};\n\nvar isString = function isString(obj) {\n  return _toString.call(obj) === '[object String]';\n};\n\nvar supportsDescriptors = Object.defineProperty && function () {\n  try {\n    Object.defineProperty({}, 'x', {});\n    return true;\n  } catch (e) {\n    /* this is ES3 */\n    return false;\n  }\n}(); // Define configurable, writable and non-enumerable props\n// if they don't exist.\n\n\nvar defineProperty;\n\nif (supportsDescriptors) {\n  defineProperty = function defineProperty(object, name, method, forceAssign) {\n    if (!forceAssign && name in object) {\n      return;\n    }\n\n    Object.defineProperty(object, name, {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: method\n    });\n  };\n} else {\n  defineProperty = function defineProperty(object, name, method, forceAssign) {\n    if (!forceAssign && name in object) {\n      return;\n    }\n\n    object[name] = method;\n  };\n}\n\nvar defineProperties = function defineProperties(object, map, forceAssign) {\n  for (var name in map) {\n    if (ObjectPrototype.hasOwnProperty.call(map, name)) {\n      defineProperty(object, name, map[name], forceAssign);\n    }\n  }\n};\n\nvar toObject = function toObject(o) {\n  if (o == null) {\n    // this matches both null and undefined\n    throw new TypeError(\"can't convert \" + o + ' to object');\n  }\n\n  return Object(o);\n}; //\n// Util\n// ======\n//\n// ES5 9.4\n// http://es5.github.com/#x9.4\n// http://jsperf.com/to-integer\n\n\nfunction toInteger(num) {\n  var n = +num;\n\n  if (n !== n) {\n    // isNaN\n    n = 0;\n  } else if (n !== 0 && n !== 1 / 0 && n !== -(1 / 0)) {\n    n = (n > 0 || -1) * Math.floor(Math.abs(n));\n  }\n\n  return n;\n}\n\nfunction ToUint32(x) {\n  return x >>> 0;\n} //\n// Function\n// ========\n//\n// ES-5 15.3.4.5\n// http://es5.github.com/#x15.3.4.5\n\n\nfunction Empty() {}\n\ndefineProperties(FunctionPrototype, {\n  bind: function bind(that) {\n    // .length is 1\n    // 1. Let Target be the this value.\n    var target = this; // 2. If IsCallable(Target) is false, throw a TypeError exception.\n\n    if (!isFunction(target)) {\n      throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n    } // 3. Let A be a new (possibly empty) internal list of all of the\n    //   argument values provided after thisArg (arg1, arg2 etc), in order.\n    // XXX slicedArgs will stand in for \"A\" if used\n\n\n    var args = array_slice.call(arguments, 1); // for normal call\n    // 4. Let F be a new native ECMAScript object.\n    // 11. Set the [[Prototype]] internal property of F to the standard\n    //   built-in Function prototype object as specified in 15.3.3.1.\n    // 12. Set the [[Call]] internal property of F as described in\n    //   15.3.4.5.1.\n    // 13. Set the [[Construct]] internal property of F as described in\n    //   15.3.4.5.2.\n    // 14. Set the [[HasInstance]] internal property of F as described in\n    //   15.3.4.5.3.\n\n    var binder = function binder() {\n      if (this instanceof bound) {\n        // 15.3.4.5.2 [[Construct]]\n        // When the [[Construct]] internal method of a function object,\n        // F that was created using the bind function is called with a\n        // list of arguments ExtraArgs, the following steps are taken:\n        // 1. Let target be the value of F's [[TargetFunction]]\n        //   internal property.\n        // 2. If target has no [[Construct]] internal method, a\n        //   TypeError exception is thrown.\n        // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n        //   property.\n        // 4. Let args be a new list containing the same values as the\n        //   list boundArgs in the same order followed by the same\n        //   values as the list ExtraArgs in the same order.\n        // 5. Return the result of calling the [[Construct]] internal\n        //   method of target providing args as the arguments.\n        var result = target.apply(this, args.concat(array_slice.call(arguments)));\n\n        if (Object(result) === result) {\n          return result;\n        }\n\n        return this;\n      } else {\n        // 15.3.4.5.1 [[Call]]\n        // When the [[Call]] internal method of a function object, F,\n        // which was created using the bind function is called with a\n        // this value and a list of arguments ExtraArgs, the following\n        // steps are taken:\n        // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n        //   property.\n        // 2. Let boundThis be the value of F's [[BoundThis]] internal\n        //   property.\n        // 3. Let target be the value of F's [[TargetFunction]] internal\n        //   property.\n        // 4. Let args be a new list containing the same values as the\n        //   list boundArgs in the same order followed by the same\n        //   values as the list ExtraArgs in the same order.\n        // 5. Return the result of calling the [[Call]] internal method\n        //   of target providing boundThis as the this value and\n        //   providing args as the arguments.\n        // equiv: target.call(this, ...boundArgs, ...args)\n        return target.apply(that, args.concat(array_slice.call(arguments)));\n      }\n    }; // 15. If the [[Class]] internal property of Target is \"Function\", then\n    //     a. Let L be the length property of Target minus the length of A.\n    //     b. Set the length own property of F to either 0 or L, whichever is\n    //       larger.\n    // 16. Else set the length own property of F to 0.\n\n\n    var boundLength = Math.max(0, target.length - args.length); // 17. Set the attributes of the length own property of F to the values\n    //   specified in 15.3.5.1.\n\n    var boundArgs = [];\n\n    for (var i = 0; i < boundLength; i++) {\n      boundArgs.push('$' + i);\n    } // XXX Build a dynamic function with desired amount of arguments is the only\n    // way to set the length property of a function.\n    // In environments where Content Security Policies enabled (Chrome extensions,\n    // for ex.) all use of eval or Function costructor throws an exception.\n    // However in all of these environments Function.prototype.bind exists\n    // and so this code will never be executed.\n\n\n    var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n    if (target.prototype) {\n      Empty.prototype = target.prototype;\n      bound.prototype = new Empty(); // Clean up dangling references.\n\n      Empty.prototype = null;\n    } // TODO\n    // 18. Set the [[Extensible]] internal property of F to true.\n    // TODO\n    // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n    // 20. Call the [[DefineOwnProperty]] internal method of F with\n    //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n    //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n    //   false.\n    // 21. Call the [[DefineOwnProperty]] internal method of F with\n    //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n    //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n    //   and false.\n    // TODO\n    // NOTE Function objects created using Function.prototype.bind do not\n    // have a prototype property or the [[Code]], [[FormalParameters]], and\n    // [[Scope]] internal properties.\n    // XXX can't delete prototype in pure-js.\n    // 22. Return F.\n\n\n    return bound;\n  }\n}); //\n// Array\n// =====\n//\n// ES5 15.4.3.2\n// http://es5.github.com/#x15.4.3.2\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\n\ndefineProperties(Array, {\n  isArray: isArray\n});\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\n\nvar properlyBoxesContext = function properlyBoxed(method) {\n  // Check node 0.6.21 bug where third parameter is not boxed\n  var properlyBoxesNonStrict = true;\n  var properlyBoxesStrict = true;\n\n  if (method) {\n    method.call('foo', function (_, __, context) {\n      if (_typeof(context) !== 'object') {\n        properlyBoxesNonStrict = false;\n      }\n    });\n    method.call([1], function () {\n      'use strict';\n\n      properlyBoxesStrict = typeof this === 'string';\n    }, 'x');\n  }\n\n  return !!method && properlyBoxesNonStrict && properlyBoxesStrict;\n};\n\ndefineProperties(ArrayPrototype, {\n  forEach: function forEach(fun\n  /*, thisp*/\n  ) {\n    var object = toObject(this),\n        self = splitString && isString(this) ? this.split('') : object,\n        thisp = arguments[1],\n        i = -1,\n        length = self.length >>> 0; // If no callback function or if callback is not a callable function\n\n    if (!isFunction(fun)) {\n      throw new TypeError(); // TODO message\n    }\n\n    while (++i < length) {\n      if (i in self) {\n        // Invoke the callback function with call, passing arguments:\n        // context, property value, property key, thisArg object\n        // context\n        fun.call(thisp, self[i], i, object);\n      }\n    }\n  }\n}, !properlyBoxesContext(ArrayPrototype.forEach)); // ES5 15.4.4.14\n// http://es5.github.com/#x15.4.4.14\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\n\nvar hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\ndefineProperties(ArrayPrototype, {\n  indexOf: function indexOf(sought\n  /*, fromIndex */\n  ) {\n    var self = splitString && isString(this) ? this.split('') : toObject(this),\n        length = self.length >>> 0;\n\n    if (!length) {\n      return -1;\n    }\n\n    var i = 0;\n\n    if (arguments.length > 1) {\n      i = toInteger(arguments[1]);\n    } // handle negative indices\n\n\n    i = i >= 0 ? i : Math.max(0, length + i);\n\n    for (; i < length; i++) {\n      if (i in self && self[i] === sought) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n}, hasFirefox2IndexOfBug); //\n// String\n// ======\n//\n// ES5 15.5.4.14\n// http://es5.github.com/#x15.5.4.14\n// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\n// Many browsers do not split properly with regular expressions or they\n// do not perform the split correctly under obscure conditions.\n// See http://blog.stevenlevithan.com/archives/cross-browser-split\n// I've tested in many browsers and this seems to cover the deviant ones:\n//    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\n//    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\n//    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\n//       [undefined, \"t\", undefined, \"e\", ...]\n//    ''.split(/.?/) should be [], not [\"\"]\n//    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\n\nvar string_split = StringPrototype.split;\n\nif ('ab'.split(/(?:ab)*/).length !== 2 || '.'.split(/(.?)(.?)/).length !== 4 || 'tesst'.split(/(s)*/)[1] === 't' || 'test'.split(/(?:)/, -1).length !== 4 || ''.split(/.?/).length || '.'.split(/()()/).length > 1) {\n  (function () {\n    var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group\n\n    StringPrototype.split = function (separator, limit) {\n      var string = this;\n\n      if (separator === void 0 && limit === 0) {\n        return [];\n      } // If `separator` is not a regex, use native split\n\n\n      if (_toString.call(separator) !== '[object RegExp]') {\n        return string_split.call(this, separator, limit);\n      }\n\n      var output = [],\n          flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.extended ? 'x' : '') + ( // Proposed for ES6\n      separator.sticky ? 'y' : ''),\n          // Firefox 3+\n      lastLastIndex = 0,\n          // Make `global` and avoid `lastIndex` issues by working with a copy\n      separator2,\n          match,\n          lastIndex,\n          lastLength;\n      separator = new RegExp(separator.source, flags + 'g');\n      string += ''; // Type-convert\n\n      if (!compliantExecNpcg) {\n        // Doesn't need flags gy, but they don't hurt\n        separator2 = new RegExp('^' + separator.source + '$(?!\\\\s)', flags);\n      }\n      /* Values for `limit`, per the spec:\n       * If undefined: 4294967295 // Math.pow(2, 32) - 1\n       * If 0, Infinity, or NaN: 0\n       * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n       * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n       * If other: Type-convert, then use the above rules\n       */\n\n\n      limit = limit === void 0 ? -1 >>> 0 : // Math.pow(2, 32) - 1\n      ToUint32(limit);\n\n      while (match = separator.exec(string)) {\n        // `separator.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0].length;\n\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index)); // Fix browsers whose `exec` methods don't consistently return `undefined` for\n          // nonparticipating capturing groups\n\n          if (!compliantExecNpcg && match.length > 1) {\n            match[0].replace(separator2, function () {\n              for (var i = 1; i < arguments.length - 2; i++) {\n                if (arguments[i] === void 0) {\n                  match[i] = void 0;\n                }\n              }\n            });\n          }\n\n          if (match.length > 1 && match.index < string.length) {\n            ArrayPrototype.push.apply(output, match.slice(1));\n          }\n\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n\n          if (output.length >= limit) {\n            break;\n          }\n        }\n\n        if (separator.lastIndex === match.index) {\n          separator.lastIndex++; // Avoid an infinite loop\n        }\n      }\n\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separator.test('')) {\n          output.push('');\n        }\n      } else {\n        output.push(string.slice(lastLastIndex));\n      }\n\n      return output.length > limit ? output.slice(0, limit) : output;\n    };\n  })(); // [bugfix, chrome]\n  // If separator is undefined, then the result array contains just one String,\n  // which is the this value (converted to a String). If limit is not undefined,\n  // then the output array is truncated so that it contains no more than limit\n  // elements.\n  // \"0\".split(undefined, 0) -> []\n\n} else if ('0'.split(void 0, 0).length) {\n  StringPrototype.split = function split(separator, limit) {\n    if (separator === void 0 && limit === 0) {\n      return [];\n    }\n\n    return string_split.call(this, separator, limit);\n  };\n} // ECMA-262, 3rd B.2.3\n// Not an ECMAScript standard, although ECMAScript 3rd Edition has a\n// non-normative section suggesting uniform semantics and it should be\n// normalized across all browsers\n// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\n\n\nvar string_substr = StringPrototype.substr;\nvar hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\ndefineProperties(StringPrototype, {\n  substr: function substr(start, length) {\n    return string_substr.call(this, start < 0 ? (start = this.length + start) < 0 ? 0 : start : start, length);\n  }\n}, hasNegativeSubstrBug);\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/shims.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport-list.js":
/*!**********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport-list.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = [// streaming transports\n__webpack_require__(/*! ./transport/websocket */ \"./node_modules/sockjs-client/lib/transport/websocket.js\"), __webpack_require__(/*! ./transport/xhr-streaming */ \"./node_modules/sockjs-client/lib/transport/xhr-streaming.js\"), __webpack_require__(/*! ./transport/xdr-streaming */ \"./node_modules/sockjs-client/lib/transport/xdr-streaming.js\"), __webpack_require__(/*! ./transport/eventsource */ \"./node_modules/sockjs-client/lib/transport/eventsource.js\"), __webpack_require__(/*! ./transport/lib/iframe-wrap */ \"./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js\")(__webpack_require__(/*! ./transport/eventsource */ \"./node_modules/sockjs-client/lib/transport/eventsource.js\")) // polling transports\n, __webpack_require__(/*! ./transport/htmlfile */ \"./node_modules/sockjs-client/lib/transport/htmlfile.js\"), __webpack_require__(/*! ./transport/lib/iframe-wrap */ \"./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js\")(__webpack_require__(/*! ./transport/htmlfile */ \"./node_modules/sockjs-client/lib/transport/htmlfile.js\")), __webpack_require__(/*! ./transport/xhr-polling */ \"./node_modules/sockjs-client/lib/transport/xhr-polling.js\"), __webpack_require__(/*! ./transport/xdr-polling */ \"./node_modules/sockjs-client/lib/transport/xdr-polling.js\"), __webpack_require__(/*! ./transport/lib/iframe-wrap */ \"./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js\")(__webpack_require__(/*! ./transport/xhr-polling */ \"./node_modules/sockjs-client/lib/transport/xhr-polling.js\")), __webpack_require__(/*! ./transport/jsonp-polling */ \"./node_modules/sockjs-client/lib/transport/jsonp-polling.js\")];\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport-list.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    utils = __webpack_require__(/*! ../../utils/event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    urlUtils = __webpack_require__(/*! ../../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    XHR = global.XMLHttpRequest;\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:browser:xhr');\n}\n\nfunction AbstractXHRObject(method, url, payload, opts) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n  setTimeout(function () {\n    self._start(method, url, payload, opts);\n  }, 0);\n}\n\ninherits(AbstractXHRObject, EventEmitter);\n\nAbstractXHRObject.prototype._start = function (method, url, payload, opts) {\n  var self = this;\n\n  try {\n    this.xhr = new XHR();\n  } catch (x) {// intentionally empty\n  }\n\n  if (!this.xhr) {\n    debug('no xhr');\n    this.emit('finish', 0, 'no xhr support');\n\n    this._cleanup();\n\n    return;\n  } // several browsers cache POSTs\n\n\n  url = urlUtils.addQuery(url, 't=' + +new Date()); // Explorer tends to keep connection open, even after the\n  // tab gets closed: http://bugs.jquery.com/ticket/5280\n\n  this.unloadRef = utils.unloadAdd(function () {\n    debug('unload cleanup');\n\n    self._cleanup(true);\n  });\n\n  try {\n    this.xhr.open(method, url, true);\n\n    if (this.timeout && 'timeout' in this.xhr) {\n      this.xhr.timeout = this.timeout;\n\n      this.xhr.ontimeout = function () {\n        debug('xhr timeout');\n        self.emit('finish', 0, '');\n\n        self._cleanup(false);\n      };\n    }\n  } catch (e) {\n    debug('exception', e); // IE raises an exception on wrong port.\n\n    this.emit('finish', 0, '');\n\n    this._cleanup(false);\n\n    return;\n  }\n\n  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\n    debug('withCredentials'); // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :\n    // \"This never affects same-site requests.\"\n\n    this.xhr.withCredentials = true;\n  }\n\n  if (opts && opts.headers) {\n    for (var key in opts.headers) {\n      this.xhr.setRequestHeader(key, opts.headers[key]);\n    }\n  }\n\n  this.xhr.onreadystatechange = function () {\n    if (self.xhr) {\n      var x = self.xhr;\n      var text, status;\n      debug('readyState', x.readyState);\n\n      switch (x.readyState) {\n        case 3:\n          // IE doesn't like peeking into responseText or status\n          // on Microsoft.XMLHTTP and readystate=3\n          try {\n            status = x.status;\n            text = x.responseText;\n          } catch (e) {// intentionally empty\n          }\n\n          debug('status', status); // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n\n          if (status === 1223) {\n            status = 204;\n          } // IE does return readystate == 3 for 404 answers.\n\n\n          if (status === 200 && text && text.length > 0) {\n            debug('chunk');\n            self.emit('chunk', status, text);\n          }\n\n          break;\n\n        case 4:\n          status = x.status;\n          debug('status', status); // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n\n          if (status === 1223) {\n            status = 204;\n          } // IE returns this for a bad port\n          // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\n\n\n          if (status === 12005 || status === 12029) {\n            status = 0;\n          }\n\n          debug('finish', status, x.responseText);\n          self.emit('finish', status, x.responseText);\n\n          self._cleanup(false);\n\n          break;\n      }\n    }\n  };\n\n  try {\n    self.xhr.send(payload);\n  } catch (e) {\n    self.emit('finish', 0, '');\n\n    self._cleanup(false);\n  }\n};\n\nAbstractXHRObject.prototype._cleanup = function (abort) {\n  debug('cleanup');\n\n  if (!this.xhr) {\n    return;\n  }\n\n  this.removeAllListeners();\n  utils.unloadDel(this.unloadRef); // IE needs this field to be a function\n\n  this.xhr.onreadystatechange = function () {};\n\n  if (this.xhr.ontimeout) {\n    this.xhr.ontimeout = null;\n  }\n\n  if (abort) {\n    try {\n      this.xhr.abort();\n    } catch (x) {// intentionally empty\n    }\n  }\n\n  this.unloadRef = this.xhr = null;\n};\n\nAbstractXHRObject.prototype.close = function () {\n  debug('close');\n\n  this._cleanup(true);\n};\n\nAbstractXHRObject.enabled = !!XHR; // override XMLHttpRequest for IE6/7\n// obfuscate to avoid firewalls\n\nvar axo = ['Active'].concat('Object').join('X');\n\nif (!AbstractXHRObject.enabled && axo in global) {\n  debug('overriding xmlhttprequest');\n\n  XHR = function XHR() {\n    try {\n      return new global[axo]('Microsoft.XMLHTTP');\n    } catch (e) {\n      return null;\n    }\n  };\n\n  AbstractXHRObject.enabled = !!new XHR();\n}\n\nvar cors = false;\n\ntry {\n  cors = 'withCredentials' in new XHR();\n} catch (ignored) {// intentionally empty\n}\n\nAbstractXHRObject.supportsCORS = cors;\nmodule.exports = AbstractXHRObject;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/eventsource.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {module.exports = global.EventSource;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/browser/eventsource.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/websocket.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/websocket.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar Driver = global.WebSocket || global.MozWebSocket;\n\nif (Driver) {\n  module.exports = function WebSocketBrowserDriver(url) {\n    return new Driver(url);\n  };\n} else {\n  module.exports = undefined;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/browser/websocket.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/eventsource.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/eventsource.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ \"./node_modules/sockjs-client/lib/transport/lib/ajax-based.js\"),\n    EventSourceReceiver = __webpack_require__(/*! ./receiver/eventsource */ \"./node_modules/sockjs-client/lib/transport/receiver/eventsource.js\"),\n    XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js\"),\n    EventSourceDriver = __webpack_require__(/*! eventsource */ \"./node_modules/sockjs-client/lib/transport/browser/eventsource.js\");\n\nfunction EventSourceTransport(transUrl) {\n  if (!EventSourceTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);\n}\n\ninherits(EventSourceTransport, AjaxBasedTransport);\n\nEventSourceTransport.enabled = function () {\n  return !!EventSourceDriver;\n};\n\nEventSourceTransport.transportName = 'eventsource';\nEventSourceTransport.roundTrips = 2;\nmodule.exports = EventSourceTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/eventsource.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/htmlfile.js":
/*!**************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/htmlfile.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    HtmlfileReceiver = __webpack_require__(/*! ./receiver/htmlfile */ \"./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js\"),\n    XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-local.js\"),\n    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ \"./node_modules/sockjs-client/lib/transport/lib/ajax-based.js\");\n\nfunction HtmlFileTransport(transUrl) {\n  if (!HtmlfileReceiver.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);\n}\n\ninherits(HtmlFileTransport, AjaxBasedTransport);\n\nHtmlFileTransport.enabled = function (info) {\n  return HtmlfileReceiver.enabled && info.sameOrigin;\n};\n\nHtmlFileTransport.transportName = 'htmlfile';\nHtmlFileTransport.roundTrips = 2;\nmodule.exports = HtmlFileTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/htmlfile.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/iframe.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/iframe.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // Few cool transports do work only for same-origin. In order to make\n// them work cross-domain we shall use iframe, served from the\n// remote domain. New browsers have capabilities to communicate with\n// cross domain iframe using postMessage(). In IE it was implemented\n// from IE 8+, but of course, IE got some details wrong:\n//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx\n//    http://stevesouders.com/misc/test-postmessage.php\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    version = __webpack_require__(/*! ../version */ \"./node_modules/sockjs-client/lib/version.js\"),\n    urlUtils = __webpack_require__(/*! ../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    iframeUtils = __webpack_require__(/*! ../utils/iframe */ \"./node_modules/sockjs-client/lib/utils/iframe.js\"),\n    eventUtils = __webpack_require__(/*! ../utils/event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    random = __webpack_require__(/*! ../utils/random */ \"./node_modules/sockjs-client/lib/utils/random.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:transport:iframe');\n}\n\nfunction IframeTransport(transport, transUrl, baseUrl) {\n  if (!IframeTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  EventEmitter.call(this);\n  var self = this;\n  this.origin = urlUtils.getOrigin(baseUrl);\n  this.baseUrl = baseUrl;\n  this.transUrl = transUrl;\n  this.transport = transport;\n  this.windowId = random.string(8);\n  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;\n  debug(transport, transUrl, iframeUrl);\n  this.iframeObj = iframeUtils.createIframe(iframeUrl, function (r) {\n    debug('err callback');\n    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');\n    self.close();\n  });\n  this.onmessageCallback = this._message.bind(this);\n  eventUtils.attachEvent('message', this.onmessageCallback);\n}\n\ninherits(IframeTransport, EventEmitter);\n\nIframeTransport.prototype.close = function () {\n  debug('close');\n  this.removeAllListeners();\n\n  if (this.iframeObj) {\n    eventUtils.detachEvent('message', this.onmessageCallback);\n\n    try {\n      // When the iframe is not loaded, IE raises an exception\n      // on 'contentWindow'.\n      this.postMessage('c');\n    } catch (x) {// intentionally empty\n    }\n\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n    this.onmessageCallback = this.iframeObj = null;\n  }\n};\n\nIframeTransport.prototype._message = function (e) {\n  debug('message', e.data);\n\n  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {\n    debug('not same origin', e.origin, this.origin);\n    return;\n  }\n\n  var iframeMessage;\n\n  try {\n    iframeMessage = JSON3.parse(e.data);\n  } catch (ignored) {\n    debug('bad json', e.data);\n    return;\n  }\n\n  if (iframeMessage.windowId !== this.windowId) {\n    debug('mismatched window id', iframeMessage.windowId, this.windowId);\n    return;\n  }\n\n  switch (iframeMessage.type) {\n    case 's':\n      this.iframeObj.loaded(); // window global dependency\n\n      this.postMessage('s', JSON3.stringify([version, this.transport, this.transUrl, this.baseUrl]));\n      break;\n\n    case 't':\n      this.emit('message', iframeMessage.data);\n      break;\n\n    case 'c':\n      var cdata;\n\n      try {\n        cdata = JSON3.parse(iframeMessage.data);\n      } catch (ignored) {\n        debug('bad json', iframeMessage.data);\n        return;\n      }\n\n      this.emit('close', cdata[0], cdata[1]);\n      this.close();\n      break;\n  }\n};\n\nIframeTransport.prototype.postMessage = function (type, data) {\n  debug('postMessage', type, data);\n  this.iframeObj.post(JSON3.stringify({\n    windowId: this.windowId,\n    type: type,\n    data: data || ''\n  }), this.origin);\n};\n\nIframeTransport.prototype.send = function (message) {\n  debug('send', message);\n  this.postMessage('m', message);\n};\n\nIframeTransport.enabled = function () {\n  return iframeUtils.iframeEnabled;\n};\n\nIframeTransport.transportName = 'iframe';\nIframeTransport.roundTrips = 2;\nmodule.exports = IframeTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/iframe.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/jsonp-polling.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) { // The simplest and most robust transport, using the well-know cross\n// domain hack - JSONP. This transport is quite inefficient - one\n// message could use up to one http request. But at least it works almost\n// everywhere.\n// Known limitations:\n//   o you will get a spinning cursor\n//   o for Konqueror a dumb timer is needed to detect errors\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    SenderReceiver = __webpack_require__(/*! ./lib/sender-receiver */ \"./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js\"),\n    JsonpReceiver = __webpack_require__(/*! ./receiver/jsonp */ \"./node_modules/sockjs-client/lib/transport/receiver/jsonp.js\"),\n    jsonpSender = __webpack_require__(/*! ./sender/jsonp */ \"./node_modules/sockjs-client/lib/transport/sender/jsonp.js\");\n\nfunction JsonPTransport(transUrl) {\n  if (!JsonPTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);\n}\n\ninherits(JsonPTransport, SenderReceiver);\n\nJsonPTransport.enabled = function () {\n  return !!global.document;\n};\n\nJsonPTransport.transportName = 'jsonp-polling';\nJsonPTransport.roundTrips = 1;\nJsonPTransport.needBody = true;\nmodule.exports = JsonPTransport;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/jsonp-polling.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/ajax-based.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    urlUtils = __webpack_require__(/*! ../../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    SenderReceiver = __webpack_require__(/*! ./sender-receiver */ \"./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:ajax-based');\n}\n\nfunction createAjaxSender(AjaxObject) {\n  return function (url, payload, callback) {\n    debug('create ajax sender', url, payload);\n    var opt = {};\n\n    if (typeof payload === 'string') {\n      opt.headers = {\n        'Content-type': 'text/plain'\n      };\n    }\n\n    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');\n    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);\n    xo.once('finish', function (status) {\n      debug('finish', status);\n      xo = null;\n\n      if (status !== 200 && status !== 204) {\n        return callback(new Error('http status ' + status));\n      }\n\n      callback();\n    });\n    return function () {\n      debug('abort');\n      xo.close();\n      xo = null;\n      var err = new Error('Aborted');\n      err.code = 1000;\n      callback(err);\n    };\n  };\n}\n\nfunction AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {\n  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);\n}\n\ninherits(AjaxBasedTransport, SenderReceiver);\nmodule.exports = AjaxBasedTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/lib/ajax-based.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter;\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:buffered-sender');\n}\n\nfunction BufferedSender(url, sender) {\n  debug(url);\n  EventEmitter.call(this);\n  this.sendBuffer = [];\n  this.sender = sender;\n  this.url = url;\n}\n\ninherits(BufferedSender, EventEmitter);\n\nBufferedSender.prototype.send = function (message) {\n  debug('send', message);\n  this.sendBuffer.push(message);\n\n  if (!this.sendStop) {\n    this.sendSchedule();\n  }\n}; // For polling transports in a situation when in the message callback,\n// new message is being send. If the sending connection was started\n// before receiving one, it is possible to saturate the network and\n// timeout due to the lack of receiving socket. To avoid that we delay\n// sending messages by some small time, in order to let receiving\n// connection be started beforehand. This is only a halfmeasure and\n// does not fix the big problem, but it does make the tests go more\n// stable on slow networks.\n\n\nBufferedSender.prototype.sendScheduleWait = function () {\n  debug('sendScheduleWait');\n  var self = this;\n  var tref;\n\n  this.sendStop = function () {\n    debug('sendStop');\n    self.sendStop = null;\n    clearTimeout(tref);\n  };\n\n  tref = setTimeout(function () {\n    debug('timeout');\n    self.sendStop = null;\n    self.sendSchedule();\n  }, 25);\n};\n\nBufferedSender.prototype.sendSchedule = function () {\n  debug('sendSchedule', this.sendBuffer.length);\n  var self = this;\n\n  if (this.sendBuffer.length > 0) {\n    var payload = '[' + this.sendBuffer.join(',') + ']';\n    this.sendStop = this.sender(this.url, payload, function (err) {\n      self.sendStop = null;\n\n      if (err) {\n        debug('error', err);\n        self.emit('close', err.code || 1006, 'Sending error: ' + err);\n        self.close();\n      } else {\n        self.sendScheduleWait();\n      }\n    });\n    this.sendBuffer = [];\n  }\n};\n\nBufferedSender.prototype._cleanup = function () {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nBufferedSender.prototype.close = function () {\n  debug('close');\n\n  this._cleanup();\n\n  if (this.sendStop) {\n    this.sendStop();\n    this.sendStop = null;\n  }\n};\n\nmodule.exports = BufferedSender;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    IframeTransport = __webpack_require__(/*! ../iframe */ \"./node_modules/sockjs-client/lib/transport/iframe.js\"),\n    objectUtils = __webpack_require__(/*! ../../utils/object */ \"./node_modules/sockjs-client/lib/utils/object.js\");\n\nmodule.exports = function (transport) {\n  function IframeWrapTransport(transUrl, baseUrl) {\n    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);\n  }\n\n  inherits(IframeWrapTransport, IframeTransport);\n\n  IframeWrapTransport.enabled = function (url, info) {\n    if (!global.document) {\n      return false;\n    }\n\n    var iframeInfo = objectUtils.extend({}, info);\n    iframeInfo.sameOrigin = true;\n    return transport.enabled(iframeInfo) && IframeTransport.enabled();\n  };\n\n  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;\n  IframeWrapTransport.needBody = true;\n  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)\n\n  IframeWrapTransport.facadeTransport = transport;\n  return IframeWrapTransport;\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter;\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:polling');\n}\n\nfunction Polling(Receiver, receiveUrl, AjaxObject) {\n  debug(receiveUrl);\n  EventEmitter.call(this);\n  this.Receiver = Receiver;\n  this.receiveUrl = receiveUrl;\n  this.AjaxObject = AjaxObject;\n\n  this._scheduleReceiver();\n}\n\ninherits(Polling, EventEmitter);\n\nPolling.prototype._scheduleReceiver = function () {\n  debug('_scheduleReceiver');\n  var self = this;\n  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);\n  poll.on('message', function (msg) {\n    debug('message', msg);\n    self.emit('message', msg);\n  });\n  poll.once('close', function (code, reason) {\n    debug('close', code, reason, self.pollIsClosing);\n    self.poll = poll = null;\n\n    if (!self.pollIsClosing) {\n      if (reason === 'network') {\n        self._scheduleReceiver();\n      } else {\n        self.emit('close', code || 1006, reason);\n        self.removeAllListeners();\n      }\n    }\n  });\n};\n\nPolling.prototype.abort = function () {\n  debug('abort');\n  this.removeAllListeners();\n  this.pollIsClosing = true;\n\n  if (this.poll) {\n    this.poll.abort();\n  }\n};\n\nmodule.exports = Polling;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/lib/polling.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    urlUtils = __webpack_require__(/*! ../../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    BufferedSender = __webpack_require__(/*! ./buffered-sender */ \"./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js\"),\n    Polling = __webpack_require__(/*! ./polling */ \"./node_modules/sockjs-client/lib/transport/lib/polling.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:sender-receiver');\n}\n\nfunction SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {\n  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);\n  debug(pollUrl);\n  var self = this;\n  BufferedSender.call(this, transUrl, senderFunc);\n  this.poll = new Polling(Receiver, pollUrl, AjaxObject);\n  this.poll.on('message', function (msg) {\n    debug('poll message', msg);\n    self.emit('message', msg);\n  });\n  this.poll.once('close', function (code, reason) {\n    debug('poll close', code, reason);\n    self.poll = null;\n    self.emit('close', code, reason);\n    self.close();\n  });\n}\n\ninherits(SenderReceiver, BufferedSender);\n\nSenderReceiver.prototype.close = function () {\n  BufferedSender.prototype.close.call(this);\n  debug('close');\n  this.removeAllListeners();\n\n  if (this.poll) {\n    this.poll.abort();\n    this.poll = null;\n  }\n};\n\nmodule.exports = SenderReceiver;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/eventsource.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    EventSourceDriver = __webpack_require__(/*! eventsource */ \"./node_modules/sockjs-client/lib/transport/browser/eventsource.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:receiver:eventsource');\n}\n\nfunction EventSourceReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n  var es = this.es = new EventSourceDriver(url);\n\n  es.onmessage = function (e) {\n    debug('message', e.data);\n    self.emit('message', decodeURI(e.data));\n  };\n\n  es.onerror = function (e) {\n    debug('error', es.readyState, e); // ES on reconnection has readyState = 0 or 1.\n    // on network error it's CLOSED = 2\n\n    var reason = es.readyState !== 2 ? 'network' : 'permanent';\n\n    self._cleanup();\n\n    self._close(reason);\n  };\n}\n\ninherits(EventSourceReceiver, EventEmitter);\n\nEventSourceReceiver.prototype.abort = function () {\n  debug('abort');\n\n  this._cleanup();\n\n  this._close('user');\n};\n\nEventSourceReceiver.prototype._cleanup = function () {\n  debug('cleanup');\n  var es = this.es;\n\n  if (es) {\n    es.onmessage = es.onerror = null;\n    es.close();\n    this.es = null;\n  }\n};\n\nEventSourceReceiver.prototype._close = function (reason) {\n  debug('close', reason);\n  var self = this; // Safari and chrome < 15 crash if we close window before\n  // waiting for ES cleanup. See:\n  // https://code.google.com/p/chromium/issues/detail?id=89155\n\n  setTimeout(function () {\n    self.emit('close', null, reason);\n    self.removeAllListeners();\n  }, 200);\n};\n\nmodule.exports = EventSourceReceiver;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/receiver/eventsource.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    iframeUtils = __webpack_require__(/*! ../../utils/iframe */ \"./node_modules/sockjs-client/lib/utils/iframe.js\"),\n    urlUtils = __webpack_require__(/*! ../../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    random = __webpack_require__(/*! ../../utils/random */ \"./node_modules/sockjs-client/lib/utils/random.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:receiver:htmlfile');\n}\n\nfunction HtmlfileReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n  iframeUtils.polluteGlobalNamespace();\n  this.id = 'a' + random.string(6);\n  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));\n  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);\n  var constructFunc = HtmlfileReceiver.htmlfileEnabled ? iframeUtils.createHtmlfile : iframeUtils.createIframe;\n  global[iframeUtils.WPrefix][this.id] = {\n    start: function start() {\n      debug('start');\n      self.iframeObj.loaded();\n    },\n    message: function message(data) {\n      debug('message', data);\n      self.emit('message', data);\n    },\n    stop: function stop() {\n      debug('stop');\n\n      self._cleanup();\n\n      self._close('network');\n    }\n  };\n  this.iframeObj = constructFunc(url, function () {\n    debug('callback');\n\n    self._cleanup();\n\n    self._close('permanent');\n  });\n}\n\ninherits(HtmlfileReceiver, EventEmitter);\n\nHtmlfileReceiver.prototype.abort = function () {\n  debug('abort');\n\n  this._cleanup();\n\n  this._close('user');\n};\n\nHtmlfileReceiver.prototype._cleanup = function () {\n  debug('_cleanup');\n\n  if (this.iframeObj) {\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n  }\n\n  delete global[iframeUtils.WPrefix][this.id];\n};\n\nHtmlfileReceiver.prototype._close = function (reason) {\n  debug('_close', reason);\n  this.emit('close', null, reason);\n  this.removeAllListeners();\n};\n\nHtmlfileReceiver.htmlfileEnabled = false; // obfuscate to avoid firewalls\n\nvar axo = ['Active'].concat('Object').join('X');\n\nif (axo in global) {\n  try {\n    HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');\n  } catch (x) {// intentionally empty\n  }\n}\n\nHtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;\nmodule.exports = HtmlfileReceiver;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/jsonp.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar utils = __webpack_require__(/*! ../../utils/iframe */ \"./node_modules/sockjs-client/lib/utils/iframe.js\"),\n    random = __webpack_require__(/*! ../../utils/random */ \"./node_modules/sockjs-client/lib/utils/random.js\"),\n    browser = __webpack_require__(/*! ../../utils/browser */ \"./node_modules/sockjs-client/lib/utils/browser.js\"),\n    urlUtils = __webpack_require__(/*! ../../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter;\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:receiver:jsonp');\n}\n\nfunction JsonpReceiver(url) {\n  debug(url);\n  var self = this;\n  EventEmitter.call(this);\n  utils.polluteGlobalNamespace();\n  this.id = 'a' + random.string(6);\n  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));\n  global[utils.WPrefix][this.id] = this._callback.bind(this);\n\n  this._createScript(urlWithId); // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.\n\n\n  this.timeoutId = setTimeout(function () {\n    debug('timeout');\n\n    self._abort(new Error('JSONP script loaded abnormally (timeout)'));\n  }, JsonpReceiver.timeout);\n}\n\ninherits(JsonpReceiver, EventEmitter);\n\nJsonpReceiver.prototype.abort = function () {\n  debug('abort');\n\n  if (global[utils.WPrefix][this.id]) {\n    var err = new Error('JSONP user aborted read');\n    err.code = 1000;\n\n    this._abort(err);\n  }\n};\n\nJsonpReceiver.timeout = 35000;\nJsonpReceiver.scriptErrorTimeout = 1000;\n\nJsonpReceiver.prototype._callback = function (data) {\n  debug('_callback', data);\n\n  this._cleanup();\n\n  if (this.aborting) {\n    return;\n  }\n\n  if (data) {\n    debug('message', data);\n    this.emit('message', data);\n  }\n\n  this.emit('close', null, 'network');\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._abort = function (err) {\n  debug('_abort', err);\n\n  this._cleanup();\n\n  this.aborting = true;\n  this.emit('close', err.code, err.message);\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._cleanup = function () {\n  debug('_cleanup');\n  clearTimeout(this.timeoutId);\n\n  if (this.script2) {\n    this.script2.parentNode.removeChild(this.script2);\n    this.script2 = null;\n  }\n\n  if (this.script) {\n    var script = this.script; // Unfortunately, you can't really abort script loading of\n    // the script.\n\n    script.parentNode.removeChild(script);\n    script.onreadystatechange = script.onerror = script.onload = script.onclick = null;\n    this.script = null;\n  }\n\n  delete global[utils.WPrefix][this.id];\n};\n\nJsonpReceiver.prototype._scriptError = function () {\n  debug('_scriptError');\n  var self = this;\n\n  if (this.errorTimer) {\n    return;\n  }\n\n  this.errorTimer = setTimeout(function () {\n    if (!self.loadedOkay) {\n      self._abort(new Error('JSONP script loaded abnormally (onerror)'));\n    }\n  }, JsonpReceiver.scriptErrorTimeout);\n};\n\nJsonpReceiver.prototype._createScript = function (url) {\n  debug('_createScript', url);\n  var self = this;\n  var script = this.script = global.document.createElement('script');\n  var script2; // Opera synchronous load trick.\n\n  script.id = 'a' + random.string(8);\n  script.src = url;\n  script.type = 'text/javascript';\n  script.charset = 'UTF-8';\n  script.onerror = this._scriptError.bind(this);\n\n  script.onload = function () {\n    debug('onload');\n\n    self._abort(new Error('JSONP script loaded abnormally (onload)'));\n  }; // IE9 fires 'error' event after onreadystatechange or before, in random order.\n  // Use loadedOkay to determine if actually errored\n\n\n  script.onreadystatechange = function () {\n    debug('onreadystatechange', script.readyState);\n\n    if (/loaded|closed/.test(script.readyState)) {\n      if (script && script.htmlFor && script.onclick) {\n        self.loadedOkay = true;\n\n        try {\n          // In IE, actually execute the script.\n          script.onclick();\n        } catch (x) {// intentionally empty\n        }\n      }\n\n      if (script) {\n        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));\n      }\n    }\n  }; // IE: event/htmlFor/onclick trick.\n  // One can't rely on proper order for onreadystatechange. In order to\n  // make sure, set a 'htmlFor' and 'event' properties, so that\n  // script code will be installed as 'onclick' handler for the\n  // script object. Later, onreadystatechange, manually execute this\n  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'\n  // set. For reference see:\n  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n  // Also, read on that about script ordering:\n  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\n\n\n  if (typeof script.async === 'undefined' && global.document.attachEvent) {\n    // According to mozilla docs, in recent browsers script.async defaults\n    // to 'true', so we may use it to detect a good browser:\n    // https://developer.mozilla.org/en/HTML/Element/script\n    if (!browser.isOpera()) {\n      // Naively assume we're in IE\n      try {\n        script.htmlFor = script.id;\n        script.event = 'onclick';\n      } catch (x) {// intentionally empty\n      }\n\n      script.async = true;\n    } else {\n      // Opera, second sync script hack\n      script2 = this.script2 = global.document.createElement('script');\n      script2.text = \"try{var a = document.getElementById('\" + script.id + \"'); if(a)a.onerror();}catch(x){};\";\n      script.async = script2.async = false;\n    }\n  }\n\n  if (typeof script.async !== 'undefined') {\n    script.async = true;\n  }\n\n  var head = global.document.getElementsByTagName('head')[0];\n  head.insertBefore(script, head.firstChild);\n\n  if (script2) {\n    head.insertBefore(script2, head.firstChild);\n  }\n};\n\nmodule.exports = JsonpReceiver;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/receiver/jsonp.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/xhr.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter;\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:receiver:xhr');\n}\n\nfunction XhrReceiver(url, AjaxObject) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n  this.bufferPosition = 0;\n  this.xo = new AjaxObject('POST', url, null);\n  this.xo.on('chunk', this._chunkHandler.bind(this));\n  this.xo.once('finish', function (status, text) {\n    debug('finish', status, text);\n\n    self._chunkHandler(status, text);\n\n    self.xo = null;\n    var reason = status === 200 ? 'network' : 'permanent';\n    debug('close', reason);\n    self.emit('close', null, reason);\n\n    self._cleanup();\n  });\n}\n\ninherits(XhrReceiver, EventEmitter);\n\nXhrReceiver.prototype._chunkHandler = function (status, text) {\n  debug('_chunkHandler', status);\n\n  if (status !== 200 || !text) {\n    return;\n  }\n\n  for (var idx = -1;; this.bufferPosition += idx + 1) {\n    var buf = text.slice(this.bufferPosition);\n    idx = buf.indexOf('\\n');\n\n    if (idx === -1) {\n      break;\n    }\n\n    var msg = buf.slice(0, idx);\n\n    if (msg) {\n      debug('message', msg);\n      this.emit('message', msg);\n    }\n  }\n};\n\nXhrReceiver.prototype._cleanup = function () {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nXhrReceiver.prototype.abort = function () {\n  debug('abort');\n\n  if (this.xo) {\n    this.xo.close();\n    debug('close');\n    this.emit('close', null, 'user');\n    this.xo = null;\n  }\n\n  this._cleanup();\n};\n\nmodule.exports = XhrReceiver;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/receiver/xhr.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/jsonp.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar random = __webpack_require__(/*! ../../utils/random */ \"./node_modules/sockjs-client/lib/utils/random.js\"),\n    urlUtils = __webpack_require__(/*! ../../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:sender:jsonp');\n}\n\nvar form, area;\n\nfunction createIframe(id) {\n  debug('createIframe', id);\n\n  try {\n    // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n    return global.document.createElement('<iframe name=\"' + id + '\">');\n  } catch (x) {\n    var iframe = global.document.createElement('iframe');\n    iframe.name = id;\n    return iframe;\n  }\n}\n\nfunction createForm() {\n  debug('createForm');\n  form = global.document.createElement('form');\n  form.style.display = 'none';\n  form.style.position = 'absolute';\n  form.method = 'POST';\n  form.enctype = 'application/x-www-form-urlencoded';\n  form.acceptCharset = 'UTF-8';\n  area = global.document.createElement('textarea');\n  area.name = 'd';\n  form.appendChild(area);\n  global.document.body.appendChild(form);\n}\n\nmodule.exports = function (url, payload, callback) {\n  debug(url, payload);\n\n  if (!form) {\n    createForm();\n  }\n\n  var id = 'a' + random.string(8);\n  form.target = id;\n  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\n  var iframe = createIframe(id);\n  iframe.id = id;\n  iframe.style.display = 'none';\n  form.appendChild(iframe);\n\n  try {\n    area.value = payload;\n  } catch (e) {// seriously broken browsers get here\n  }\n\n  form.submit();\n\n  var completed = function completed(err) {\n    debug('completed', id, err);\n\n    if (!iframe.onerror) {\n      return;\n    }\n\n    iframe.onreadystatechange = iframe.onerror = iframe.onload = null; // Opera mini doesn't like if we GC iframe\n    // immediately, thus this timeout.\n\n    setTimeout(function () {\n      debug('cleaning up', id);\n      iframe.parentNode.removeChild(iframe);\n      iframe = null;\n    }, 500);\n    area.value = ''; // It is not possible to detect if the iframe succeeded or\n    // failed to submit our form.\n\n    callback(err);\n  };\n\n  iframe.onerror = function () {\n    debug('onerror', id);\n    completed();\n  };\n\n  iframe.onload = function () {\n    debug('onload', id);\n    completed();\n  };\n\n  iframe.onreadystatechange = function (e) {\n    debug('onreadystatechange', id, iframe.readyState, e);\n\n    if (iframe.readyState === 'complete') {\n      completed();\n    }\n  };\n\n  return function () {\n    debug('aborted', id);\n    completed(new Error('Aborted'));\n  };\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/sender/jsonp.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xdr.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xdr.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    eventUtils = __webpack_require__(/*! ../../utils/event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    browser = __webpack_require__(/*! ../../utils/browser */ \"./node_modules/sockjs-client/lib/utils/browser.js\"),\n    urlUtils = __webpack_require__(/*! ../../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:sender:xdr');\n} // References:\n//   http://ajaxian.com/archives/100-line-ajax-wrapper\n//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx\n\n\nfunction XDRObject(method, url, payload) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n  setTimeout(function () {\n    self._start(method, url, payload);\n  }, 0);\n}\n\ninherits(XDRObject, EventEmitter);\n\nXDRObject.prototype._start = function (method, url, payload) {\n  debug('_start');\n  var self = this;\n  var xdr = new global.XDomainRequest(); // IE caches even POSTs\n\n  url = urlUtils.addQuery(url, 't=' + +new Date());\n\n  xdr.onerror = function () {\n    debug('onerror');\n\n    self._error();\n  };\n\n  xdr.ontimeout = function () {\n    debug('ontimeout');\n\n    self._error();\n  };\n\n  xdr.onprogress = function () {\n    debug('progress', xdr.responseText);\n    self.emit('chunk', 200, xdr.responseText);\n  };\n\n  xdr.onload = function () {\n    debug('load');\n    self.emit('finish', 200, xdr.responseText);\n\n    self._cleanup(false);\n  };\n\n  this.xdr = xdr;\n  this.unloadRef = eventUtils.unloadAdd(function () {\n    self._cleanup(true);\n  });\n\n  try {\n    // Fails with AccessDenied if port number is bogus\n    this.xdr.open(method, url);\n\n    if (this.timeout) {\n      this.xdr.timeout = this.timeout;\n    }\n\n    this.xdr.send(payload);\n  } catch (x) {\n    this._error();\n  }\n};\n\nXDRObject.prototype._error = function () {\n  this.emit('finish', 0, '');\n\n  this._cleanup(false);\n};\n\nXDRObject.prototype._cleanup = function (abort) {\n  debug('cleanup', abort);\n\n  if (!this.xdr) {\n    return;\n  }\n\n  this.removeAllListeners();\n  eventUtils.unloadDel(this.unloadRef);\n  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;\n\n  if (abort) {\n    try {\n      this.xdr.abort();\n    } catch (x) {// intentionally empty\n    }\n  }\n\n  this.unloadRef = this.xdr = null;\n};\n\nXDRObject.prototype.close = function () {\n  debug('close');\n\n  this._cleanup(true);\n}; // IE 8/9 if the request target uses the same scheme - #79\n\n\nXDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());\nmodule.exports = XDRObject;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/sender/xdr.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    XhrDriver = __webpack_require__(/*! ../driver/xhr */ \"./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js\");\n\nfunction XHRCorsObject(method, url, payload, opts) {\n  XhrDriver.call(this, method, url, payload, opts);\n}\n\ninherits(XHRCorsObject, XhrDriver);\nXHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;\nmodule.exports = XHRCorsObject;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nfunction XHRFake()\n/* method, url, payload, opts */\n{\n  var self = this;\n  EventEmitter.call(this);\n  this.to = setTimeout(function () {\n    self.emit('finish', 200, '{}');\n  }, XHRFake.timeout);\n}\n\ninherits(XHRFake, EventEmitter);\n\nXHRFake.prototype.close = function () {\n  clearTimeout(this.to);\n};\n\nXHRFake.timeout = 2000;\nmodule.exports = XHRFake;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-local.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    XhrDriver = __webpack_require__(/*! ../driver/xhr */ \"./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js\");\n\nfunction XHRLocalObject(method, url, payload\n/*, opts */\n) {\n  XhrDriver.call(this, method, url, payload, {\n    noCredentials: true\n  });\n}\n\ninherits(XHRLocalObject, XhrDriver);\nXHRLocalObject.enabled = XhrDriver.enabled;\nmodule.exports = XHRLocalObject;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/sender/xhr-local.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/websocket.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/websocket.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils/event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    urlUtils = __webpack_require__(/*! ../utils/url */ \"./node_modules/sockjs-client/lib/utils/url.js\"),\n    inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    EventEmitter = __webpack_require__(/*! events */ \"./node_modules/sockjs-client/lib/event/emitter.js\").EventEmitter,\n    WebsocketDriver = __webpack_require__(/*! ./driver/websocket */ \"./node_modules/sockjs-client/lib/transport/browser/websocket.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:websocket');\n}\n\nfunction WebSocketTransport(transUrl, ignore, options) {\n  if (!WebSocketTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  EventEmitter.call(this);\n  debug('constructor', transUrl);\n  var self = this;\n  var url = urlUtils.addPath(transUrl, '/websocket');\n\n  if (url.slice(0, 5) === 'https') {\n    url = 'wss' + url.slice(5);\n  } else {\n    url = 'ws' + url.slice(4);\n  }\n\n  this.url = url;\n  this.ws = new WebsocketDriver(this.url, [], options);\n\n  this.ws.onmessage = function (e) {\n    debug('message event', e.data);\n    self.emit('message', e.data);\n  }; // Firefox has an interesting bug. If a websocket connection is\n  // created after onunload, it stays alive even when user\n  // navigates away from the page. In such situation let's lie -\n  // let's not open the ws connection at all. See:\n  // https://github.com/sockjs/sockjs-client/issues/28\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\n\n\n  this.unloadRef = utils.unloadAdd(function () {\n    debug('unload');\n    self.ws.close();\n  });\n\n  this.ws.onclose = function (e) {\n    debug('close event', e.code, e.reason);\n    self.emit('close', e.code, e.reason);\n\n    self._cleanup();\n  };\n\n  this.ws.onerror = function (e) {\n    debug('error event', e);\n    self.emit('close', 1006, 'WebSocket connection broken');\n\n    self._cleanup();\n  };\n}\n\ninherits(WebSocketTransport, EventEmitter);\n\nWebSocketTransport.prototype.send = function (data) {\n  var msg = '[' + data + ']';\n  debug('send', msg);\n  this.ws.send(msg);\n};\n\nWebSocketTransport.prototype.close = function () {\n  debug('close');\n  var ws = this.ws;\n\n  this._cleanup();\n\n  if (ws) {\n    ws.close();\n  }\n};\n\nWebSocketTransport.prototype._cleanup = function () {\n  debug('_cleanup');\n  var ws = this.ws;\n\n  if (ws) {\n    ws.onmessage = ws.onclose = ws.onerror = null;\n  }\n\n  utils.unloadDel(this.unloadRef);\n  this.unloadRef = this.ws = null;\n  this.removeAllListeners();\n};\n\nWebSocketTransport.enabled = function () {\n  debug('enabled');\n  return !!WebsocketDriver;\n};\n\nWebSocketTransport.transportName = 'websocket'; // In theory, ws should require 1 round trip. But in chrome, this is\n// not very stable over SSL. Most likely a ws connection requires a\n// separate SSL connection, in which case 2 round trips are an\n// absolute minumum.\n\nWebSocketTransport.roundTrips = 2;\nmodule.exports = WebSocketTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/websocket.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ \"./node_modules/sockjs-client/lib/transport/lib/ajax-based.js\"),\n    XdrStreamingTransport = __webpack_require__(/*! ./xdr-streaming */ \"./node_modules/sockjs-client/lib/transport/xdr-streaming.js\"),\n    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ \"./node_modules/sockjs-client/lib/transport/receiver/xhr.js\"),\n    XDRObject = __webpack_require__(/*! ./sender/xdr */ \"./node_modules/sockjs-client/lib/transport/sender/xdr.js\");\n\nfunction XdrPollingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);\n}\n\ninherits(XdrPollingTransport, AjaxBasedTransport);\nXdrPollingTransport.enabled = XdrStreamingTransport.enabled;\nXdrPollingTransport.transportName = 'xdr-polling';\nXdrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrPollingTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/xdr-polling.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-streaming.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ \"./node_modules/sockjs-client/lib/transport/lib/ajax-based.js\"),\n    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ \"./node_modules/sockjs-client/lib/transport/receiver/xhr.js\"),\n    XDRObject = __webpack_require__(/*! ./sender/xdr */ \"./node_modules/sockjs-client/lib/transport/sender/xdr.js\"); // According to:\n//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests\n//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\n\n\nfunction XdrStreamingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);\n}\n\ninherits(XdrStreamingTransport, AjaxBasedTransport);\n\nXdrStreamingTransport.enabled = function (info) {\n  if (info.cookie_needed || info.nullOrigin) {\n    return false;\n  }\n\n  return XDRObject.enabled && info.sameScheme;\n};\n\nXdrStreamingTransport.transportName = 'xdr-streaming';\nXdrStreamingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrStreamingTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/xdr-streaming.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ \"./node_modules/sockjs-client/lib/transport/lib/ajax-based.js\"),\n    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ \"./node_modules/sockjs-client/lib/transport/receiver/xhr.js\"),\n    XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js\"),\n    XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-local.js\");\n\nfunction XhrPollingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrPollingTransport, AjaxBasedTransport);\n\nXhrPollingTransport.enabled = function (info) {\n  if (info.nullOrigin) {\n    return false;\n  }\n\n  if (XHRLocalObject.enabled && info.sameOrigin) {\n    return true;\n  }\n\n  return XHRCorsObject.enabled;\n};\n\nXhrPollingTransport.transportName = 'xhr-polling';\nXhrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XhrPollingTransport;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/xhr-polling.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-streaming.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\"),\n    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ \"./node_modules/sockjs-client/lib/transport/lib/ajax-based.js\"),\n    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ \"./node_modules/sockjs-client/lib/transport/receiver/xhr.js\"),\n    XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js\"),\n    XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ \"./node_modules/sockjs-client/lib/transport/sender/xhr-local.js\"),\n    browser = __webpack_require__(/*! ../utils/browser */ \"./node_modules/sockjs-client/lib/utils/browser.js\");\n\nfunction XhrStreamingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrStreamingTransport, AjaxBasedTransport);\n\nXhrStreamingTransport.enabled = function (info) {\n  if (info.nullOrigin) {\n    return false;\n  } // Opera doesn't support xhr-streaming #60\n  // But it might be able to #92\n\n\n  if (browser.isOpera()) {\n    return false;\n  }\n\n  return XHRCorsObject.enabled;\n};\n\nXhrStreamingTransport.transportName = 'xhr-streaming';\nXhrStreamingTransport.roundTrips = 2; // preflight, ajax\n// Safari gets confused when a streaming ajax request is started\n// before onload. This causes the load indicator to spin indefinetely.\n// Only require body when used in a browser\n\nXhrStreamingTransport.needBody = !!global.document;\nmodule.exports = XhrStreamingTransport;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/transport/xhr-streaming.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser-crypto.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser-crypto.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nif (global.crypto && global.crypto.getRandomValues) {\n  module.exports.randomBytes = function (length) {\n    var bytes = new Uint8Array(length);\n    global.crypto.getRandomValues(bytes);\n    return bytes;\n  };\n} else {\n  module.exports.randomBytes = function (length) {\n    var bytes = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n\n    return bytes;\n  };\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/browser-crypto.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nmodule.exports = {\n  isOpera: function isOpera() {\n    return global.navigator && /opera/i.test(global.navigator.userAgent);\n  },\n  isKonqueror: function isKonqueror() {\n    return global.navigator && /konqueror/i.test(global.navigator.userAgent);\n  } // #187 wrap document.domain in try/catch because of WP8 from file:///\n  ,\n  hasDomain: function hasDomain() {\n    // non-browser client always has a domain\n    if (!global.document) {\n      return true;\n    }\n\n    try {\n      return !!global.document.domain;\n    } catch (e) {\n      return false;\n    }\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/browser.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/escape.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/escape.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"); // Some extra characters that Chrome gets wrong, and substitutes with\n// something else on the wire.\n// eslint-disable-next-line no-control-regex\n\n\nvar extraEscapable = /[\\x00-\\x1f\\ud800-\\udfff\\ufffe\\uffff\\u0300-\\u0333\\u033d-\\u0346\\u034a-\\u034c\\u0350-\\u0352\\u0357-\\u0358\\u035c-\\u0362\\u0374\\u037e\\u0387\\u0591-\\u05af\\u05c4\\u0610-\\u0617\\u0653-\\u0654\\u0657-\\u065b\\u065d-\\u065e\\u06df-\\u06e2\\u06eb-\\u06ec\\u0730\\u0732-\\u0733\\u0735-\\u0736\\u073a\\u073d\\u073f-\\u0741\\u0743\\u0745\\u0747\\u07eb-\\u07f1\\u0951\\u0958-\\u095f\\u09dc-\\u09dd\\u09df\\u0a33\\u0a36\\u0a59-\\u0a5b\\u0a5e\\u0b5c-\\u0b5d\\u0e38-\\u0e39\\u0f43\\u0f4d\\u0f52\\u0f57\\u0f5c\\u0f69\\u0f72-\\u0f76\\u0f78\\u0f80-\\u0f83\\u0f93\\u0f9d\\u0fa2\\u0fa7\\u0fac\\u0fb9\\u1939-\\u193a\\u1a17\\u1b6b\\u1cda-\\u1cdb\\u1dc0-\\u1dcf\\u1dfc\\u1dfe\\u1f71\\u1f73\\u1f75\\u1f77\\u1f79\\u1f7b\\u1f7d\\u1fbb\\u1fbe\\u1fc9\\u1fcb\\u1fd3\\u1fdb\\u1fe3\\u1feb\\u1fee-\\u1fef\\u1ff9\\u1ffb\\u1ffd\\u2000-\\u2001\\u20d0-\\u20d1\\u20d4-\\u20d7\\u20e7-\\u20e9\\u2126\\u212a-\\u212b\\u2329-\\u232a\\u2adc\\u302b-\\u302c\\uaab2-\\uaab3\\uf900-\\ufa0d\\ufa10\\ufa12\\ufa15-\\ufa1e\\ufa20\\ufa22\\ufa25-\\ufa26\\ufa2a-\\ufa2d\\ufa30-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufb4e\\ufff0-\\uffff]/g,\n    extraLookup; // This may be quite slow, so let's delay until user actually uses bad\n// characters.\n\nvar unrollLookup = function unrollLookup(escapable) {\n  var i;\n  var unrolled = {};\n  var c = [];\n\n  for (i = 0; i < 65536; i++) {\n    c.push(String.fromCharCode(i));\n  }\n\n  escapable.lastIndex = 0;\n  c.join('').replace(escapable, function (a) {\n    unrolled[a] = \"\\\\u\" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    return '';\n  });\n  escapable.lastIndex = 0;\n  return unrolled;\n}; // Quote string, also taking care of unicode characters that browsers\n// often break. Especially, take care of unicode surrogates:\n// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates\n\n\nmodule.exports = {\n  quote: function quote(string) {\n    var quoted = JSON3.stringify(string); // In most cases this should be very fast and good enough.\n\n    extraEscapable.lastIndex = 0;\n\n    if (!extraEscapable.test(quoted)) {\n      return quoted;\n    }\n\n    if (!extraLookup) {\n      extraLookup = unrollLookup(extraEscapable);\n    }\n\n    return quoted.replace(extraEscapable, function (a) {\n      return extraLookup[a];\n    });\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/escape.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/event.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar random = __webpack_require__(/*! ./random */ \"./node_modules/sockjs-client/lib/utils/random.js\");\n\nvar onUnload = {},\n    afterUnload = false // detect google chrome packaged apps because they don't allow the 'unload' event\n,\n    isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime;\nmodule.exports = {\n  attachEvent: function attachEvent(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.addEventListener(event, listener, false);\n    } else if (global.document && global.attachEvent) {\n      // IE quirks.\n      // According to: http://stevesouders.com/misc/test-postmessage.php\n      // the message gets delivered only to 'document', not 'window'.\n      global.document.attachEvent('on' + event, listener); // I get 'window' for ie8.\n\n      global.attachEvent('on' + event, listener);\n    }\n  },\n  detachEvent: function detachEvent(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.removeEventListener(event, listener, false);\n    } else if (global.document && global.detachEvent) {\n      global.document.detachEvent('on' + event, listener);\n      global.detachEvent('on' + event, listener);\n    }\n  },\n  unloadAdd: function unloadAdd(listener) {\n    if (isChromePackagedApp) {\n      return null;\n    }\n\n    var ref = random.string(8);\n    onUnload[ref] = listener;\n\n    if (afterUnload) {\n      setTimeout(this.triggerUnloadCallbacks, 0);\n    }\n\n    return ref;\n  },\n  unloadDel: function unloadDel(ref) {\n    if (ref in onUnload) {\n      delete onUnload[ref];\n    }\n  },\n  triggerUnloadCallbacks: function triggerUnloadCallbacks() {\n    for (var ref in onUnload) {\n      onUnload[ref]();\n      delete onUnload[ref];\n    }\n  }\n};\n\nvar unloadTriggered = function unloadTriggered() {\n  if (afterUnload) {\n    return;\n  }\n\n  afterUnload = true;\n  module.exports.triggerUnloadCallbacks();\n}; // 'unload' alone is not reliable in opera within an iframe, but we\n// can't use `beforeunload` as IE fires it on javascript: links.\n\n\nif (!isChromePackagedApp) {\n  module.exports.attachEvent('unload', unloadTriggered);\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/event.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/iframe.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/iframe.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar eventUtils = __webpack_require__(/*! ./event */ \"./node_modules/sockjs-client/lib/utils/event.js\"),\n    JSON3 = __webpack_require__(/*! json3 */ \"./node_modules/json3/lib/json3.js\"),\n    browser = __webpack_require__(/*! ./browser */ \"./node_modules/sockjs-client/lib/utils/browser.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:utils:iframe');\n}\n\nmodule.exports = {\n  WPrefix: '_jp',\n  currentWindowId: null,\n  polluteGlobalNamespace: function polluteGlobalNamespace() {\n    if (!(module.exports.WPrefix in global)) {\n      global[module.exports.WPrefix] = {};\n    }\n  },\n  postMessage: function postMessage(type, data) {\n    if (global.parent !== global) {\n      global.parent.postMessage(JSON3.stringify({\n        windowId: module.exports.currentWindowId,\n        type: type,\n        data: data || ''\n      }), '*');\n    } else {\n      debug('Cannot postMessage, no parent window.', type, data);\n    }\n  },\n  createIframe: function createIframe(iframeUrl, errorCallback) {\n    var iframe = global.document.createElement('iframe');\n    var tref, unloadRef;\n\n    var unattach = function unattach() {\n      debug('unattach');\n      clearTimeout(tref); // Explorer had problems with that.\n\n      try {\n        iframe.onload = null;\n      } catch (x) {// intentionally empty\n      }\n\n      iframe.onerror = null;\n    };\n\n    var cleanup = function cleanup() {\n      debug('cleanup');\n\n      if (iframe) {\n        unattach(); // This timeout makes chrome fire onbeforeunload event\n        // within iframe. Without the timeout it goes straight to\n        // onunload.\n\n        setTimeout(function () {\n          if (iframe) {\n            iframe.parentNode.removeChild(iframe);\n          }\n\n          iframe = null;\n        }, 0);\n        eventUtils.unloadDel(unloadRef);\n      }\n    };\n\n    var onerror = function onerror(err) {\n      debug('onerror', err);\n\n      if (iframe) {\n        cleanup();\n        errorCallback(err);\n      }\n    };\n\n    var post = function post(msg, origin) {\n      debug('post', msg, origin);\n      setTimeout(function () {\n        try {\n          // When the iframe is not loaded, IE raises an exception\n          // on 'contentWindow'.\n          if (iframe && iframe.contentWindow) {\n            iframe.contentWindow.postMessage(msg, origin);\n          }\n        } catch (x) {// intentionally empty\n        }\n      }, 0);\n    };\n\n    iframe.src = iframeUrl;\n    iframe.style.display = 'none';\n    iframe.style.position = 'absolute';\n\n    iframe.onerror = function () {\n      onerror('onerror');\n    };\n\n    iframe.onload = function () {\n      debug('onload'); // `onload` is triggered before scripts on the iframe are\n      // executed. Give it few seconds to actually load stuff.\n\n      clearTimeout(tref);\n      tref = setTimeout(function () {\n        onerror('onload timeout');\n      }, 2000);\n    };\n\n    global.document.body.appendChild(iframe);\n    tref = setTimeout(function () {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post,\n      cleanup: cleanup,\n      loaded: unattach\n    };\n  }\n  /* eslint no-undef: \"off\", new-cap: \"off\" */\n  ,\n  createHtmlfile: function createHtmlfile(iframeUrl, errorCallback) {\n    var axo = ['Active'].concat('Object').join('X');\n    var doc = new global[axo]('htmlfile');\n    var tref, unloadRef;\n    var iframe;\n\n    var unattach = function unattach() {\n      clearTimeout(tref);\n      iframe.onerror = null;\n    };\n\n    var cleanup = function cleanup() {\n      if (doc) {\n        unattach();\n        eventUtils.unloadDel(unloadRef);\n        iframe.parentNode.removeChild(iframe);\n        iframe = doc = null;\n        CollectGarbage();\n      }\n    };\n\n    var onerror = function onerror(r) {\n      debug('onerror', r);\n\n      if (doc) {\n        cleanup();\n        errorCallback(r);\n      }\n    };\n\n    var post = function post(msg, origin) {\n      try {\n        // When the iframe is not loaded, IE raises an exception\n        // on 'contentWindow'.\n        setTimeout(function () {\n          if (iframe && iframe.contentWindow) {\n            iframe.contentWindow.postMessage(msg, origin);\n          }\n        }, 0);\n      } catch (x) {// intentionally empty\n      }\n    };\n\n    doc.open();\n    doc.write('<html><s' + 'cript>' + 'document.domain=\"' + global.document.domain + '\";' + '</s' + 'cript></html>');\n    doc.close();\n    doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];\n    var c = doc.createElement('div');\n    doc.body.appendChild(c);\n    iframe = doc.createElement('iframe');\n    c.appendChild(iframe);\n    iframe.src = iframeUrl;\n\n    iframe.onerror = function () {\n      onerror('onerror');\n    };\n\n    tref = setTimeout(function () {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post,\n      cleanup: cleanup,\n      loaded: unattach\n    };\n  }\n};\nmodule.exports.iframeEnabled = false;\n\nif (global.document) {\n  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with\n  // huge delay, or not at all.\n  module.exports.iframeEnabled = (typeof global.postMessage === 'function' || _typeof(global.postMessage) === 'object') && !browser.isKonqueror();\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/iframe.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/log.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/log.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar logObject = {};\n['log', 'debug', 'warn'].forEach(function (level) {\n  var levelExists;\n\n  try {\n    levelExists = global.console && global.console[level] && global.console[level].apply;\n  } catch (e) {// do nothing\n  }\n\n  logObject[level] = levelExists ? function () {\n    return global.console[level].apply(global.console, arguments);\n  } : level === 'log' ? function () {} : logObject.log;\n});\nmodule.exports = logObject;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/log.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/object.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/object.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nmodule.exports = {\n  isObject: function isObject(obj) {\n    var type = _typeof(obj);\n\n    return type === 'function' || type === 'object' && !!obj;\n  },\n  extend: function extend(obj) {\n    if (!this.isObject(obj)) {\n      return obj;\n    }\n\n    var source, prop;\n\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n\n      for (prop in source) {\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\n          obj[prop] = source[prop];\n        }\n      }\n    }\n\n    return obj;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/object.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/random.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/random.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* global crypto:true */\n\nvar crypto = __webpack_require__(/*! crypto */ \"./node_modules/sockjs-client/lib/utils/browser-crypto.js\"); // This string has length 32, a power of 2, so the modulus doesn't introduce a\n// bias.\n\n\nvar _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';\nmodule.exports = {\n  string: function string(length) {\n    var max = _randomStringChars.length;\n    var bytes = crypto.randomBytes(length);\n    var ret = [];\n\n    for (var i = 0; i < length; i++) {\n      ret.push(_randomStringChars.substr(bytes[i] % max, 1));\n    }\n\n    return ret.join('');\n  },\n  number: function number(max) {\n    return Math.floor(Math.random() * max);\n  },\n  numberString: function numberString(max) {\n    var t = ('' + (max - 1)).length;\n    var p = new Array(t + 1).join('0');\n    return (p + this.number(max)).slice(-t);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/random.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/transport.js":
/*!***********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/transport.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:utils:transport');\n}\n\nmodule.exports = function (availableTransports) {\n  return {\n    filterToEnabled: function filterToEnabled(transportsWhitelist, info) {\n      var transports = {\n        main: [],\n        facade: []\n      };\n\n      if (!transportsWhitelist) {\n        transportsWhitelist = [];\n      } else if (typeof transportsWhitelist === 'string') {\n        transportsWhitelist = [transportsWhitelist];\n      }\n\n      availableTransports.forEach(function (trans) {\n        if (!trans) {\n          return;\n        }\n\n        if (trans.transportName === 'websocket' && info.websocket === false) {\n          debug('disabled from server', 'websocket');\n          return;\n        }\n\n        if (transportsWhitelist.length && transportsWhitelist.indexOf(trans.transportName) === -1) {\n          debug('not in whitelist', trans.transportName);\n          return;\n        }\n\n        if (trans.enabled(info)) {\n          debug('enabled', trans.transportName);\n          transports.main.push(trans);\n\n          if (trans.facadeTransport) {\n            transports.facade.push(trans.facadeTransport);\n          }\n        } else {\n          debug('disabled', trans.transportName);\n        }\n      });\n      return transports;\n    }\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/transport.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/url.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/url.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar URL = __webpack_require__(/*! url-parse */ \"./node_modules/url-parse/index.js\");\n\nvar debug = function debug() {};\n\nif (true) {\n  debug = __webpack_require__(/*! debug */ \"./node_modules/sockjs-client/node_modules/debug/src/browser.js\")('sockjs-client:utils:url');\n}\n\nmodule.exports = {\n  getOrigin: function getOrigin(url) {\n    if (!url) {\n      return null;\n    }\n\n    var p = new URL(url);\n\n    if (p.protocol === 'file:') {\n      return null;\n    }\n\n    var port = p.port;\n\n    if (!port) {\n      port = p.protocol === 'https:' ? '443' : '80';\n    }\n\n    return p.protocol + '//' + p.hostname + ':' + port;\n  },\n  isOriginEqual: function isOriginEqual(a, b) {\n    var res = this.getOrigin(a) === this.getOrigin(b);\n    debug('same', a, b, res);\n    return res;\n  },\n  isSchemeEqual: function isSchemeEqual(a, b) {\n    return a.split(':')[0] === b.split(':')[0];\n  },\n  addPath: function addPath(url, path) {\n    var qs = url.split('?');\n    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\n  },\n  addQuery: function addQuery(url, q) {\n    return url + (url.indexOf('?') === -1 ? '?' + q : '&' + q);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/utils/url.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/lib/version.js":
/*!***************************************************!*\
  !*** ./node_modules/sockjs-client/lib/version.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = '1.3.0';\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/lib/version.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/browser.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/browser.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console; // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n\n\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/sockjs-client/node_modules/debug/src/common.js\")(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/common.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/common.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n//# sourceURL=webpack:///./node_modules/sockjs-client/node_modules/debug/src/common.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/to-array/index.js":
/*!****************************************!*\
  !*** ./node_modules/to-array/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}\n\n//# sourceURL=webpack:///./node_modules/to-array/index.js?");

/***/ }),

/***/ "./node_modules/underscore/underscore.js":
/*!***********************************************!*\
  !*** ./node_modules/underscore/underscore.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//     Underscore.js 1.4.3\n//     http://underscorejs.org\n//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n(function () {\n  // Baseline setup\n  // --------------\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this; // Save the previous value of the `_` variable.\n\n  var previousUnderscore = root._; // Establish the object that gets returned to break out of a loop iteration.\n\n  var breaker = {}; // Save bytes in the minified (but not gzipped) version:\n\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype,\n      FuncProto = Function.prototype; // Create quick reference variables for speed access to core prototypes.\n\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      concat = ArrayProto.concat,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n\n  var nativeForEach = ArrayProto.forEach,\n      nativeMap = ArrayProto.map,\n      nativeReduce = ArrayProto.reduce,\n      nativeReduceRight = ArrayProto.reduceRight,\n      nativeFilter = ArrayProto.filter,\n      nativeEvery = ArrayProto.every,\n      nativeSome = ArrayProto.some,\n      nativeIndexOf = ArrayProto.indexOf,\n      nativeLastIndexOf = ArrayProto.lastIndexOf,\n      nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeBind = FuncProto.bind; // Create a safe reference to the Underscore object for use below.\n\n  var _ = function _(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  }; // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n\n\n  if (true) {\n    if ( true && module.exports) {\n      exports = module.exports = _;\n    }\n\n    exports._ = _;\n  } else {} // Current version.\n\n\n  _.VERSION = '1.4.3'; // Collection Functions\n  // --------------------\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n\n  var each = _.each = _.forEach = function (obj, iterator, context) {\n    if (obj == null) return;\n\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  }; // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n\n\n  _.map = _.collect = function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function (value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value'; // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n\n  _.reduce = _.foldl = _.inject = function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n\n    each(obj, function (value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  }; // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n\n\n  _.reduceRight = _.foldr = function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n\n    var length = obj.length;\n\n    if (length !== +length) {\n      var keys = _.keys(obj);\n\n      length = keys.length;\n    }\n\n    each(obj, function (value, index, list) {\n      index = keys ? keys[--length] : --length;\n\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  }; // Return the first value which passes a truth test. Aliased as `detect`.\n\n\n  _.find = _.detect = function (obj, iterator, context) {\n    var result;\n    any(obj, function (value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  }; // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n\n\n  _.filter = _.select = function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function (value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  }; // Return all the elements for which a truth test fails.\n\n\n  _.reject = function (obj, iterator, context) {\n    return _.filter(obj, function (value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  }; // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n\n\n  _.every = _.all = function (obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function (value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }; // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n\n\n  var any = _.some = _.any = function (obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function (value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }; // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n\n\n  _.contains = _.include = function (obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function (value) {\n      return value === target;\n    });\n  }; // Invoke a method (with arguments) on every item in a collection.\n\n\n  _.invoke = function (obj, method) {\n    var args = slice.call(arguments, 2);\n    return _.map(obj, function (value) {\n      return (_.isFunction(method) ? method : value[method]).apply(value, args);\n    });\n  }; // Convenience version of a common use case of `map`: fetching a property.\n\n\n  _.pluck = function (obj, key) {\n    return _.map(obj, function (value) {\n      return value[key];\n    });\n  }; // Convenience version of a common use case of `filter`: selecting only objects\n  // with specific `key:value` pairs.\n\n\n  _.where = function (obj, attrs) {\n    if (_.isEmpty(attrs)) return [];\n    return _.filter(obj, function (value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n\n      return true;\n    });\n  }; // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n\n\n  _.max = function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {\n      computed: -Infinity,\n      value: -Infinity\n    };\n    each(obj, function (value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {\n        value: value,\n        computed: computed\n      });\n    });\n    return result.value;\n  }; // Return the minimum element (or element-based computation).\n\n\n  _.min = function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {\n      computed: Infinity,\n      value: Infinity\n    };\n    each(obj, function (value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {\n        value: value,\n        computed: computed\n      });\n    });\n    return result.value;\n  }; // Shuffle an array.\n\n\n  _.shuffle = function (obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function (value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  }; // An internal function to generate lookup iterators.\n\n\n  var lookupIterator = function lookupIterator(value) {\n    return _.isFunction(value) ? value : function (obj) {\n      return obj[value];\n    };\n  }; // Sort the object's values by a criterion produced by an iterator.\n\n\n  _.sortBy = function (obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function (value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iterator.call(context, value, index, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  }; // An internal function used for aggregate \"group by\" operations.\n\n\n  var group = function group(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function (value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  }; // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n\n\n  _.groupBy = function (obj, value, context) {\n    return group(obj, value, context, function (result, key, value) {\n      (_.has(result, key) ? result[key] : result[key] = []).push(value);\n    });\n  }; // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n\n\n  _.countBy = function (obj, value, context) {\n    return group(obj, value, context, function (result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  }; // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n\n\n  _.sortedIndex = function (array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0,\n        high = array.length;\n\n    while (low < high) {\n      var mid = low + high >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n\n    return low;\n  }; // Safely convert anything iterable into a real, live array.\n\n\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  }; // Return the number of elements in an object.\n\n\n  _.size = function (obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  }; // Array Functions\n  // ---------------\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n\n\n  _.first = _.head = _.take = function (array, n, guard) {\n    if (array == null) return void 0;\n    return n != null && !guard ? slice.call(array, 0, n) : array[0];\n  }; // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n\n\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));\n  }; // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n\n\n  _.last = function (array, n, guard) {\n    if (array == null) return void 0;\n\n    if (n != null && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n\n\n  _.rest = _.tail = _.drop = function (array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  }; // Trim out all falsy values from an array.\n\n\n  _.compact = function (array) {\n    return _.filter(array, _.identity);\n  }; // Internal implementation of a recursive `flatten` function.\n\n\n  var flatten = function flatten(input, shallow, output) {\n    each(input, function (value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  }; // Return a completely flattened version of an array.\n\n\n  _.flatten = function (array, shallow) {\n    return flatten(array, shallow, []);\n  }; // Return a version of the array that does not contain the specified value(s).\n\n\n  _.without = function (array) {\n    return _.difference(array, slice.call(arguments, 1));\n  }; // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n\n\n  _.uniq = _.unique = function (array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function (value, index) {\n      if (isSorted ? !index || seen[seen.length - 1] !== value : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  }; // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n\n\n  _.union = function () {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  }; // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n\n\n  _.intersection = function (array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function (item) {\n      return _.every(rest, function (other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  }; // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n\n\n  _.difference = function (array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function (value) {\n      return !_.contains(rest, value);\n    });\n  }; // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n\n\n  _.zip = function () {\n    var args = slice.call(arguments);\n\n    var length = _.max(_.pluck(args, 'length'));\n\n    var results = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n\n    return results;\n  }; // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n\n\n  _.object = function (list, values) {\n    if (list == null) return {};\n    var result = {};\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n\n    return result;\n  }; // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n\n\n  _.indexOf = function (array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0,\n        l = array.length;\n\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, l + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n\n    for (; i < l; i++) {\n      if (array[i] === item) return i;\n    }\n\n    return -1;\n  }; // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n\n\n  _.lastIndexOf = function (array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n\n    var i = hasIndex ? from : array.length;\n\n    while (i--) {\n      if (array[i] === item) return i;\n    }\n\n    return -1;\n  }; // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\n\n  _.range = function (start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n\n    step = arguments[2] || 1;\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while (idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  }; // Function (ahem) Functions\n  // ------------------\n  // Reusable constructor function for prototype setting.\n\n\n  var ctor = function ctor() {}; // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Binding with arguments is also known as `curry`.\n  // Delegates to **ECMAScript 5**'s native `Function.bind` if available.\n  // We check for `func.bind` first, to fail fast when `func` is undefined.\n\n\n  _.bind = function (func, context) {\n    var args, _bound;\n\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError();\n    args = slice.call(arguments, 2);\n    return _bound = function bound() {\n      if (!(this instanceof _bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor();\n      ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    };\n  }; // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n\n\n  _.bindAll = function (obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length == 0) funcs = _.functions(obj);\n    each(funcs, function (f) {\n      obj[f] = _.bind(obj[f], obj);\n    });\n    return obj;\n  }; // Memoize an expensive function by storing its results.\n\n\n  _.memoize = function (func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function () {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);\n    };\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  _.delay = function (func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  }; // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n\n\n  _.defer = function (func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  }; // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n\n\n  _.throttle = function (func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n\n    var later = function later() {\n      previous = new Date();\n      timeout = null;\n      result = func.apply(context, args);\n    };\n\n    return function () {\n      var now = new Date();\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  }; // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n\n\n  _.debounce = function (func, wait, immediate) {\n    var timeout, result;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  }; // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n\n\n  _.once = function (func) {\n    var ran = false,\n        memo;\n    return function () {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  }; // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n\n\n  _.wrap = function (func, wrapper) {\n    return function () {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  }; // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n\n\n  _.compose = function () {\n    var funcs = arguments;\n    return function () {\n      var args = arguments;\n\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n\n      return args[0];\n    };\n  }; // Returns a function that will only be executed after being called N times.\n\n\n  _.after = function (times, func) {\n    if (times <= 0) return func();\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }; // Object Functions\n  // ----------------\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\n\n  _.keys = nativeKeys || function (obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n\n    for (var key in obj) {\n      if (_.has(obj, key)) keys[keys.length] = key;\n    }\n\n    return keys;\n  }; // Retrieve the values of an object's properties.\n\n\n  _.values = function (obj) {\n    var values = [];\n\n    for (var key in obj) {\n      if (_.has(obj, key)) values.push(obj[key]);\n    }\n\n    return values;\n  }; // Convert an object into a list of `[key, value]` pairs.\n\n\n  _.pairs = function (obj) {\n    var pairs = [];\n\n    for (var key in obj) {\n      if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    }\n\n    return pairs;\n  }; // Invert the keys and values of an object. The values must be serializable.\n\n\n  _.invert = function (obj) {\n    var result = {};\n\n    for (var key in obj) {\n      if (_.has(obj, key)) result[obj[key]] = key;\n    }\n\n    return result;\n  }; // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n\n\n  _.functions = _.methods = function (obj) {\n    var names = [];\n\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n\n    return names.sort();\n  }; // Extend a given object with all the properties in passed-in object(s).\n\n\n  _.extend = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }; // Return a copy of the object only containing the whitelisted properties.\n\n\n  _.pick = function (obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function (key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  }; // Return a copy of the object without the blacklisted properties.\n\n\n  _.omit = function (obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n\n    return copy;\n  }; // Fill in a given object with default properties.\n\n\n  _.defaults = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }; // Create a (shallow-cloned) duplicate of an object.\n\n\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }; // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n\n\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  var eq = function eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b; // A strict comparison is necessary because `null == undefined`.\n\n    if (a == null || b == null) return a === b; // Unwrap any wrapped objects.\n\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;\n\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n\n      case '[object RegExp]':\n        return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n    }\n\n    if (_typeof(a) != 'object' || _typeof(b) != 'object') return false; // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    var length = aStack.length;\n\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    } // Add the first object to the stack of traversed objects.\n\n\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0,\n        result = true; // Recursively compare objects and arrays.\n\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor,\n          bCtor = b.constructor;\n\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) {\n        return false;\n      } // Deep compare objects.\n\n\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++; // Deep compare each member.\n\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      } // Ensure that both objects contain the same number of properties.\n\n\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !size--) break;\n        }\n\n        result = !size;\n      }\n    } // Remove the first object from the stack of traversed objects.\n\n\n    aStack.pop();\n    bStack.pop();\n    return result;\n  }; // Perform a deep comparison to check if two objects are equal.\n\n\n  _.isEqual = function (a, b) {\n    return eq(a, b, [], []);\n  }; // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n\n\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n\n    for (var key in obj) {\n      if (_.has(obj, key)) return false;\n    }\n\n    return true;\n  }; // Is a given value a DOM element?\n\n\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  }; // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n\n\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) == '[object Array]';\n  }; // Is a given variable an object?\n\n\n  _.isObject = function (obj) {\n    return obj === Object(obj);\n  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n\n\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function (name) {\n    _['is' + name] = function (obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  }); // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  } // Optimize `isFunction` if appropriate.\n\n\n  if (true) {\n    _.isFunction = function (obj) {\n      return typeof obj === 'function';\n    };\n  } // Is a given object a finite number?\n\n\n  _.isFinite = function (obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  }; // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\n\n  _.isNaN = function (obj) {\n    return _.isNumber(obj) && obj != +obj;\n  }; // Is a given value a boolean?\n\n\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  }; // Is a given value equal to null?\n\n\n  _.isNull = function (obj) {\n    return obj === null;\n  }; // Is a given variable undefined?\n\n\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  }; // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n\n\n  _.has = function (obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }; // Utility Functions\n  // -----------------\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n\n\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  }; // Keep the identity function around for default iterators.\n\n\n  _.identity = function (value) {\n    return value;\n  }; // Run a function **n** times.\n\n\n  _.times = function (n, iterator, context) {\n    var accum = Array(n);\n\n    for (var i = 0; i < n; i++) {\n      accum[i] = iterator.call(context, i);\n    }\n\n    return accum;\n  }; // Return a random integer between min and max (inclusive).\n\n\n  _.random = function (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n\n    return min + (0 | Math.random() * (max - min + 1));\n  }; // List of HTML entities for escaping.\n\n\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape); // Regexes containing the keys and values listed immediately above.\n\n  var entityRegexes = {\n    escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  }; // Functions for escaping and unescaping strings to/from HTML interpolation.\n\n  _.each(['escape', 'unescape'], function (method) {\n    _[method] = function (string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function (match) {\n        return entityMap[method][match];\n      });\n    };\n  }); // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n\n\n  _.result = function (object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  }; // Add your own custom functions to the Underscore object.\n\n\n  _.mixin = function (obj) {\n    each(_.functions(obj), function (name) {\n      var func = _[name] = obj[name];\n\n      _.prototype[name] = function () {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  }; // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n\n\n  var idCounter = 0;\n\n  _.uniqueId = function (prefix) {\n    var id = '' + ++idCounter;\n    return prefix ? prefix + id : id;\n  }; // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n\n\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  }; // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n\n  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    \"\\u2028\": 'u2028',\n    \"\\u2029\": 'u2029'\n  };\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g; // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n\n  _.template = function (text, data, settings) {\n    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n    var matcher = new RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, function (match) {\n        return '\\\\' + escapes[match];\n      });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + \"return __p;\\n\";\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n\n    var template = function template(data) {\n      return render.call(this, data, _);\n    }; // Provide the compiled function source as a convenience for precompilation.\n\n\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n    return template;\n  }; // Add a \"chain\" function, which will delegate to the wrapper.\n\n\n  _.chain = function (obj) {\n    return _(obj).chain();\n  }; // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  // Helper function to continue chaining intermediate results.\n\n\n  var result = function result(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  }; // Add all of the Underscore functions to the wrapper object.\n\n\n  _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  }); // Add all accessor Array functions to the wrapper.\n\n  each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n    // Start chaining a wrapped Underscore object.\n    chain: function chain() {\n      this._chain = true;\n      return this;\n    },\n    // Extracts the result from a wrapped and chained object.\n    value: function value() {\n      return this._wrapped;\n    }\n  });\n}).call(this);\n\n//# sourceURL=webpack:///./node_modules/underscore/underscore.js?");

/***/ }),

/***/ "./node_modules/url-parse/index.js":
/*!*****************************************!*\
  !*** ./node_modules/url-parse/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar required = __webpack_require__(/*! requires-port */ \"./node_modules/requires-port/index.js\"),\n    qs = __webpack_require__(/*! querystringify */ \"./node_modules/querystringify/index.js\"),\n    protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i,\n    slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\n\n\nvar rules = [['#', 'hash'], // Extract from the back.\n['?', 'query'], // Extract from the back.\nfunction sanitize(address) {\n  // Sanitize what is left of the address\n  return address.replace('\\\\', '/');\n}, ['/', 'pathname'], // Extract from the back.\n['@', 'auth', 1], // Extract from the front.\n[NaN, 'host', undefined, 1, 1], // Set left over value.\n[/:(\\d+)$/, 'port', undefined, 1], // RegExp the back.\n[NaN, 'hostname', undefined, 1, 1] // Set left over.\n];\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\n\nvar ignore = {\n  hash: 1,\n  query: 1\n};\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\n\nfunction lolcation(loc) {\n  var globalVar;\n  if (typeof window !== 'undefined') globalVar = window;else if (typeof global !== 'undefined') globalVar = global;else if (typeof self !== 'undefined') globalVar = self;else globalVar = {};\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {},\n      type = _typeof(loc),\n      key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n\n    for (key in ignore) {\n      delete finaldestination[key];\n    }\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\n\n\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\n\n\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),\n      i = path.length,\n      last = path[i - 1],\n      unshift = false,\n      up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n  return path.join('/');\n}\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\n\n\nfunction Url(address, location, parser) {\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative,\n      extracted,\n      parse,\n      instruction,\n      index,\n      key,\n      instructions = rules.slice(),\n      type = _typeof(location),\n      url = this,\n      i = 0; //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n\n\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n  location = lolcation(location); //\n  // Extract protocol information before running the instructions.\n  //\n\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest; //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if (index = parse.exec(address)) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : ''); //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  } //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n\n\n  if (parser) url.query = parser(url.query); //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n\n  if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  } //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n\n\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  } //\n  // Parse down the `auth` for the username and password.\n  //\n\n\n  url.username = url.password = '';\n\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null'; //\n  // The href is just the compiled result.\n  //\n\n  url.href = url.toString();\n}\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\n\n\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname + ':' + value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n      if (url.port) value += ':' + url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';\n  url.href = url.toString();\n  return url;\n}\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\n\n\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n  var query,\n      url = this,\n      protocol = url.protocol;\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':' + url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n  query = 'object' === _typeof(url.query) ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?' + query : query;\n  if (url.hash) result += url.hash;\n  return result;\n}\n\nUrl.prototype = {\n  set: set,\n  toString: toString\n}; //\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\n\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.qs = qs;\nmodule.exports = Url;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/url-parse/index.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nmodule.exports = function isBuffer(arg) {\n  return arg && _typeof(arg) === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}; // Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\n\nexports.deprecate = function (fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\n\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return _typeof(arg) === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return _typeof(arg) === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || _typeof(arg) === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\n\n\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/uuid/index.js":
/*!************************************!*\
  !*** ./node_modules/uuid/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"./node_modules/uuid/v1.js\");\n\nvar v4 = __webpack_require__(/*! ./v4 */ \"./node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nmodule.exports = uuid;\n\n//# sourceURL=webpack:///./node_modules/uuid/index.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nmodule.exports = bytesToUuid;\n\n//# sourceURL=webpack:///./node_modules/uuid/lib/bytesToUuid.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/uuid/lib/rng-browser.js?");

/***/ }),

/***/ "./node_modules/uuid/v1.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v1.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\n\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\"); // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/broofa/node-uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n//# sourceURL=webpack:///./node_modules/uuid/v1.js?");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\n\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n//# sourceURL=webpack:///./node_modules/uuid/v4.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))\n\n//# sourceURL=webpack:///(webpack)/buildin/amd-options.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/adapter_core.js":
/*!************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/adapter_core.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nvar adapterFactory = __webpack_require__(/*! ./adapter_factory.js */ \"./node_modules/webrtc-adapter/src/js/adapter_factory.js\");\n\nmodule.exports = adapterFactory({\n  window: global.window\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/adapter_factory.js":
/*!***************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/adapter_factory.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/webrtc-adapter/src/js/utils.js\"); // Shimming starts here.\n\n\nmodule.exports = function (dependencies, opts) {\n  var window = dependencies && dependencies.window;\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  } // Utils.\n\n\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window); // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n  // Browser shims.\n\n  var chromeShim = __webpack_require__(/*! ./chrome/chrome_shim */ \"./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js\") || null;\n  var edgeShim = __webpack_require__(/*! ./edge/edge_shim */ \"./node_modules/webrtc-adapter/src/js/edge/edge_shim.js\") || null;\n  var firefoxShim = __webpack_require__(/*! ./firefox/firefox_shim */ \"./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js\") || null;\n  var safariShim = __webpack_require__(/*! ./safari/safari_shim */ \"./node_modules/webrtc-adapter/src/js/safari/safari_shim.js\") || null;\n  var commonShim = __webpack_require__(/*! ./common_shim */ \"./node_modules/webrtc-adapter/src/js/common_shim.js\") || null; // Export to the adapter global object visible in the browser.\n\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  }; // Shim browser if found.\n\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming chrome.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = chromeShim;\n      commonShim.shimCreateObjectURL(window);\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming firefox.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = firefoxShim;\n      commonShim.shimCreateObjectURL(window);\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming edge.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = edgeShim;\n      commonShim.shimCreateObjectURL(window);\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n      edgeShim.shimGetDisplayMedia(window); // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming safari.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = safariShim;\n      commonShim.shimCreateObjectURL(window);\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js":
/*!******************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar utils = __webpack_require__(/*! ../utils.js */ \"./node_modules/webrtc-adapter/src/js/utils.js\");\n\nvar logging = utils.log;\n/* iterates the stats graph recursively. */\n\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function (name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function (id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n/* filter getStats for a sender/receiver track. */\n\n\nfunction filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n\n  if (track === null) {\n    return filteredResult;\n  }\n\n  var trackStats = [];\n  result.forEach(function (value) {\n    if (value.type === 'track' && value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function (trackStat) {\n    result.forEach(function (stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\nmodule.exports = {\n  shimGetUserMedia: __webpack_require__(/*! ./getusermedia */ \"./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js\"),\n  shimMediaStream: function shimMediaStream(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n  shimOnTrack: function shimOnTrack(window) {\n    if (_typeof(window) === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function get() {\n          return this._ontrack;\n        },\n        set: function set(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n\n          this.addEventListener('track', this._ontrack = f);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n\n      window.RTCPeerConnection.prototype.setRemoteDescription = function () {\n        var pc = this;\n\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function (e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function (te) {\n              var receiver;\n\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function (r) {\n                  return r.track && r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {\n                  track: te.track\n                };\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {\n                receiver: receiver\n              };\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function (track) {\n              var receiver;\n\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function (r) {\n                  return r.track && r.track.id === track.id;\n                });\n              } else {\n                receiver = {\n                  track: track\n                };\n              }\n\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {\n                receiver: receiver\n              };\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    } else {\n      // even if RTCRtpTransceiver is in window, it is only used and\n      // emitted in unified-plan. Unfortunately this means we need\n      // to unconditionally wrap the event.\n      utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n        if (!e.transceiver) {\n          Object.defineProperty(e, 'transceiver', {\n            value: {\n              receiver: e.receiver\n            }\n          });\n        }\n\n        return e;\n      });\n    }\n  },\n  shimGetSendersWithDtmf: function shimGetSendersWithDtmf(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (_typeof(window) === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function shimSenderWithDtmf(pc, track) {\n        return {\n          track: track,\n\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n\n            return this._dtmf;\n          },\n\n          _pc: pc\n        };\n      }; // augment addTrack when getSenders is not available.\n\n\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function () {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n        window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n\n            pc._senders.push(sender);\n          }\n\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n\n        window.RTCPeerConnection.prototype.removeTrack = function (sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n\n          var idx = pc._senders.indexOf(sender);\n\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n\n      window.RTCPeerConnection.prototype.addStream = function (stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function (track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n\n      window.RTCPeerConnection.prototype.removeStream = function (stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function (track) {\n          var sender = pc._senders.find(function (s) {\n            return s.track === track;\n          });\n\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n\n          }\n        });\n      };\n    } else if (_typeof(window) === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n\n      window.RTCPeerConnection.prototype.getSenders = function () {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function (sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function get() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n\n          return this._dtmf;\n        }\n      });\n    }\n  },\n  shimSenderReceiverGetStats: function shimSenderReceiverGetStats(window) {\n    if (!(_typeof(window) === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) {\n      return;\n    } // shim sender stats.\n\n\n    if (!('getStats' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n\n      if (origGetSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function () {\n          var pc = this;\n          var senders = origGetSenders.apply(pc, []);\n          senders.forEach(function (sender) {\n            sender._pc = pc;\n          });\n          return senders;\n        };\n      }\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n      if (origAddTrack) {\n        window.RTCPeerConnection.prototype.addTrack = function () {\n          var sender = origAddTrack.apply(this, arguments);\n          sender._pc = this;\n          return sender;\n        };\n      }\n\n      window.RTCRtpSender.prototype.getStats = function () {\n        var sender = this;\n        return this._pc.getStats().then(function (result) {\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          return filterStats(result, sender.track, true);\n        });\n      };\n    } // shim receiver stats.\n\n\n    if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n      var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n\n      if (origGetReceivers) {\n        window.RTCPeerConnection.prototype.getReceivers = function () {\n          var pc = this;\n          var receivers = origGetReceivers.apply(pc, []);\n          receivers.forEach(function (receiver) {\n            receiver._pc = pc;\n          });\n          return receivers;\n        };\n      }\n\n      utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n        e.receiver._pc = e.srcElement;\n        return e;\n      });\n\n      window.RTCRtpReceiver.prototype.getStats = function () {\n        var receiver = this;\n        return this._pc.getStats().then(function (result) {\n          return filterStats(result, receiver.track, false);\n        });\n      };\n    }\n\n    if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) {\n      return;\n    } // shim RTCPeerConnection.getStats(track).\n\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n\n    window.RTCPeerConnection.prototype.getStats = function () {\n      var pc = this;\n\n      if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n        var track = arguments[0];\n        var sender;\n        var receiver;\n        var err;\n        pc.getSenders().forEach(function (s) {\n          if (s.track === track) {\n            if (sender) {\n              err = true;\n            } else {\n              sender = s;\n            }\n          }\n        });\n        pc.getReceivers().forEach(function (r) {\n          if (r.track === track) {\n            if (receiver) {\n              err = true;\n            } else {\n              receiver = r;\n            }\n          }\n\n          return r.track === track;\n        });\n\n        if (err || sender && receiver) {\n          return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n        } else if (sender) {\n          return sender.getStats();\n        } else if (receiver) {\n          return receiver.getStats();\n        }\n\n        return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n      }\n\n      return origGetStats.apply(pc, arguments);\n    };\n  },\n  shimSourceObject: function shimSourceObject(window) {\n    var URL = window && window.URL;\n\n    if (_typeof(window) === 'object') {\n      if (window.HTMLMediaElement && !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function get() {\n            return this._srcObject;\n          },\n          set: function set(stream) {\n            var self = this; // Use _srcObject as a private property for this shim\n\n            this._srcObject = stream;\n\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n\n            this.src = URL.createObjectURL(stream); // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n\n            stream.addEventListener('addtrack', function () {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function () {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n  shimAddTrackRemoveTrackWithNative: function shimAddTrackRemoveTrackWithNative(window) {\n    // shim addTrack/removeTrack with native variants in order to make\n    // the interactions with legacy getLocalStreams behave as in other browsers.\n    // Keeps a mapping stream.id => [stream, rtpsenders...]\n    window.RTCPeerConnection.prototype.getLocalStreams = function () {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams).map(function (streamId) {\n        return pc._shimmedLocalStreams[streamId][0];\n      });\n    };\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n    window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      var sender = origAddTrack.apply(this, arguments);\n\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n\n      return sender;\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n\n    window.RTCPeerConnection.prototype.addStream = function (stream) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      stream.getTracks().forEach(function (track) {\n        var alreadyExists = pc.getSenders().find(function (s) {\n          return s.track === track;\n        });\n\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.', 'InvalidAccessError');\n        }\n      });\n      var existingSenders = pc.getSenders();\n      origAddStream.apply(this, arguments);\n      var newSenders = pc.getSenders().filter(function (newSender) {\n        return existingSenders.indexOf(newSender) === -1;\n      });\n      this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n\n    window.RTCPeerConnection.prototype.removeStream = function (stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n    var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n\n    window.RTCPeerConnection.prototype.removeTrack = function (sender) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(function (streamId) {\n          var idx = pc._shimmedLocalStreams[streamId].indexOf(sender);\n\n          if (idx !== -1) {\n            pc._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n\n          if (pc._shimmedLocalStreams[streamId].length === 1) {\n            delete pc._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n\n      return origRemoveTrack.apply(this, arguments);\n    };\n  },\n  shimAddTrackRemoveTrack: function shimAddTrackRemoveTrack(window) {\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n\n    var browserDetails = utils.detectBrowser(window); // shim addTrack and removeTrack.\n\n    if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) {\n      return this.shimAddTrackRemoveTrackWithNative(window);\n    } // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n\n\n    var origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n\n    window.RTCPeerConnection.prototype.getLocalStreams = function () {\n      var pc = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      pc._reverseStreams = pc._reverseStreams || {};\n      return nativeStreams.map(function (stream) {\n        return pc._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n\n    window.RTCPeerConnection.prototype.addStream = function (stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      stream.getTracks().forEach(function (track) {\n        var alreadyExists = pc.getSenders().find(function (s) {\n          return s.track === track;\n        });\n\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.', 'InvalidAccessError');\n        }\n      }); // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n\n    window.RTCPeerConnection.prototype.removeStream = function (stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      origRemoveStream.apply(pc, [pc._streams[stream.id] || stream]);\n      delete pc._reverseStreams[pc._streams[stream.id] ? pc._streams[stream.id].id : stream.id];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n      var pc = this;\n\n      if (pc.signalingState === 'closed') {\n        throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n      }\n\n      var streams = [].slice.call(arguments, 1);\n\n      if (streams.length !== 1 || !streams[0].getTracks().find(function (t) {\n        return t === track;\n      })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException('The adapter.js addTrack polyfill only supports a single ' + ' stream which is associated with the specified track.', 'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function (s) {\n        return s.track === track;\n      });\n\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track); // Trigger ONN async.\n\n        Promise.resolve().then(function () {\n          pc.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n\n      return pc.getSenders().find(function (s) {\n        return s.track === track;\n      });\n    }; // replace the internal stream id with the external one and\n    // vice versa.\n\n\n    function replaceInternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n\n    function replaceExternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n\n    ['createOffer', 'createAnswer'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n      window.RTCPeerConnection.prototype[method] = function () {\n        var pc = this;\n        var args = arguments;\n        var isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n\n        if (isLegacyCall) {\n          return nativeMethod.apply(pc, [function (description) {\n            var desc = replaceInternalStreamId(pc, description);\n            args[0].apply(null, [desc]);\n          }, function (err) {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]]);\n        }\n\n        return nativeMethod.apply(pc, arguments).then(function (description) {\n          return replaceInternalStreamId(pc, description);\n        });\n      };\n    });\n    var origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n\n    window.RTCPeerConnection.prototype.setLocalDescription = function () {\n      var pc = this;\n\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(pc, arguments);\n      }\n\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n      return origSetLocalDescription.apply(pc, arguments);\n    }; // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n\n    var origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n      get: function get() {\n        var pc = this;\n        var description = origLocalDescription.get.apply(this);\n\n        if (description.type === '') {\n          return description;\n        }\n\n        return replaceInternalStreamId(pc, description);\n      }\n    });\n\n    window.RTCPeerConnection.prototype.removeTrack = function (sender) {\n      var pc = this;\n\n      if (pc.signalingState === 'closed') {\n        throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n      } // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n\n\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n\n      var isLocal = sender._pc === pc;\n\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n      } // Search for the native stream the senders track belongs to.\n\n\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function (streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function (track) {\n          return sender.track === track;\n        });\n\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(pc._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n  shimPeerConnection: function shimPeerConnection(window) {\n    var browserDetails = utils.detectBrowser(window); // The RTCPeerConnection object.\n\n    if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n      window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n\n      window.RTCPeerConnection.prototype = window.webkitRTCPeerConnection.prototype; // wrap static methods. Currently just generateCertificate.\n\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function get() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    }\n\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n\n    window.RTCPeerConnection.prototype.getStats = function (selector, successCallback, errorCallback) {\n      var pc = this;\n      var args = arguments; // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      } // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n\n\n      if (origGetStats.length === 0 && (arguments.length === 0 || typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function fixChromeStats_(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function (report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function (name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n        return standardReport;\n      }; // shim getStats with maplike support\n\n\n      var makeMapStats = function makeMapStats(stats) {\n        return new Map(Object.keys(stats).map(function (key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function successCallbackWrapper_(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_, arguments[0]]);\n      } // promise-support\n\n\n      return new Promise(function (resolve, reject) {\n        origGetStats.apply(pc, [function (response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n      }).then(successCallback, errorCallback);\n    }; // add promise support -- natively available in Chrome 51\n\n\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n        window.RTCPeerConnection.prototype[method] = function () {\n          var args = arguments;\n          var pc = this;\n          var promise = new Promise(function (resolve, reject) {\n            nativeMethod.apply(pc, [args[0], resolve, reject]);\n          });\n\n          if (args.length < 2) {\n            return promise;\n          }\n\n          return promise.then(function () {\n            args[1].apply(null, []);\n          }, function (err) {\n            if (args.length >= 3) {\n              args[2].apply(null, [err]);\n            }\n          });\n        };\n      });\n    } // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n\n\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function (method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n        window.RTCPeerConnection.prototype[method] = function () {\n          var pc = this;\n\n          if (arguments.length < 1 || arguments.length === 1 && _typeof(arguments[0]) === 'object') {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function (resolve, reject) {\n              nativeMethod.apply(pc, [resolve, reject, opts]);\n            });\n          }\n\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    } // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n\n\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n      window.RTCPeerConnection.prototype[method] = function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      };\n    }); // support for addIceCandidate(null or undefined)\n\n    var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n\n    window.RTCPeerConnection.prototype.addIceCandidate = function () {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n\n        return Promise.resolve();\n      }\n\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  },\n  fixNegotiationNeeded: function fixNegotiationNeeded(window) {\n    utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function (e) {\n      var pc = e.target;\n\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n\n      return e;\n    });\n  },\n  shimGetDisplayMedia: function shimGetDisplayMedia(window, getSourceId) {\n    if (!window.navigator || !window.navigator.mediaDevices || 'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    } // getSourceId is a function that returns a promise resolving with\n    // the sourceId of the screen/window/tab to be shared.\n\n\n    if (typeof getSourceId !== 'function') {\n      console.error('shimGetDisplayMedia: getSourceId argument is not ' + 'a function');\n      return;\n    }\n\n    window.navigator.mediaDevices.getDisplayMedia = function (constraints) {\n      return getSourceId(constraints).then(function (sourceId) {\n        var widthSpecified = constraints.video && constraints.video.width;\n        var heightSpecified = constraints.video && constraints.video.height;\n        var frameRateSpecified = constraints.video && constraints.video.frameRate;\n        constraints.video = {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sourceId,\n            maxFrameRate: frameRateSpecified || 3\n          }\n        };\n\n        if (widthSpecified) {\n          constraints.video.mandatory.maxWidth = widthSpecified;\n        }\n\n        if (heightSpecified) {\n          constraints.video.mandatory.maxHeight = heightSpecified;\n        }\n\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n      });\n    };\n\n    window.navigator.getDisplayMedia = function (constraints) {\n      utils.deprecated('navigator.getDisplayMedia', 'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js":
/*!*******************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar utils = __webpack_require__(/*! ../utils.js */ \"./node_modules/webrtc-adapter/src/js/utils.js\");\n\nvar logging = utils.log; // Expose public methods.\n\nmodule.exports = function (window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function constraintsToChrome_(c) {\n    if (_typeof(c) !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n\n    var cc = {};\n    Object.keys(c).forEach(function (key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n\n      var r = _typeof(c[key]) === 'object' ? c[key] : {\n        ideal: c[key]\n      };\n\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n\n      var oldname_ = function oldname_(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n\n        return name === 'deviceId' ? 'sourceId' : name;\n      };\n\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function (mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n\n    return cc;\n  };\n\n  var shimConstraints_ = function shimConstraints_(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n\n    constraints = JSON.parse(JSON.stringify(constraints));\n\n    if (constraints && _typeof(constraints.audio) === 'object') {\n      var remap = function remap(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n\n    if (constraints && _typeof(constraints.video) === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && (_typeof(face) === 'object' ? face : {\n        ideal: face\n      });\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if (face && (face.exact === 'user' || face.exact === 'environment' || face.ideal === 'user' || face.ideal === 'environment') && !(navigator.mediaDevices.getSupportedConstraints && navigator.mediaDevices.getSupportedConstraints().facingMode && !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            devices = devices.filter(function (d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function (d) {\n              return matches.some(function (match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {\n                exact: dev.deviceId\n              } : {\n                ideal: dev.deviceId\n              };\n            }\n\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function shimError_(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function getUserMedia_(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function (c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function (e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_; // Returns the result of getUserMedia as a Promise.\n\n  var getUserMediaPromise_ = function getUserMediaPromise_(constraints) {\n    return new Promise(function (resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function enumerateDevices() {\n        return new Promise(function (resolve) {\n          var kinds = {\n            audio: 'audioinput',\n            video: 'videoinput'\n          };\n          return window.MediaStreamTrack.getSources(function (devices) {\n            resolve(devices.map(function (device) {\n              return {\n                label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''\n              };\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function getSupportedConstraints() {\n        return {\n          deviceId: true,\n          echoCancellation: true,\n          facingMode: true,\n          frameRate: true,\n          height: true,\n          width: true\n        };\n      }\n    };\n  } // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n\n\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function (constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n    navigator.mediaDevices.getUserMedia = function (cs) {\n      return shimConstraints_(cs, function (c) {\n        return origGetUserMedia(c).then(function (stream) {\n          if (c.audio && !stream.getAudioTracks().length || c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n\n          return stream;\n        }, function (e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  } // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n\n\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function () {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function () {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/common_shim.js":
/*!***********************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/common_shim.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar SDPUtils = __webpack_require__(/*! sdp */ \"./node_modules/sdp/sdp.js\");\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/webrtc-adapter/src/js/utils.js\");\n\nmodule.exports = {\n  shimRTCIceCandidate: function shimRTCIceCandidate(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n      return;\n    }\n\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\n\n    window.RTCIceCandidate = function (args) {\n      // Remove the a= which shouldn't be part of the candidate string.\n      if (_typeof(args) === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n        args = JSON.parse(JSON.stringify(args));\n        args.candidate = args.candidate.substr(2);\n      }\n\n      if (args.candidate && args.candidate.length) {\n        // Augment the native candidate with the parsed fields.\n        var nativeCandidate = new NativeRTCIceCandidate(args);\n        var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n        var augmentedCandidate = Object.assign(nativeCandidate, parsedCandidate); // Add a serializer that does not serialize the extra attributes.\n\n        augmentedCandidate.toJSON = function () {\n          return {\n            candidate: augmentedCandidate.candidate,\n            sdpMid: augmentedCandidate.sdpMid,\n            sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n            usernameFragment: augmentedCandidate.usernameFragment\n          };\n        };\n\n        return augmentedCandidate;\n      }\n\n      return new NativeRTCIceCandidate(args);\n    };\n\n    window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype; // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n\n    utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n      if (e.candidate) {\n        Object.defineProperty(e, 'candidate', {\n          value: new window.RTCIceCandidate(e.candidate),\n          writable: 'false'\n        });\n      }\n\n      return e;\n    });\n  },\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n  shimCreateObjectURL: function shimCreateObjectURL(window) {\n    var URL = window && window.URL;\n\n    if (!(_typeof(window) === 'object' && window.HTMLMediaElement && 'srcObject' in window.HTMLMediaElement.prototype && URL.createObjectURL && URL.revokeObjectURL)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(),\n        newId = 0;\n\n    URL.createObjectURL = function (stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + ++newId;\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)', 'elem.srcObject = stream');\n        return url;\n      }\n\n      return nativeCreateObjectURL(stream);\n    };\n\n    URL.revokeObjectURL = function (url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype, 'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function get() {\n        return dsc.get.apply(this);\n      },\n      set: function set(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n\n    window.HTMLMediaElement.prototype.setAttribute = function () {\n      if (arguments.length === 2 && ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  },\n  shimMaxMessageSize: function shimMaxMessageSize(window) {\n    if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n      return;\n    }\n\n    var browserDetails = utils.detectBrowser(window);\n\n    if (!('sctp' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n        get: function get() {\n          return typeof this._sctp === 'undefined' ? null : this._sctp;\n        }\n      });\n    }\n\n    var sctpInDescription = function sctpInDescription(description) {\n      var sections = SDPUtils.splitSections(description.sdp);\n      sections.shift();\n      return sections.some(function (mediaSection) {\n        var mLine = SDPUtils.parseMLine(mediaSection);\n        return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n      });\n    };\n\n    var getRemoteFirefoxVersion = function getRemoteFirefoxVersion(description) {\n      // TODO: Is there a better solution for detecting Firefox?\n      var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n\n      if (match === null || match.length < 2) {\n        return -1;\n      }\n\n      var version = parseInt(match[1], 10); // Test for NaN (yes, this is ugly)\n\n      return version !== version ? -1 : version;\n    };\n\n    var getCanSendMaxMessageSize = function getCanSendMaxMessageSize(remoteIsFirefox) {\n      // Every implementation we know can send at least 64 KiB.\n      // Note: Although Chrome is technically able to send up to 256 KiB, the\n      //       data does not reach the other peer reliably.\n      //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n      var canSendMaxMessageSize = 65536;\n\n      if (browserDetails.browser === 'firefox') {\n        if (browserDetails.version < 57) {\n          if (remoteIsFirefox === -1) {\n            // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n            // fragmentation.\n            canSendMaxMessageSize = 16384;\n          } else {\n            // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n            // messages. Thus, supporting ~2 GiB when sending.\n            canSendMaxMessageSize = 2147483637;\n          }\n        } else if (browserDetails.version < 60) {\n          // Currently, all FF >= 57 will reset the remote maximum message size\n          // to the default value when a data channel is created at a later\n          // stage. :(\n          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n          canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n        } else {\n          // FF >= 60 supports sending ~2 GiB\n          canSendMaxMessageSize = 2147483637;\n        }\n      }\n\n      return canSendMaxMessageSize;\n    };\n\n    var getMaxMessageSize = function getMaxMessageSize(description, remoteIsFirefox) {\n      // Note: 65536 bytes is the default value from the SDP spec. Also,\n      //       every implementation we know supports receiving 65536 bytes.\n      var maxMessageSize = 65536; // FF 57 has a slightly incorrect default remote max message size, so\n      // we need to adjust it here to avoid a failure when sending.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n\n      if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n        maxMessageSize = 65535;\n      }\n\n      var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n\n      if (match.length > 0) {\n        maxMessageSize = parseInt(match[0].substr(19), 10);\n      } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n        // If the maximum message size is not present in the remote SDP and\n        // both local and remote are Firefox, the remote peer can receive\n        // ~2 GiB.\n        maxMessageSize = 2147483637;\n      }\n\n      return maxMessageSize;\n    };\n\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n\n    window.RTCPeerConnection.prototype.setRemoteDescription = function () {\n      var pc = this;\n      pc._sctp = null;\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        var isFirefox = getRemoteFirefoxVersion(arguments[0]); // Get the maximum message size the local peer is capable of sending\n\n        var canSendMMS = getCanSendMaxMessageSize(isFirefox); // Get the maximum message size of the remote peer.\n\n        var remoteMMS = getMaxMessageSize(arguments[0], isFirefox); // Determine final maximum message size\n\n        var maxMessageSize;\n\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        } // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n\n\n        var sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get: function get() {\n            return maxMessageSize;\n          }\n        });\n        pc._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  },\n  shimSendThrowTypeError: function shimSendThrowTypeError(window) {\n    if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n      return;\n    } // Note: Although Firefox >= 57 has a native implementation, the maximum\n    //       message size can be reset for all data channels at a later stage.\n    //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n\n    function wrapDcSend(dc, pc) {\n      var origDataChannelSend = dc.send;\n\n      dc.send = function () {\n        var data = arguments[0];\n        var length = data.length || data.size || data.byteLength;\n\n        if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n          throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n        }\n\n        return origDataChannelSend.apply(dc, arguments);\n      };\n    }\n\n    var origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n\n    window.RTCPeerConnection.prototype.createDataChannel = function () {\n      var pc = this;\n      var dataChannel = origCreateDataChannel.apply(pc, arguments);\n      wrapDcSend(dataChannel, pc);\n      return dataChannel;\n    };\n\n    utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n      wrapDcSend(e.channel, e.target);\n      return e;\n    });\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/edge/edge_shim.js":
/*!**************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/edge/edge_shim.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/webrtc-adapter/src/js/utils.js\");\n\nvar filterIceServers = __webpack_require__(/*! ./filtericeservers */ \"./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js\");\n\nvar shimRTCPeerConnection = __webpack_require__(/*! rtcpeerconnection-shim */ \"./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js\");\n\nmodule.exports = {\n  shimGetUserMedia: __webpack_require__(/*! ./getusermedia */ \"./node_modules/webrtc-adapter/src/js/edge/getusermedia.js\"),\n  shimPeerConnection: function shimPeerConnection(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function (args) {\n          return args;\n        };\n      }\n\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function (args) {\n          return args;\n        };\n      } // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n\n\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function set(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    } // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n\n\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function get() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n\n          return this._dtmf;\n        }\n      });\n    } // Edge currently only implements the RTCDtmfSender, not the\n    // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n\n\n    if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n      window.RTCDTMFSender = window.RTCDtmfSender;\n    }\n\n    var RTCPeerConnectionShim = shimRTCPeerConnection(window, browserDetails.version);\n\n    window.RTCPeerConnection = function (config) {\n      if (config && config.iceServers) {\n        config.iceServers = filterIceServers(config.iceServers);\n      }\n\n      return new RTCPeerConnectionShim(config);\n    };\n\n    window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n  },\n  shimReplaceTrack: function shimReplaceTrack(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender && !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack = window.RTCRtpSender.prototype.setTrack;\n    }\n  },\n  shimGetDisplayMedia: function shimGetDisplayMedia(window, preferredMediaSource) {\n    if (!('getDisplayMedia' in window.navigator) || !window.navigator.mediaDevices || 'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n\n    var origGetDisplayMedia = window.navigator.getDisplayMedia;\n\n    window.navigator.mediaDevices.getDisplayMedia = function (constraints) {\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n\n    window.navigator.getDisplayMedia = function (constraints) {\n      utils.deprecated('navigator.getDisplayMedia', 'navigator.mediaDevices.getDisplayMedia');\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/webrtc-adapter/src/js/utils.js\"); // Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\n\n\nmodule.exports = function (iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n\n      var isString = typeof urls === 'string';\n\n      if (isString) {\n        urls = [urls];\n      }\n\n      urls = urls.filter(function (url) {\n        var validTurn = url.indexOf('turn:') === 0 && url.indexOf('transport=udp') !== -1 && url.indexOf('turn:[') === -1 && !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 && url.indexOf('?transport=udp') === -1;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/edge/getusermedia.js":
/*!*****************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/edge/getusermedia.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n // Expose public methods.\n\nmodule.exports = function (window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function shimError_(e) {\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function toString() {\n        return this.name;\n      }\n    };\n  }; // getUserMedia error shim.\n\n\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n  navigator.mediaDevices.getUserMedia = function (c) {\n    return origGetUserMedia(c).catch(function (e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js":
/*!********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/webrtc-adapter/src/js/utils.js\");\n\nmodule.exports = {\n  shimGetUserMedia: __webpack_require__(/*! ./getusermedia */ \"./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js\"),\n  shimOnTrack: function shimOnTrack(window) {\n    if (_typeof(window) === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function get() {\n          return this._ontrack;\n        },\n        set: function set(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function (e) {\n            e.stream.getTracks().forEach(function (track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {\n                track: track\n              };\n              event.transceiver = {\n                receiver: event.receiver\n              };\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n\n    if (_typeof(window) === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n  },\n  shimSourceObject: function shimSourceObject(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (_typeof(window) === 'object') {\n      if (window.HTMLMediaElement && !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function get() {\n            return this.mozSrcObject;\n          },\n          set: function set(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n  shimPeerConnection: function shimPeerConnection(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (_typeof(window) !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    } // The RTCPeerConnection object.\n\n\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n\n      window.RTCPeerConnection.prototype = window.mozRTCPeerConnection.prototype; // wrap static methods. Currently just generateCertificate.\n\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function get() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    } // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n\n\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n      window.RTCPeerConnection.prototype[method] = function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      };\n    }); // support for addIceCandidate(null or undefined)\n\n    var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n\n    window.RTCPeerConnection.prototype.addIceCandidate = function () {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n\n        return Promise.resolve();\n      }\n\n      return nativeAddIceCandidate.apply(this, arguments);\n    }; // shim getStats with maplike support\n\n\n    var makeMapStats = function makeMapStats(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function (key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n\n    window.RTCPeerConnection.prototype.getStats = function (selector, onSucc, onErr) {\n      return nativeGetStats.apply(this, [selector || null]).then(function (stats) {\n        if (browserDetails.version < 48) {\n          stats = makeMapStats(stats);\n        }\n\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(function (stat) {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            } // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n\n\n            stats.forEach(function (stat, i) {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n\n        return stats;\n      }).then(onSucc, onErr);\n    };\n  },\n  shimSenderGetStats: function shimSenderGetStats(window) {\n    if (!(_typeof(window) === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n      return;\n    }\n\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n      return;\n    }\n\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function () {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function (sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function () {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n\n    window.RTCRtpSender.prototype.getStats = function () {\n      return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n    };\n  },\n  shimReceiverGetStats: function shimReceiverGetStats(window) {\n    if (!(_typeof(window) === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n      return;\n    }\n\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n      return;\n    }\n\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function () {\n        var pc = this;\n        var receivers = origGetReceivers.apply(pc, []);\n        receivers.forEach(function (receiver) {\n          receiver._pc = pc;\n        });\n        return receivers;\n      };\n    }\n\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n\n    window.RTCRtpReceiver.prototype.getStats = function () {\n      return this._pc.getStats(this.track);\n    };\n  },\n  shimRemoveStream: function shimRemoveStream(window) {\n    if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) {\n      return;\n    }\n\n    window.RTCPeerConnection.prototype.removeStream = function (stream) {\n      var pc = this;\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(function (sender) {\n        if (sender.track && stream.getTracks().indexOf(sender.track) !== -1) {\n          pc.removeTrack(sender);\n        }\n      });\n    };\n  },\n  shimRTCDataChannel: function shimRTCDataChannel(window) {\n    // rename DataChannel to RTCDataChannel (native fix in FF60):\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n    if (window.DataChannel && !window.RTCDataChannel) {\n      window.RTCDataChannel = window.DataChannel;\n    }\n  },\n  shimGetDisplayMedia: function shimGetDisplayMedia(window, preferredMediaSource) {\n    if (!window.navigator || !window.navigator.mediaDevices || 'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n\n    window.navigator.mediaDevices.getDisplayMedia = function (constraints) {\n      if (!(constraints && constraints.video)) {\n        var err = new DOMException('getDisplayMedia without video ' + 'constraints is undefined');\n        err.name = 'NotFoundError'; // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n\n        err.code = 8;\n        return Promise.reject(err);\n      }\n\n      if (constraints.video === true) {\n        constraints.video = {\n          mediaSource: preferredMediaSource\n        };\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n\n    window.navigator.getDisplayMedia = function (constraints) {\n      utils.deprecated('navigator.getDisplayMedia', 'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js":
/*!********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/webrtc-adapter/src/js/utils.js\");\n\nvar logging = utils.log; // Expose public methods.\n\nmodule.exports = function (window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function shimError_(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' + 'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  }; // getUserMedia constraints shim.\n\n\n  var getUserMedia_ = function getUserMedia_(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function constraintsToFF37_(c) {\n      if (_typeof(c) !== 'object' || c.require) {\n        return c;\n      }\n\n      var require = [];\n      Object.keys(c).forEach(function (key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n\n        var r = c[key] = _typeof(c[key]) === 'object' ? c[key] : {\n          ideal: c[key]\n        };\n\n        if (r.min !== undefined || r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r.min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n\n          delete r.exact;\n        }\n\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n\n          if (typeof r.ideal === 'number') {\n            oc[key] = {\n              min: r.ideal,\n              max: r.ideal\n            };\n          } else {\n            oc[key] = r.ideal;\n          }\n\n          c.advanced.push(oc);\n          delete r.ideal;\n\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n\n      if (require.length) {\n        c.require = require;\n      }\n\n      return c;\n    };\n\n    constraints = JSON.parse(JSON.stringify(constraints));\n\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n\n    return navigator.mozGetUserMedia(constraints, onSuccess, function (e) {\n      onError(shimError_(e));\n    });\n  }; // Returns the result of getUserMedia as a Promise.\n\n\n  var getUserMediaPromise_ = function getUserMediaPromise_(constraints) {\n    return new Promise(function (resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  }; // Shim for mediaDevices on older versions.\n\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {}\n    };\n  }\n\n  navigator.mediaDevices.enumerateDevices = navigator.mediaDevices.enumerateDevices || function () {\n    return new Promise(function (resolve) {\n      var infos = [{\n        kind: 'audioinput',\n        deviceId: 'default',\n        label: '',\n        groupId: ''\n      }, {\n        kind: 'videoinput',\n        deviceId: 'default',\n        label: '',\n        groupId: ''\n      }];\n      resolve(infos);\n    });\n  };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices = navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n\n    navigator.mediaDevices.enumerateDevices = function () {\n      return orgEnumerateDevices().then(undefined, function (e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n\n        throw e;\n      });\n    };\n  }\n\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n    navigator.mediaDevices.getUserMedia = function (c) {\n      return origGetUserMedia(c).then(function (stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length || c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function (track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.', 'NotFoundError');\n        }\n\n        return stream;\n      }, function (e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n\n  if (!(browserDetails.version > 55 && 'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function remap(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n    navigator.mediaDevices.getUserMedia = function (c) {\n      if (_typeof(c) === 'object' && _typeof(c.audio) === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n\n      MediaStreamTrack.prototype.getSettings = function () {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n\n      MediaStreamTrack.prototype.applyConstraints = function (c) {\n        if (this.kind === 'audio' && _typeof(c) === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n\n  navigator.getUserMedia = function (constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    } // Replace Firefox 44+'s deprecation warning with unprefixed version.\n\n\n    utils.deprecated('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/safari/safari_shim.js":
/*!******************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/safari/safari_shim.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/webrtc-adapter/src/js/utils.js\");\n\nmodule.exports = {\n  shimLocalStreamsAPI: function shimLocalStreamsAPI(window) {\n    if (_typeof(window) !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function () {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n\n        return this._localStreams;\n      };\n    }\n\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function (id) {\n        var result = null;\n\n        if (this._localStreams) {\n          this._localStreams.forEach(function (stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function (stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n\n        return result;\n      };\n    }\n\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n\n      window.RTCPeerConnection.prototype.addStream = function (stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n\n        var pc = this;\n        stream.getTracks().forEach(function (track) {\n          _addTrack.call(pc, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n\n        return _addTrack.call(this, track, stream);\n      };\n    }\n\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function (stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n\n        var index = this._localStreams.indexOf(stream);\n\n        if (index === -1) {\n          return;\n        }\n\n        this._localStreams.splice(index, 1);\n\n        var pc = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function (sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            pc.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function shimRemoteStreamsAPI(window) {\n    if (_typeof(window) !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function () {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function get() {\n          return this._onaddstream;\n        },\n        set: function set(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n          }\n\n          this.addEventListener('addstream', this._onaddstream = f);\n        }\n      });\n      var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n\n      window.RTCPeerConnection.prototype.setRemoteDescription = function () {\n        var pc = this;\n\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function (e) {\n            e.streams.forEach(function (stream) {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n\n              pc._remoteStreams.push(stream);\n\n              var event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n  shimCallbacksAPI: function shimCallbacksAPI(window) {\n    if (_typeof(window) !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function (successCallback, failureCallback) {\n      var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n\n      if (!failureCallback) {\n        return promise;\n      }\n\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function (successCallback, failureCallback) {\n      var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n\n      if (!failureCallback) {\n        return promise;\n      }\n\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function withCallback(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n\n      if (!failureCallback) {\n        return promise;\n      }\n\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function withCallback(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n\n      if (!failureCallback) {\n        return promise;\n      }\n\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function withCallback(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n\n      if (!failureCallback) {\n        return promise;\n      }\n\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function shimGetUserMedia(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function (constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints).then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function shimRTCIceServerUrls(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n\n    window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n\n          if (!server.hasOwnProperty('urls') && server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n\n        pcConfig.iceServers = newIceServers;\n      }\n\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype; // wrap static methods. Currently just generateCertificate.\n\n    if ('generateCertificate' in window.RTCPeerConnection) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function get() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n  },\n  shimTrackEventTransceiver: function shimTrackEventTransceiver(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (_typeof(window) === 'object' && window.RTCPeerConnection && 'receiver' in window.RTCTrackEvent.prototype && // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n    // defined for some reason even when window.RTCTransceiver is not.\n    !window.RTCTransceiver) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n  },\n  shimCreateOfferLegacy: function shimCreateOfferLegacy(window) {\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n\n    window.RTCPeerConnection.prototype.createOffer = function (offerOptions) {\n      var pc = this;\n\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n        }\n\n        var audioTransceiver = pc.getTransceivers().find(function (transceiver) {\n          return transceiver.sender.track && transceiver.sender.track.kind === 'audio';\n        });\n\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true && !audioTransceiver) {\n          pc.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n        }\n\n        var videoTransceiver = pc.getTransceivers().find(function (transceiver) {\n          return transceiver.sender.track && transceiver.sender.track.kind === 'video';\n        });\n\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            videoTransceiver.setDirection('sendonly');\n          } else if (videoTransceiver.direction === 'recvonly') {\n            videoTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveVideo === true && !videoTransceiver) {\n          pc.addTransceiver('video');\n        }\n      }\n\n      return origCreateOffer.apply(pc, arguments);\n    };\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js?");

/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/utils.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\n\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n} // Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\n\n\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n\n  proto.addEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n\n    var wrappedCallback = function wrappedCallback(e) {\n      var modifiedEvent = wrapper(e);\n\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName, wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n\n  proto.removeEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName, unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap, this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n\n      if (cb) {\n        this.addEventListener(eventNameToWrap, this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n} // Utility methods.\n\n\nmodule.exports = {\n  extractVersion: extractVersion,\n  wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n  disableLog: function disableLog(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + _typeof(bool) + '. Please use a boolean.');\n    }\n\n    logDisabled_ = bool;\n    return bool ? 'adapter.js logging disabled' : 'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function disableWarnings(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + _typeof(bool) + '. Please use a boolean.');\n    }\n\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n  log: function log() {\n    if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function deprecated(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod + ' instead.');\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function detectBrowser(window) {\n    var navigator = window && window.navigator; // Returned result object.\n\n    var result = {};\n    result.browser = null;\n    result.version = null; // Fail early if it's not a browser\n\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) {\n      // Firefox.\n      result.browser = 'firefox';\n      result.version = extractVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera.\n      // Version matches Chrome/WebRTC version.\n      result.browser = 'chrome';\n      result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n      // Edge.\n      result.browser = 'edge';\n      result.version = extractVersion(navigator.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n      // Safari.\n      result.browser = 'safari';\n      result.version = extractVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n    } else {\n      // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/webrtc-adapter/src/js/utils.js?");

/***/ }),

/***/ "./node_modules/wildemitter/wildemitter.js":
/*!*************************************************!*\
  !*** ./node_modules/wildemitter/wildemitter.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\r\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based\r\non @visionmedia's Emitter from UI Kit.\r\n\r\nWhy? I wanted it standalone.\r\n\r\nI also wanted support for wildcard emitters like this:\r\n\r\nemitter.on('*', function (eventName, other, event, payloads) {\r\n\r\n});\r\n\r\nemitter.on('somenamespace*', function (eventName, payloads) {\r\n\r\n});\r\n\r\nPlease note that callbacks triggered by wildcard registered events also get\r\nthe event name as the first argument.\r\n*/\nmodule.exports = WildEmitter;\n\nfunction WildEmitter() {}\n\nWildEmitter.mixin = function (constructor) {\n  var prototype = constructor.prototype || constructor;\n  prototype.isWildEmitter = true; // Listen on the given `event` with `fn`. Store a group name if present.\n\n  prototype.on = function (event, groupName, fn) {\n    this.callbacks = this.callbacks || {};\n    var hasGroup = arguments.length === 3,\n        group = hasGroup ? arguments[1] : undefined,\n        func = hasGroup ? arguments[2] : arguments[1];\n    func._groupName = group;\n    (this.callbacks[event] = this.callbacks[event] || []).push(func);\n    return this;\n  }; // Adds an `event` listener that will be invoked a single\n  // time then automatically removed.\n\n\n  prototype.once = function (event, groupName, fn) {\n    var self = this,\n        hasGroup = arguments.length === 3,\n        group = hasGroup ? arguments[1] : undefined,\n        func = hasGroup ? arguments[2] : arguments[1];\n\n    function on() {\n      self.off(event, on);\n      func.apply(this, arguments);\n    }\n\n    this.on(event, group, on);\n    return this;\n  }; // Unbinds an entire group\n\n\n  prototype.releaseGroup = function (groupName) {\n    this.callbacks = this.callbacks || {};\n    var item, i, len, handlers;\n\n    for (item in this.callbacks) {\n      handlers = this.callbacks[item];\n\n      for (i = 0, len = handlers.length; i < len; i++) {\n        if (handlers[i]._groupName === groupName) {\n          //console.log('removing');\n          // remove it and shorten the array we're looping through\n          handlers.splice(i, 1);\n          i--;\n          len--;\n        }\n      }\n    }\n\n    return this;\n  }; // Remove the given callback for `event` or all\n  // registered callbacks.\n\n\n  prototype.off = function (event, fn) {\n    this.callbacks = this.callbacks || {};\n    var callbacks = this.callbacks[event],\n        i;\n    if (!callbacks) return this; // remove all handlers\n\n    if (arguments.length === 1) {\n      delete this.callbacks[event];\n      return this;\n    } // remove specific handler\n\n\n    i = callbacks.indexOf(fn);\n    callbacks.splice(i, 1);\n\n    if (callbacks.length === 0) {\n      delete this.callbacks[event];\n    }\n\n    return this;\n  }; /// Emit `event` with the given args.\n  // also calls any `*` handlers\n\n\n  prototype.emit = function (event) {\n    this.callbacks = this.callbacks || {};\n    var args = [].slice.call(arguments, 1),\n        callbacks = this.callbacks[event],\n        specialCallbacks = this.getWildcardCallbacks(event),\n        i,\n        len,\n        item,\n        listeners;\n\n    if (callbacks) {\n      listeners = callbacks.slice();\n\n      for (i = 0, len = listeners.length; i < len; ++i) {\n        if (!listeners[i]) {\n          break;\n        }\n\n        listeners[i].apply(this, args);\n      }\n    }\n\n    if (specialCallbacks) {\n      len = specialCallbacks.length;\n      listeners = specialCallbacks.slice();\n\n      for (i = 0, len = listeners.length; i < len; ++i) {\n        if (!listeners[i]) {\n          break;\n        }\n\n        listeners[i].apply(this, [event].concat(args));\n      }\n    }\n\n    return this;\n  }; // Helper for for finding special wildcard event handlers that match the event\n\n\n  prototype.getWildcardCallbacks = function (eventName) {\n    this.callbacks = this.callbacks || {};\n    var item,\n        split,\n        result = [];\n\n    for (item in this.callbacks) {\n      split = item.split('*');\n\n      if (item === '*' || split.length === 2 && eventName.slice(0, split[0].length) === split[0]) {\n        result = result.concat(this.callbacks[item]);\n      }\n    }\n\n    return result;\n  };\n};\n\nWildEmitter.mixin(WildEmitter);\n\n//# sourceURL=webpack:///./node_modules/wildemitter/wildemitter.js?");

/***/ }),

/***/ "./node_modules/yeast/index.js":
/*!*************************************!*\
  !*** ./node_modules/yeast/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n//# sourceURL=webpack:///./node_modules/yeast/index.js?");

/***/ }),

/***/ "./src/client-sdk/clients/event-service-client.js":
/*!********************************************************!*\
  !*** ./src/client-sdk/clients/event-service-client.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Created by nitesh on 16/09/16.\n*/\nvar providedConfig = __webpack_require__(/*! ../../config */ \"./src/config.js\");\n\nvar ParticipantsCollection = __webpack_require__(/*! ../models/participants-collection */ \"./src/client-sdk/models/participants-collection.js\");\n\nvar Roster = __webpack_require__(/*! ../roster */ \"./src/client-sdk/roster.js\");\n\nvar WSC = __webpack_require__(/*! ./websocket-client */ \"./src/client-sdk/clients/websocket-client.js\");\n\nmodule.exports = function () {\n  var WebSocketClient = WSC();\n  var defaultConfig = {\n    user: {\n      name: \"Client_SDK_Test\"\n    },\n    events: [\"meeting\", \"endpoint\"]\n  };\n  var config = providedConfig ? providedConfig : defaultConfig;\n  var participantsCollection = new ParticipantsCollection();\n  var roster = new Roster(participantsCollection, {\n    init: true\n  });\n  var verbose = false;\n  /********\n   * @method onChatMessage: On receiving a chat message, this method will be invoked.\n   * @param msg\n   */\n\n  var onChatMessage = function onChatMessage(msg) {\n    console.log(\"MAIN: onChat msg = \", msg);\n  };\n  /********\n   * @method onEndpointNotification: On receiving a endpoint level message, this method will be invoked.\n   * @param msg: {\n   * \t\t\t\t\"timestamp\": \"<epochtime>\",\n   * \t\t\t\t\"props\": <f(full), a(added), m(modified), d(deleted)> [{ endpoint }],\n   *\t\t\t\t\"event\": \"statechange.endpoints.\" + <meetingId>\",\n    *\t\t\t\t\"meetingGuid\": \"<meetingGuid>\"\n    *\t\t\t}\n    */\n\n\n  var onEndpointNotification = function onEndpointNotification(msg) {\n    if (verbose) console.log(\"MAIN: onEndpointNotification msg = \", msg);\n    var meetingGuid = msg.meetingGuid;\n\n    if (msg.props && msg.props.f) {\n      console.log(\"MAIN: @\" + msg.timestamp + \" \" + meetingGuid + \" contain these eps: \");\n      roster = roster ? roster : new Roster(new ParticipantsCollection()); //console.log(\"onFullRoster:2 roster = \", roster);\n\n      roster.fullUpdate(msg.props, {\n        init: true\n      });\n      console.log(\"onFullRoster:3 roster = \", roster.collection);\n      if (verbose) msg.props.f.forEach(function (eps) {\n        console.log(\"MAIN: @\" + msg.timestamp + \" \" + eps.n + \"(\" + eps.E1 + \") as a \" + eps.e + \" (\" + eps.t + \")\");\n      });\n    }\n\n    if (msg.props && msg.props.a) {\n      roster.partialUpdate(msg.props);\n      if (verbose) msg.props.a.forEach(function (eps) {\n        console.log(\"MAIN: @\" + msg.timestamp + \" \" + eps.n + \"(\" + eps.E1 + \") is added to \" + meetingGuid + \" as a \" + eps.e + \" (\" + eps.t + \")\");\n      });\n    }\n    /****\n     * You may don't need to implement modified endpoint functionalities.\n     */\n\n\n    if (msg.props && msg.props.m) {\n      roster.partialUpdate(msg.props);\n\n      if (verbose) {\n        console.log(\"partialUpdate: roster = \", roster.collection);\n        console.log(\"partialUpdate: self = \", roster.selfParticipant);\n        msg.props.m.forEach(function (eps) {\n          console.log(\"MAIN: @\" + msg.timestamp + \" \" + eps.E1 + \" is modified\");\n        });\n      }\n    }\n\n    if (msg.props && msg.props.d) {\n      roster.partialUpdate(msg.props);\n\n      if (verbose) {\n        console.log(\"partialUpdatedelete: roster = \", roster.collection);\n        console.log(\"partialUpdatedelete: self = \", roster.selfParticipant);\n        msg.props.d.forEach(function (eps) {\n          console.log(\"MAIN: @\" + msg.timestamp + \" \" + eps.n + \"(\" + eps.E1 + \") is deleted from \" + meetingGuid);\n        });\n      }\n    }\n  };\n  /********\n   *\n   * @method onMeetingNotification: On receiving a meeting level property, this method will be invoked.\n   * @param msg: {\n   * \t\t\t\ttimestamp: <epochtime>,\n   * \t\t\t\tprops: <meeting property object>,\n   *\t\t\t\tevent: \"statechange.livemeeting.\" + <meetingId\",\n    *\t\t\t}\n    */\n\n\n  var onMeetingNotification = function onMeetingNotification(msg) {\n    if (verbose) {\n      console.log(\"MAIN: onMeetingNotification msg = \", msg);\n      console.log(\"MAIN: @\" + msg.timestamp + \" \" + msg.props.meetingId + \" (\" + msg.props.meetingGuid + \") has title = \" + msg.props.title + \" is \" + msg.props.status);\n    }\n  };\n  /********\n   *\n   * @method onDialoutNotification: On receiving a dialout related messages, this method will be invoked.\n   * @param msg : {\n   * \t\t\t\ttimestamp: <epochtime>,\n   * \t\t\t\tevent: \"dialout.notification\",\n   * \t\t\t\tstatusCode: <sip event code>,\t// eg. 100, \t102, \t  106\n   *\t\t\t\tstatus: <sip status>\t\t\t// eg. dialing, answered, busy\n    * \t\t\t}\n    */\n\n\n  var onDialoutNotification = function onDialoutNotification(msg) {\n    if (verbose) {\n      console.log(\"MAIN: onDialoutNotification msg = \", msg);\n      console.log(\"MAIN: @\" + msg.timestamp + \" dialout statusCode = \" + msg.status + \" (\" + msg.statusCode + \")\");\n    }\n  };\n  /*********\n   *\n   * @param aggregateAPIResponse\n   * @param cb\n   */\n\n\n  var connect = function connect(aggregateAPIResponse, cb) {\n    var params = {\n      websocketURL: aggregateAPIResponse.events.url,\n      oauthInfo: aggregateAPIResponse.oauthInfo,\n      user: {\n        name: config.user.name,\n        leaderId: aggregateAPIResponse.oauthInfo.scope.meeting.leaderId\n      },\n      events: config.events\n    };\n    WebSocketClient.registerHandler({\n      onMessage: function onMessage(evt, data) {\n        var msg = {};\n\n        if (data.body && data.body) {\n          try {\n            msg = JSON.parse(data.body);\n          } catch (e) {\n            console.log(\"corrupted json message body\", e);\n          }\n\n          msg.timestamp = data.timestamp;\n\n          if (msg.event) {\n            if (msg.event.substr(0, 21) === \"statechange.endpoints\") {\n              onEndpointNotification(msg);\n            } else if (msg.event.substr(0, 23) === \"statechange.livemeeting\") {\n              onMeetingNotification(msg);\n            } else if (msg.event === \"dialout.notification\") {\n              onDialoutNotification(msg);\n            }\n          }\n        }\n      }\n    }, 'meeting.notification.msg');\n    WebSocketClient.connect(params).then(function (joinedEvent) {\n      console.log(\"MAIN: WEBSOCKET connect sucess \", joinedEvent);\n      /**\n       *\tFor sending the chat messages\n        */\n      //WebSocketClient.sendEvent(\"meeting.chat.msg\", {\n      //\tmsg: \"message\" + number++\n      //});\n\n      var selfParticipant = {};\n      selfParticipant.E1 = joinedEvent.seamGuid;\n      selfParticipant.ch = joinedEvent.guid ? joinedEvent.guid : \"\";\n      selfParticipant.m = joinedEvent.meetingGuid ? joinedEvent.meetingGuid : \"\";\n      console.log(\"local selfParticipant = \", selfParticipant);\n      roster.assignedSelf(selfParticipant);\n      console.log(\"roster.selfParticipant = \", roster.selfParticipant);\n      WebSocketClient.registerHandler({\n        onMessage: function onMessage(evt, data) {\n          onChatMessage(data);\n        }\n      }, 'meeting.chat.msg');\n\n      WebSocketClient.onBeforeReconnect = function (reconnectAttempt) {\n        console.log('attempt', reconnectAttempt);\n      };\n\n      WebSocketClient.onError = function (err) {\n        console.log('error', err);\n      };\n    }).error(function (err) {\n      console.log('could not able to create websocket connection to BJN cloud', err);\n    });\n  }; //TODO: cleanup  the connection\n\n\n  var close = function close() {\n    console.log(\"WebSocketClient.close executed\");\n    WebSocketClient.close();\n  };\n\n  var setLogging = function setLogging(turnOn) {\n    console.log(\"EventServiceClient verbose logging: \" + turnOn);\n    verbose = turnOn;\n  };\n\n  return {\n    connect: connect,\n    close: close,\n    roster: roster,\n    setLogging: setLogging\n  };\n};\n\n//# sourceURL=webpack:///./src/client-sdk/clients/event-service-client.js?");

/***/ }),

/***/ "./src/client-sdk/clients/rest-client.js":
/*!***********************************************!*\
  !*** ./src/client-sdk/clients/rest-client.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Created by Nitesh on 7/8/16.\n */\n\n\nvar options = __webpack_require__(/*! ../../config */ \"./src/config.js\");\n\nvar REQUEST_TIMEOUT = 15 * 1000; // secs\n\nvar sipDialout = function sipDialout(params, cb) {\n  var postData = JSON.stringify({\n    \"uri\": params.sipUrl\n  });\n  var xhr = new XMLHttpRequest();\n\n  if (!xhr) {\n    console.log(\"sipDialout: XMLHttpRequest is not supported\");\n    cb('sipDialout: XMLHttpRequest is not supported');\n  }\n\n  xhr.timeout = REQUEST_TIMEOUT; // time in milliseconds\n\n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      if (this.status === 200) {\n        console.log(\"MeetingApis: sipDialout Response = \" + this.responseText);\n        cb(null, this.responseText);\n      } else {\n        var status = this.status || 408;\n        console.error(\"MeetingApis: sipDialout Response error \", status);\n        cb(status);\n      }\n    }\n  });\n  xhr.addEventListener(\"error\", function (err) {\n    console.error(\"MeetingApis: sipDialout Response error \", this.err);\n    cb(this.err);\n  });\n  xhr.addEventListener(\"abort\", function (err) {\n    console.error(\"MeetingApis: sipDialout Response aborted \", this.err);\n    cb(this.err);\n  });\n\n  xhr.ontimeout = function (e) {\n    console.log(\"MeetingApis: sipDialout XMLHttpRequest timeout\");\n    cb(\"XMLHttpRequest timeout\");\n  };\n\n  console.log(\"MeetingApis: sipDialout  Request Body = \" + postData);\n  var postRequestUrl = options.environment.hostname + \"/seamapi/v1/user/\" + params.oauthInfo.scope.meeting.leaderId + \"/live_meetings/\" + params.oauthInfo.scope.meeting.meetingNumericId + \"/dialout/pstn?access_token=\" + encodeURIComponent(params.oauthInfo.access_token);\n  console.log(\"postRequestUrl = \", postRequestUrl);\n  xhr.open(\"POST\", postRequestUrl, true);\n  xhr.setRequestHeader('X-Foo', 'header to trigger preflight');\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.send(postData);\n};\n\nvar post = function post(params, cb) {\n  var requestUrl = options.environment.hostname + params.url;\n  var requestData = JSON.stringify(params.body);\n  console.log(\"POST: Request Url = \" + requestUrl);\n  console.log(\"POST: Request Body = \", requestData);\n  var xhr = new XMLHttpRequest();\n\n  if (!xhr) {\n    console.log(\"POST: XMLHttpRequest is not supported\");\n    cb(\"POST: XMLHttpRequest is not supported\");\n  }\n\n  xhr.timeout = REQUEST_TIMEOUT; // time in milliseconds\n\n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      if (this.status === 200 || this.status === 201) {\n        console.log(\"POST: Response success = \" + this.responseText);\n        cb(null, this.responseText);\n      } else {\n        var status = this.status || 408;\n        console.error(\"POST: Response error = \", status);\n        cb({\n          status: status\n        });\n      }\n    }\n  });\n  xhr.addEventListener(\"error\", function (err) {\n    console.log(\"POST: onError = \", err);\n    cb(err);\n  });\n  xhr.addEventListener(\"abort\", function (err) {\n    console.log(\"POST: onAbort = \", err);\n    cb(err);\n  });\n\n  xhr.ontimeout = function () {\n    console.log(\"POST: onTimeout\");\n    cb({\n      status: 408,\n      \"error\": \"POST timeout\"\n    });\n  };\n\n  xhr.open(\"POST\", requestUrl, true);\n  xhr.setRequestHeader('X-Foo', 'header to trigger preflight');\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.send(requestData);\n};\n\nmodule.exports = {\n  sipDialout: sipDialout,\n  post: post\n};\n\n//# sourceURL=webpack:///./src/client-sdk/clients/rest-client.js?");

/***/ }),

/***/ "./src/client-sdk/clients/scheduling-client.js":
/*!*****************************************************!*\
  !*** ./src/client-sdk/clients/scheduling-client.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Created by nitesh on 16/09/16.\n */\nvar RestClient = __webpack_require__(/*! ./rest-client */ \"./src/client-sdk/clients/rest-client.js\");\n\nvar setParams = function setParams(s) {\n  var currentTime = new Date();\n  var start = currentTime.getTime();\n  var end = currentTime;\n  end.setHours(end.getHours() + 1);\n  end = end.getTime();\n  var schedulingParams = {\n    \"description\": \"\",\n    \"addAttendeePasscode\": false,\n    \"endPointVersion\": \"1.80\",\n    \"timezone\": \"US/Mountain\",\n    \"end\": \"\",\n    \"title\": \"Test Meeting\",\n    \"advancedMeetingOptions\": {\n      \"allowStream\": false,\n      \"autoRecord\": false,\n      \"muteParticipantsOnEntry\": false,\n      \"encryptionType\": \"ENCRYPTED_ONLY\",\n      \"makeDefault\": false,\n      \"moderatorLess\": true,\n      \"videoBestFit\": false,\n      \"disallowChat\": false,\n      \"publishMeeting\": false,\n      \"showAllAttendeesInMeetingInvite\": false\n    },\n    \"isLargeMeeting\": false,\n    \"endPointType\": \"WEB_APP\",\n    \"start\": \"\",\n    \"recurrencePattern\": {\n      \"recurrenceCount\": 0,\n      \"daysOfWeekMask\": 0,\n      \"frequency\": 0,\n      \"recurrenceType\": \"NONE\",\n      \"weekOfMonth\": \"NONE\",\n      \"monthOfYear\": \"NONE\",\n      \"endDate\": null,\n      \"dayOfMonth\": 0\n    }\n  };\n  schedulingParams.start = start;\n  schedulingParams.end = end;\n  return schedulingParams;\n};\n\nvar scheduleMeeting = function scheduleMeeting(user, cb) {\n  var requestUrl = \"/seamapi/v1/user/\" + user.leaderId + \"/scheduled_meeting/\" + \"?access_token=\" + encodeURIComponent(user.userToken);\n  var params = {\n    url: requestUrl,\n    body: setParams()\n  };\n  RestClient.post(params, cb);\n};\n\nmodule.exports = {\n  scheduleMeeting: scheduleMeeting\n};\n\n//# sourceURL=webpack:///./src/client-sdk/clients/scheduling-client.js?");

/***/ }),

/***/ "./src/client-sdk/clients/secure-perimeter-client.js":
/*!***********************************************************!*\
  !*** ./src/client-sdk/clients/secure-perimeter-client.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Created by nitesh on 16/09/16.\n */\nvar RestClient = __webpack_require__(/*! ./rest-client */ \"./src/client-sdk/clients/rest-client.js\");\n\nvar aggregatePairing = function aggregatePairing(meeting, cb) {\n  var requestUrl = \"/seamapi/v1/services/pairingCodeGenerator?stringifyOauthJson=false\" + \"&includeProfilePictureUrl=false&includePhoneContactInfo=false&includePairing=false\";\n  var requestBody = meeting;\n  var aggregatePairingParams = {\n    url: requestUrl,\n    body: requestBody\n  };\n  RestClient.post(aggregatePairingParams, cb);\n};\n\nvar webRTCPairing = function webRTCPairing(meeting, cb) {\n  var requestUrl = \"/seamapi/v1/user/\" + meeting.oauthInfo.scope.meeting.leaderId + \"/live_meetings/\" + meeting.oauthInfo.scope.meeting.meetingNumericId + \"/pairing_code/webrtc?access_token=\" + encodeURIComponent(meeting.oauthInfo.access_token);\n  var requestBody = {\n    endpointType: 4,\n    userId: meeting.oauthInfo.scope.meeting.leaderId,\n    languageCode: \"en\",\n    capabilities: [\"AUDIO\", \"VIDEO\", \"CONTENT\"]\n  };\n  var params = {\n    url: requestUrl,\n    body: requestBody\n  };\n  RestClient.post(params, cb);\n};\n\nvar sipDialout = function sipDialout(meeting, sipUrl, cb) {\n  var requestUrl = \"/seamapi/v1/user/\" + meeting.oauthInfo.scope.meeting.leaderId + \"/live_meetings/\" + meeting.oauthInfo.scope.meeting.meetingNumericId + \"/dialout/pstn?access_token=\" + encodeURIComponent(meeting.oauthInfo.access_token);\n  var requestBody = {\n    \"uri\": sipUrl\n  };\n  var params = {\n    url: requestUrl,\n    body: requestBody\n  };\n  RestClient.post(params, cb);\n};\n\nmodule.exports = {\n  aggregatePairing: aggregatePairing,\n  webRTCPairing: webRTCPairing,\n  sipDialout: sipDialout\n};\n\n//# sourceURL=webpack:///./src/client-sdk/clients/secure-perimeter-client.js?");

/***/ }),

/***/ "./src/client-sdk/clients/websocket-client.js":
/*!****************************************************!*\
  !*** ./src/client-sdk/clients/websocket-client.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Promise = __webpack_require__(/*! bluebird */ \"./node_modules/bluebird/js/browser/bluebird.js\");\n\nvar SockJS = __webpack_require__(/*! sockjs-client */ \"./node_modules/sockjs-client/lib/entry.js\");\n\nvar StateMachine = __webpack_require__(/*! state_machine */ \"./src/thirdparty/state_machine.js\");\n\nmodule.exports = function () {\n  var transition = StateMachine.transitions.transition;\n  var afterTransition = StateMachine.transitions.afterTransition;\n  var anyOf = StateMachine.triggers.anyOf;\n  var registrationKey = 'meeting.register';\n  var accessToken;\n  var connectParams;\n  var seamGuid;\n  var joinTimeout;\n  var customOptsList = [];\n  var sock = null;\n  var call;\n\n  var invokeIfImplemented = function invokeIfImplemented(collection, methodName, arg) {\n    return _.invoke(_.filter(collection, function (item) {\n      return item[methodName] !== undefined;\n    }), methodName, arg);\n  };\n\n  var reconnects = 0;\n  var eventHandlers = {};\n  var sockjs_protocols = ['websocket', 'xdr-streaming', 'xhr-streaming', 'xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling']; //if (options.browser == 'safari') {\n  //    sockjs_protocols = _.without(sockjs_protocols, 'websocket');\n  //}\n\n  var isJoinEvent = function isJoinEvent(eventName) {\n    return eventName === registrationKey;\n  };\n\n  var maxReconnects = 1000;\n  var reconnectBackoff = 1000;\n  var keepAliveTimeout = 20 * 1000;\n  var keepAliveTimer;\n\n  var onAfterConnected = function onAfterConnected() {};\n\n  var onAfterClosed = function onAfterClosed() {\n    sock.close();\n    console.log(\"Closing Socket...\");\n  };\n\n  var onReconnecting = function onReconnecting() {\n    if (joinTimeout) {\n      clearTimeout(joinTimeout);\n    }\n\n    if (reconnects === maxReconnects) {\n      console.log(\"Cannot setup sockJS connection, max reconnects attempted\");\n    }\n\n    setTimeout(function () {\n      if (reconnects < maxReconnects) {\n        setTimeout(function () {\n          invokeIfImplemented(_.values(eventHandlers), \"onBeforeReconnect\", reconnects);\n          connect(connectParams, true);\n          reconnects++;\n        }, reconnectBackoff * (reconnects > 10 ? 10 : reconnects));\n      }\n    }, 100);\n  };\n\n  var call = StateMachine.create({\n    initial: 'idle',\n    events: {\n      register: transition({\n        from: ['idle'],\n        to: 'connecting'\n      }),\n      assignGuid: transition({\n        from: ['connecting', 'reconnecting'],\n        to: 'connected'\n      }),\n      close: transition({\n        from: 'connected',\n        to: 'disconnected'\n      }),\n      closedUnexpectedly: transition({\n        from: 'connected',\n        to: 'reconnecting'\n      }),\n      reconnect: transition({\n        from: ['connecting', 'reconnecting', 'disconnected'],\n        to: 'reconnecting'\n      })\n    },\n    triggers: [{\n      event: 'close',\n      activatedBy: anyOf(['remoteClose', 'pairingError', 'kicked', 'crash', 'idleTimeout', 'clientClose'])\n    }, {\n      event: 'closedUnexpectedly',\n      activatedBy: anyOf(['networkIssue'])\n    }],\n    callbacks: [afterTransition({\n      to: 'closed'\n    }, onAfterClosed), afterTransition({\n      to: 'connected'\n    }, onAfterConnected), afterTransition({\n      to: 'reconnecting'\n    }, onReconnecting)]\n  });\n\n  var isConnected = function isConnected() {\n    return call.getState() === 'connected';\n  };\n\n  var events = function events() {\n    return {\n      guid_assigned: guidAssigned,\n      remoteclose: function remoteclose() {\n        console.log(\"remote close\");\n        call.trigger('remoteClose');\n      },\n      pairingError: function pairingError() {\n        call.trigger('pairingError');\n      },\n      kicked: function kicked() {\n        call.trigger('kicked');\n      }\n    };\n  };\n\n  var sendEvent = function sendEvent(event_name, event_data) {\n    if (isJoinEvent(event_name) || isConnected()) {\n      //console.log(\"sending\", JSON.stringify([event_name, event_data || {}]));\n      sock.send(JSON.stringify([event_name, event_data || {}]));\n    } else {\n      console.log(\"Cant send event yet -- sock or guid not ready\");\n    }\n  };\n\n  var guidAssigned = function guidAssigned(event) {\n    seamGuid = event.seamGuid;\n    console.log(\"Self GuidAssigned\", seamGuid);\n    call.assignGuid(); //console.log(\"list of eventHandlers = \", eventHandlers);\n\n    invokeIfImplemented(_.values(eventHandlers), \"onConnect\", event);\n  };\n\n  var close = function close() {\n    console.log(\"client side closing\");\n\n    if (joinTimeout) {\n      clearTimeout(joinTimeout);\n    }\n\n    call.trigger('clientClose');\n    sock.close(\"3077\", \"client-closing on keep alive failure\");\n  };\n\n  var register = function register(params) {\n    //debug(\"register: params = \", params);\n    var coreOpts = {\n      access_token: params.oauthInfo.access_token,\n      numeric_id: params.oauthInfo.scope.meeting.meetingNumericId,\n      leader_id: params.oauthInfo.scope.meeting.leaderId,\n      protocol: \"2\",\n      events: params.events,\n      user: {\n        full_name: params.user.name,\n        is_leader: params.user.leaderId\n      }\n    };\n\n    var opts = _.extend.apply(null, _.union([{}, coreOpts], _.map(customOptsList, function (customOpts) {\n      return _.isFunction(customOpts) ? customOpts() : customOpts;\n    })));\n\n    call.register();\n    console.log(\"register: on state = \" + call.getState() + \", message = \" + registrationKey + \", \" + JSON.stringify(opts));\n    sendEvent(registrationKey, opts); //console.log(\"register: setting up guid assigned timeout\");\n\n    var guidAssignedTimeout = setTimeout(function () {\n      //console.log(\"guid assigned timed out fired\");\n      if (call.getState() !== \"connected\") {\n        console.log(\"reconnecting as NO guid_assigned during timeout\");\n        console.log(call.getState());\n        call.reconnect();\n      } else {\n        //console.log(\"guid assigned timeout cleared\");\n        clearTimeout(guidAssignedTimeout);\n      }\n    }, 5000);\n  };\n\n  var _keepAliveFailure = function _keepAliveFailure() {\n    console.log(\"keepAliveFailure: keep alive failure. Socket is probably dead. Closing socket\");\n    close();\n  };\n\n  var _restartKeepAliveTimer = function _restartKeepAliveTimer() {\n    if (keepAliveTimer) {\n      clearTimeout(keepAliveTimer);\n    }\n\n    keepAliveTimer = setTimeout(function () {\n      _keepAliveFailure();\n    }, keepAliveTimeout);\n  };\n\n  var connect = function connect(params, reconnecting) {\n    //console.log(\"connect: Meeting Token = \" + meetingAccessToken)\n    return new Promise(function (resolve, reject) {\n      eventHandlers['guidAssigned'] = {\n        onConnect: resolve\n      };\n\n      if (reconnecting) {\n        console.log(\"Reconnecting\");\n        console.log(call.getState());\n      }\n\n      connectParams = params;\n      console.log(\"Params = \", connectParams);\n      console.log(\"websocketUrl = \", connectParams.websocketURL);\n      sock = new SockJS(connectParams.websocketURL, {}, {\n        cookie: true,\n        protocols_whitelist: sockjs_protocols\n      });\n      joinTimeout = setTimeout(function () {\n        if (!isConnected()) {\n          console.log(\"closing due to socket timeout\");\n          call.close();\n          call.reconnect();\n        } else {\n          clearTimeout(joinTimeout);\n        }\n      }, 15000);\n      accessToken = connectParams.access_token;\n\n      sock.onopen = function () {\n        register(connectParams);\n        invokeIfImplemented(_.values(eventHandlers), \"onopen\", connectParams);\n      };\n\n      sock.onmessage = function (_e) {\n        try {\n          var msg = JSON.parse(_e.data);\n\n          if (msg.length == 2 && _typeof(msg[1]) === 'object') {\n            var evt = msg[0]; //console.log(\"EVT = \", evt);\n\n            switch (evt) {\n              case 'keepalive':\n                //_restartKeepAliveTimer();\n                sendEvent(\"heartbeat\");\n                break;\n\n              case 'refresh':\n                break;\n\n              default:\n                var evt_data = msg[1]; //console.log(\"0) evt = \", evt);\n                //console.log(\"0) evt_data = \", evt_data);\n\n                var protocolEvent = evt.match(\"([^.]*)$\")[0];\n\n                if (protocolEvent in events()) {\n                  //console.log(\"1) protocolEvent = \", protocolEvent, \" msg \", msg[0]);\n                  events()[protocolEvent](evt_data);\n                } else {\n                  var namespaces = _.keys(eventHandlers); //console.log(\"2) namespace = \", namespaces);\n                  //console.log(\"2) eventhandlers = \", eventHandlers);\n\n\n                  var eventNamespace = _.find(namespaces, function (namespace) {\n                    return evt.match(\"^\" + namespace);\n                  }); //console.log(\"3) eventNameSpace = \", eventNamespace);\n                  //console.log(\"3) eventHandlers[eventNamespace] = \",eventHandlers[eventNamespace]);\n\n\n                  if (eventHandlers[eventNamespace] && eventHandlers[eventNamespace].onMessage) {\n                    eventHandlers[eventNamespace].onMessage(evt, evt_data);\n                  }\n                }\n\n                break;\n            }\n          } else {\n            console.log(\"JSON Received but not valid event: \" + (msg[0] || \"\"));\n          }\n        } catch (e) {\n          console.log(\"Invalid JSON from SockJSClient - \" + _e.data, e);\n        }\n      };\n\n      sock.onclose = function (e) {\n        if (call.getState() === 'connected') {\n          call.closedUnexpectedly();\n        }\n      };\n\n      sock.onerror = function (e) {\n        console.log(\"Error Handler called.\", e);\n        invokeIfImplemented(_.values(eventHandlers), \"onError\", e);\n      };\n    });\n  };\n\n  return {\n    sendEvent: sendEvent,\n    connect: connect,\n    close: close,\n    registerHandler: function registerHandler(handler, namespace, customOpts) {\n      eventHandlers[namespace] = handler;\n\n      if (customOpts) {\n        customOptsList.push(customOpts);\n      }\n    }\n  };\n};\n\n//# sourceURL=webpack:///./src/client-sdk/clients/websocket-client.js?");

/***/ }),

/***/ "./src/client-sdk/models/connection.js":
/*!*********************************************!*\
  !*** ./src/client-sdk/models/connection.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Connection = Backbone.Model.extend({\n  idAttribute: \"connectionGuid\"\n}, {\n  translationMatrix: function translationMatrix(dataObject) {\n    var result = _.clone(dataObject);\n\n    if (result.capabilities) {\n      result.capabilities = _.map(result.capabilities, function (capability) {\n        return capability.toLowerCase();\n      });\n    }\n\n    return result;\n  }\n});\nConnection.Collection = Backbone.Collection.extend({\n  model: Connection\n});\nmodule.exports = Connection;\n\n//# sourceURL=webpack:///./src/client-sdk/models/connection.js?");

/***/ }),

/***/ "./src/client-sdk/models/participant.js":
/*!**********************************************!*\
  !*** ./src/client-sdk/models/participant.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Created by nitesh on 30/08/16.\n */\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Connection = __webpack_require__(/*! ./connection */ \"./src/client-sdk/models/connection.js\");\n\nvar Participant = Backbone.Model.extend({\n  defaults: {\n    isPinned: false,\n    unreadMessages: 0,\n    isOpenedChat: false\n  },\n  collectionProps: {\n    \"connections\": Connection.Collection\n  },\n  sync: function sync(method, data, options) {},\n  destroy: function destroy(options) {\n    Backbone.Model.prototype.destroy.call(this, options);\n  },\n  set: function set(key, value, options) {\n    var self = this;\n\n    var updateCollection = function updateCollection(attrs) {\n      return _.object(_.map(attrs, function (value, prop) {\n        if (!self.collectionProps[prop]) {\n          return [prop, value];\n        }\n\n        if (value instanceof Backbone.Collection) {\n          return [prop, value];\n        }\n\n        var collection = self.get(prop);\n        collection.set(value);\n        return [prop, collection];\n      }));\n    };\n\n    var initializeCollections = function initializeCollections() {\n      return _.object(_.map(self.collectionProps, function (collectionClass, collectionProp) {\n        return [collectionProp, new collectionClass()];\n      }));\n    };\n\n    var attrsToProcess;\n\n    if (_typeof(key) === 'object') {\n      if (!this._collectionsInitialized) {\n        Backbone.Model.prototype.set.call(self, initializeCollections(), options);\n        this._collectionsInitialized = true;\n      }\n\n      var attrs = key;\n      options = value;\n      attrsToProcess = updateCollection(attrs);\n      Backbone.Model.prototype.set.call(self, attrsToProcess, options);\n    } else {\n      attrsToProcess = updateCollection(_.object([key], [value]));\n\n      if (attrsToProcess[key] !== undefined) {\n        Backbone.Model.prototype.set.call(self, key, value, options);\n      }\n    }\n  },\n  isEntered: function isEntered() {\n    var hasSkinny = _.any(this.get(\"connections\").toJSON(), function (connection) {\n      return connection.endpoint == \"Skinny\";\n    });\n\n    if (hasSkinny) {\n      return _.any(this.get(\"connections\").toJSON(), function (connection) {\n        return connection.capabilities.length > 0;\n      });\n    } else {\n      return true;\n    }\n  }\n}, {\n  translationMatrixShort: function translationMatrixShort(dataObject, selfParticipant) {\n    return {\n      dataObject: dataObject,\n      chatEndpointGuid: dataObject.ch,\n      callguid: dataObject.c,\n      id: dataObject.E1,\n      name: dataObject.n,\n      type: dataObject.t || \"endpoint\",\n      callQuality: parseInt(dataObject.C1, 10),\n      isLeader: dataObject.L1 == 1,\n      isSelf: selfParticipant && dataObject.E1 == selfParticipant.id,\n      endpointType: dataObject.e,\n      isSpeaking: dataObject.T == \"1\",\n      isPresenting: dataObject.C2 == \"1\",\n      isSecure: dataObject.e == \"Freeswitch\" || dataObject.e == \"Phone\" || dataObject.e == \"PartnerParticipant\" || dataObject.S1 == \"1\",\n      isPhone: dataObject.e == \"Phone\" || dataObject.e == \"PartnerParticipant\",\n      meetingId: dataObject.m,\n      isVisible: !dataObject.v || dataObject.v == \"1\",\n      isChatOnly: dataObject.e == \"SkinnyChat\",\n      inWaitingRoom: !dataObject.L2 || dataObject.L2 == \"1\",\n      isPresentationLayout: dataObject.L2 == \"2\",\n      isVideoLayout: dataObject.L2 == \"4\",\n      currentLayout: dataObject.S2,\n      isCurrentlyShowingVideo: dataObject.V1 == \"1\",\n      isSendingVideo: dataObject.V2 != \"1\",\n      isServerMutingVideo: dataObject.V3 == \"1\",\n      isVideoSeen: dataObject.V2 != \"1\" && dataObject.V3 != \"1\",\n      isCurrentlyShowingAudio: dataObject.A1 == \"1\",\n      isSendingAudio: dataObject.A2 != \"1\",\n      isServerMutingAudio: dataObject.A3 == \"1\",\n      isAudioHeard: dataObject.A2 != \"1\" && dataObject.A3 != \"1\",\n      alerts: dataObject.a ? dataObject.a.split(\",\") : undefined,\n      audioRecvCodec: dataObject.A4 !== undefined && dataObject.A4 !== '' ? dataObject.A4 : null,\n      audioSendCodec: dataObject.A5 !== undefined && dataObject.A5 !== '' ? dataObject.A5 : null,\n      videoRecvCodec: dataObject.V4 !== undefined && dataObject.V4 !== '' ? dataObject.V4 : null,\n      videoRecvHeight: dataObject.V5 && dataObject.V5 !== '' ? parseInt(dataObject.V5, 10) : null,\n      videoRecvWidth: dataObject.V6 && dataObject.V6 !== '' ? parseInt(dataObject.V6, 10) : null,\n      videoSendCodec: dataObject.V7 !== undefined && dataObject.V7 !== '' ? dataObject.V7 : null,\n      videoSendHeight: dataObject.V8 && dataObject.V8 !== '' ? parseInt(dataObject.V8, 10) : null,\n      videoSendWidth: dataObject.V9 && dataObject.V9 !== '' ? parseInt(dataObject.V9, 10) : null,\n      contentRecvHeight: dataObject.C3 && dataObject.C3 !== '' ? parseInt(dataObject.C3, 10) : null,\n      contentRecvWidth: dataObject.C4 && dataObject.C4 !== '' ? parseInt(dataObject.C4, 10) : null,\n      // These are stubs. We need to co-ordinate with denim and seam teams to get these events\n      videoShareRecvHeight: dataObject.VideoShareRecvHeight && dataObject.VideoShareRecvHeight !== '' ? parseInt(dataObject.VideoShareRecvHeight, 10) : null,\n      videoShareRecvWidth: dataObject.VideoShareRecvWidth && dataObject.VideoShareRecvWidth !== '' ? parseInt(dataObject.VideoShareRecvWidth, 10) : null,\n      pinnedGuid: dataObject.P1,\n      connections: dataObject.C5 ? _.map(dataObject.C5, function (connection) {\n        return Connection.translationMatrix(connection);\n      }) : null,\n      rdcControllee: dataObject.r !== undefined && dataObject.r !== 'None' ? dataObject.r : null,\n      rdcVersion: dataObject.R1,\n      isRdcControllerCapable: dataObject.R2 == \"1\",\n      isRdcControlleeCapable: dataObject.R3 == \"1\"\n    };\n  },\n  translateAttributes: function translateAttributes(rawAttributes, currentModel) {\n    // Translate object\n    var currentObj = currentModel && currentModel.get('dataObject') ? currentModel.get('dataObject') : {};\n\n    var mergedObj = _.extend(currentObj, rawAttributes);\n\n    if (currentModel && currentModel.get('id')) {\n      mergedObj.id = currentModel.get('id');\n    }\n\n    var newData = this.translationMatrixShort(mergedObj, currentModel);\n    return newData;\n  },\n  getId: function getId(rawAttributes) {\n    return rawAttributes.E1;\n  }\n});\nmodule.exports = Participant;\n\n//# sourceURL=webpack:///./src/client-sdk/models/participant.js?");

/***/ }),

/***/ "./src/client-sdk/models/participants-collection.js":
/*!**********************************************************!*\
  !*** ./src/client-sdk/models/participants-collection.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Created by nitesh on 01/09/16.\n */\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Participant = __webpack_require__(/*! ./participant */ \"./src/client-sdk/models/participant.js\");\n\nvar SORT_PREFIX_SELF = 0;\nvar SORT_PREFIX_MODERATOR = 1; //var SORT_PREFIX_PRESENTER = 2;\n\nvar SORT_PREFIX = 3;\nvar SORT_PREFIX_NOT_ENTERED = 4;\nvar NAME_PLACEHOLDER = \"aaa\";\nvar ParticipantsCollection = Backbone.Collection.extend({\n  model: Participant,\n  initialize: function initialize() {\n    Backbone.Collection.prototype.initialize.apply(this);\n\n    _.bindAll(this, 'getExistingForRaw');\n\n    this.callGuidMap = {};\n    this.chatGuidMap = {};\n  },\n  comparator: function comparator(model) {\n    // Artifically sort into moderator at the top, then self\n    // then the rest of the name alphabetically.\n    var prefix = SORT_PREFIX;\n    prefix = model.get(\"isLeader\") ? SORT_PREFIX_MODERATOR : prefix;\n    prefix = model.get(\"isSelf\") ? SORT_PREFIX_SELF : prefix;\n    return prefix + (model.get(\"name\") ? model.get(\"name\").toLowerCase() : NAME_PLACEHOLDER);\n  },\n  sync: function sync(method, data, options) {\n    data.trigger('fetch', method, options);\n  },\n  getExistingForRaw: function getExistingForRaw(rawParticipant) {\n    return this.get(this.model.getId(rawParticipant));\n  },\n  getEnteredLength: function getEnteredLength() {\n    return this.filter(function (participant) {\n      return participant.isEntered();\n    }).length;\n  }\n});\nmodule.exports = ParticipantsCollection;\n\n//# sourceURL=webpack:///./src/client-sdk/models/participants-collection.js?");

/***/ }),

/***/ "./src/client-sdk/roster.js":
/*!**********************************!*\
  !*** ./src/client-sdk/roster.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Created by nitesh on 01/09/16.\n * upd: 3/2018, g1\n */\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar ParticipantsCollection = __webpack_require__(/*! ./models/participants-collection */ \"./src/client-sdk/models/participants-collection.js\");\n\nvar Participant = __webpack_require__(/*! ./models/participant */ \"./src/client-sdk/models/participant.js\");\n\nvar Roster = my.Class({\n  constructor: function constructor(collection) {\n    //_.bindAll(this);\n    this.collection = collection;\n    this.selfParticipant = new Participant();\n  },\n\n  /*\n    * extractSelf: extractSelf from raw roster and populate this.selfParticipant\n    */\n  extractSelf: function extractSelf(rawParticipantData) {\n    var newFullSelf;\n    var selfParticipantId = this.selfParticipant ? this.selfParticipant.id : null;\n\n    if (rawParticipantData.f) {\n      _(rawParticipantData.f).filter(function (participant) {\n        if (selfParticipantId && Participant.getId(participant) === selfParticipantId) {\n          newFullSelf = participant;\n          return false;\n        }\n\n        return true;\n      });\n\n      console.log(\"newFullself = \", newFullSelf);\n      newFullSelf && this.processSelf(newFullSelf, this.selfParticipant);\n    }\n\n    var newAddSelf;\n\n    if (rawParticipantData.a) {\n      _(rawParticipantData.a).filter(function (participant) {\n        if (selfParticipantId && Participant.getId(participant) === selfParticipantId) {\n          newAddSelf = participant;\n          return false;\n        }\n\n        return true;\n      });\n\n      newAddSelf && this.processSelf(newAddSelf, this.selfParticipant);\n    }\n\n    var newModifySelf;\n\n    if (rawParticipantData.m) {\n      _(rawParticipantData.m).filter(function (participant) {\n        if (selfParticipantId && Participant.getId(participant) === selfParticipantId) {\n          newModifySelf = participant;\n          return false;\n        }\n\n        return true;\n      });\n\n      newModifySelf && this.processSelf(newModifySelf, this.selfParticipant);\n    }\n\n    if (rawParticipantData.d) {\n      _(rawParticipantData.d).filter(_.bind(function (participant) {\n        if (selfParticipantId && Participant.getId(participant) === selfParticipantId) {\n          this.selfLeft();\n          return false;\n        }\n\n        return true;\n      }, this));\n    }\n  },\n  fullUpdate: function fullUpdate(rawParticipantData, options) {\n    //Logger.debug(\"Full update\");\n    console.log(\"fullUpdate rawParticipantData = \", rawParticipantData);\n    console.log(\"fullUpdate options = \", options.selfParticipant);\n    var currentData = this.collection ? this.collection : new ParticipantsCollection();\n    var toAdd = [],\n        toModify = [],\n        toDelete = [],\n        affectedIds = [];\n    this.extractSelf(rawParticipantData);\n\n    _(rawParticipantData.f).each(function (participant) {\n      var existingParticipant = currentData.getExistingForRaw(participant);\n\n      if (existingParticipant) {\n        toModify.push(participant);\n        affectedIds.push(existingParticipant.get('id'));\n      } else {\n        toAdd.push(participant);\n      }\n    });\n\n    _(_.difference(_.pluck(currentData.models, 'id'), affectedIds)).each(function (id) {\n      toDelete.push(currentData.get(id));\n    }); //console.log(\"options = \", options);\n    //console.log(\"toAdd = \", toAdd);\n    //console.log(\"toModify = \", toModify);\n    //console.log(\"toDelete = \", toDelete);\n\n\n    this.processAdded(toAdd, options);\n    this.processModified(toModify, options);\n    this.processDeleted(toDelete, options, true);\n  },\n  partialUpdate: function partialUpdate(rawParticipantData, options) {\n    this.extractSelf(rawParticipantData);\n    rawParticipantData.a && this.processAdded(rawParticipantData.a, options);\n    rawParticipantData.m && this.processModified(rawParticipantData.m, options);\n    rawParticipantData.d && this.processDeleted(rawParticipantData.d, options);\n  },\n  processAdded: function processAdded(rawParticipantData, options) {\n    var currentData = this.collection;\n\n    var toAdds = _(rawParticipantData).map(_.bind(function (rawParticipantDatum) {\n      var translatedParticipantDatum = currentData.model.translateAttributes(rawParticipantDatum, undefined);\n      return new currentData.model(translatedParticipantDatum);\n    }, this)).filter(function (participant) {\n      return participant.get('isVisible');\n    });\n\n    _.each(toAdds, function (participant) {\n      //Logger.debug(\"Roster Stream: Adding participant \" + participant.get('id'));\n      currentData.add(participant, options); //if(features.private_chat) {\n      //    hammerloop.publish(hammerloop.skinny.meeting.chat.setUserOnline, participant.get('chatEndpointGuid'));\n      //}\n    });\n  },\n  processModified: function processModified(peopleToUpdate, options) {\n    // Modified\n    var participants = this.collection; // scan through all the people to update,\n    //   and for each person, scan through all elements in update\n    //  \tand copy each updated field into existing participant\n\n    var toChanges = _(peopleToUpdate).map(function (updatedField) {\n      return participants.model.translateAttributes(updatedField, participants.getExistingForRaw(updatedField));\n    }).value(); // scan through the change list, and set each affected participant\n\n\n    _.each(toChanges, function (changedParticipant) {\n      var toModify = participants.get(changedParticipant.id);\n\n      if (toModify) {\n        toModify.set(changedParticipant);\n      }\n    });\n  },\n  processDeleted: function processDeleted(rawParticipantData, options, useId) {\n    // Deleted\n    var currentData = this.collection;\n\n    _(rawParticipantData).each(function (participantOrId) {\n      var toDelete = useId ? currentData.get(participantOrId) : currentData.getExistingForRaw(participantOrId);\n\n      if (toDelete) {\n        //Logger.debug(\"Roster Stream: Deleting participant \" + toDelete.get('id'));\n        toDelete.destroy();\n      } else {//Logger.warn(\"Roster Stream: Could not delete participant \" + JSON.stringify(participantOrId));\n      }\n    });\n  },\n  assignedSelf: function assignedSelf(guidAssignedMsg) {\n    var currentData = this.collection; // Check if the roster has self entry\n\n    var newAddSelf;\n    this.selfParticipant.id = guidAssignedMsg.E1;\n\n    if (currentData) {\n      console.log(\"currData = \", currentData);\n      currentData = _(currentData).filter(function (participant) {\n        console.log(\"participant = \", participant);\n\n        if (!participant) {\n          return false;\n        }\n\n        if (guidAssignedMsg && guidAssignedMsg.E1 && participant.id === guidAssignedMsg.E1) {\n          newAddSelf = participant;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (newAddSelf) {\n        this.processSelf(newAddSelf);\n      } else {\n        Participant.translateAttributes(guidAssignedMsg, this.selfParticipant);\n      }\n    }\n  },\n  processSelf: function processSelf(newObj, oldSelf) {\n    //Logger.debug(\"Processing self participant: \" + JSON.stringify(newObj));\n    if (newObj !== undefined) {\n      var oldObj = oldSelf ? oldSelf : new Participant(); // console.log(\"objObj = \", oldObj);\n\n      var selfAttributes = this.collection.model.translateAttributes(newObj, oldObj); // Update self participantsListItem with new info\n\n      oldObj.set(selfAttributes);\n    }\n  },\n  selfLeft: function selfLeft() {//cofa.skinny.selfIsLive = false;\n    ////Logger.info(\"Detected that self left\");\n    //if (!cofa.skinny.isBrowser) {\n    //    hammerloop.publish(hammerloop.skinny.ui.mediaLeft);\n    //} else {\n    //    hammerloop.publish(hammerloop.skinny.ui.nonBrowserScreen, \"hide\");\n    //    hammerloop.publish(hammerloop.skinny.ui.noVideoScreen, \"permahide\");\n    //}\n  },\n  registerMeetingEventsProcessor: function registerMeetingEventsProcessor(meetingEventsProcessor) {\n    var currentData = this.collection ? this.collection : new ParticipantsCollection();\n    this.meetingEventsProcessor = meetingEventsProcessor;\n    var self = this;\n\n    _.defer(function () {\n      self.meetingEventsProcessor.processFullRoster(currentData);\n    });\n  }\n});\nmodule.exports = Roster;\n\n//# sourceURL=webpack:///./src/client-sdk/roster.js?");

/***/ }),

/***/ "./src/config.js":
/*!***********************!*\
  !*** ./src/config.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Created by nitesh on 25/07/16.\n */\n\n\nmodule.exports = {\n  environment: {\n    hostname: \"https://bluejeans.com\",\n    cert: {\n      key: \"\",\n      certificate: \"\"\n    }\n  },\n  user: {\n    name: \"BJNClient\"\n  },\n  events: [\"meeting\", \"endpoint\", \"chat\"]\n};\n\n//# sourceURL=webpack:///./src/config.js?");

/***/ }),

/***/ "./src/rtc-bluejay.js":
/*!****************************!*\
  !*** ./src/rtc-bluejay.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n/*\n* Blue Jeans WebRTC Signalling Protocol\n* =====================================================================================\n* @version In bower.json\n* @uses Utility which can understands the custom BJN JSON-RPC protocol: BlueJay\n*\n*/\n\n\nvar RTCBlueJay = my.Class({\n  STATIC: {\n    MESSAGE_BASE: {\n      \"bluejay\": \"1.0\"\n    }\n  },\n  constructor: function constructor(options) {\n    this.messageId = 0;\n    this.METHODS = {\n      CONNECT: \"connect\",\n      UPDATE: \"update\",\n      ANSWER: \"answer\",\n      DISCONNECT: \"disconnect\",\n      KEEPALIVE: \"keepalive\",\n      CANDIDATE: \"candidate\",\n      MUTE: \"mute\",\n      TOKEN: \"token\",\n      INFO: \"info\",\n      ICE: \"ice\"\n    };\n    this.TOKEN_TYPES = {\n      STATUS: \"status\",\n      RELEASE: \"release\",\n      TOKENINDICATION: \"tokenindication\",\n      CONTENTINDICATION: \"contentindication\"\n    };\n    this.TOKEN_STATUS = {\n      GRANTED: \"granted\",\n      DENIED: \"denied\",\n      REVOKED: \"revoked\",\n      RELEASED: \"released\",\n      WAITING: \"waiting_user_confirmation\",\n      //special token status, indicates user is waiting on Chrome's Popup\n      CANCELLED: \"cancelled\" //special token status, to indicate user cancelled screen share from popup.\n\n    };\n  },\n  generateMsgId: function generateMsgId() {\n    return ++this.messageId;\n  },\n  setCallid: function setCallid(callId) {\n    this.callId = callId;\n  },\n  getCallId: function getCallId() {\n    return this.callId;\n  },\n  getRequestMessage: function getRequestMessage(methodParams) {\n    var requestMsg = _.extend({}, RTCBlueJay.MESSAGE_BASE, {\n      \"call\": this.callId,\n      \"id\": this.generateMsgId()\n    }, methodParams);\n\n    return requestMsg;\n  },\n  getConnectMessage: function getConnectMessage(messageParams) {\n    return this.getRequestMessage({\n      \"method\": \"connect\",\n      \"params\": messageParams\n    });\n  },\n  getUpdateMessage: function getUpdateMessage(messageParams) {\n    return this.getRequestMessage({\n      \"method\": \"update\",\n      \"params\": messageParams\n    });\n  },\n  getMuteMessage: function getMuteMessage(messageParams) {\n    return this.getRequestMessage({\n      \"method\": \"mute\",\n      \"params\": messageParams\n    });\n  },\n  requestTokenMsg: function requestTokenMsg() {\n    return this.getRequestMessage({\n      \"method\": \"token\",\n      \"params\": {\n        \"type\": \"request\"\n      }\n    });\n  },\n  releaseTokenMsg: function releaseTokenMsg() {\n    return this.getRequestMessage({\n      \"method\": \"token\",\n      \"params\": {\n        \"type\": \"release\"\n      }\n    });\n  },\n  getIceCandidateMessage: function getIceCandidateMessage(iceCandidate) {\n    return this.getRequestMessage({\n      \"method\": \"ice\",\n      \"params\": {\n        \"iceCandidate\": iceCandidate\n      }\n    });\n  },\n  getInfoMsg: function getInfoMsg(messageParams) {\n    return this.getRequestMessage({\n      \"method\": \"info\",\n      \"params\": messageParams\n    });\n  },\n  getKeepaliveMessage: function getKeepaliveMessage() {\n    return this.getRequestMessage({\n      \"method\": \"keepalive\",\n      \"params\": {}\n    });\n  },\n  getDisconnectMessage: function getDisconnectMessage(messageParams) {\n    return this.getRequestMessage({\n      \"method\": \"disconnect\",\n      \"params\": messageParams\n    });\n  },\n  getSuccessResponse: function getSuccessResponse(messageId) {\n    return _.extend({}, RTCBlueJay.MESSAGE_BASE, {\n      \"id\": messageId,\n      \"call\": this.callId,\n      \"result\": \"null\"\n    });\n  },\n  getErrorResponse: function getErrorResponse(messageId, errorMessage) {\n    return _.extend({}, RTCBlueJay.MESSAGE_BASE, {\n      \"id\": messageId,\n      \"call\": this.callId,\n      \"error\": errorMessage\n    });\n  }\n});\nmodule.exports = new RTCBlueJay();\n\n//# sourceURL=webpack:///./src/rtc-bluejay.js?");

/***/ }),

/***/ "./src/rtc-call-stats-model.js":
/*!*************************************!*\
  !*** ./src/rtc-call-stats-model.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar BrowserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar RTCCallStatsModel = Backbone.Model.extend({\n  STATIC: {\n    LABELS: {\n      VIDEO_TRACK: 'video_label',\n      CONTENT_TRACK: 'content_label'\n    }\n  },\n  defaults: {\n    //Local Audio Stream stats\n    audioInputLevel: null,\n    audioPacketsSent: null,\n    // Remote Audio Stream stats\n    audioPacketsRecvd: null,\n    // Remote Video Stream stats\n    videoRecvHeight: null,\n    videoRecvWidth: null,\n    // Remote Content Stream stats\n    contentRecvHeight: null,\n    contentRecvWidth: null\n  },\n  updateStats: function updateStats(stats) {\n    var items = [];\n    Object.keys(stats).forEach(function (key) {\n      var item = {};\n      var res = stats[key];\n      Object.keys(res).forEach(function (k) {\n        item[k] = res[k];\n      });\n      items.push(item);\n    });\n    this.parseStats(items);\n  },\n  parseStats: function parseStats(items) {\n    var newStats = {};\n    var self = this;\n\n    _.each(items, function (data, i, list) {\n      if (BrowserDetector.browser !== 'firefox') {\n        if (data.type === 'ssrc') {\n          if (data.id && data.id.indexOf('_send') !== -1) {\n            // Find the Local Audio Stream Stats Object by checking for presence of 'audioInputLevel' key\n            if (!_.isUndefined(data.audioInputLevel)) {\n              newStats.audioInputLevel = data.audioInputLevel;\n              newStats.audioPacketsSent = data.packetsSent;\n            }\n          }\n\n          if (data.id && data.id.indexOf('_recv') !== -1) {\n            // Find the Local Audio Stream Stats Object by checking for presence of 'audioOutputLevel' key\n            if (!_.isUndefined(data.audioOutputLevel)) {\n              newStats.audioPacketsRecvd = data.packetsReceived;\n            }\n          } else {\n            switch (data.googTrackId) {\n              case self.STATIC.LABELS.VIDEO_TRACK:\n                newStats.videoRecvHeight = data.googFrameHeightReceived ? parseInt(data.googFrameHeightReceived, 10) : null;\n                newStats.videoRecvWidth = data.googFrameWidthReceived ? parseInt(data.googFrameWidthReceived, 10) : null;\n                break;\n\n              case self.STATIC.LABELS.CONTENT_TRACK:\n                newStats.contentRecvHeight = data.googFrameHeightReceived ? parseInt(data.googFrameHeightReceived, 10) : null;\n                newStats.contentRecvWidth = data.googFrameWidthReceived ? parseInt(data.googFrameWidthReceived, 10) : null;\n                break;\n            }\n          }\n        }\n      } else {\n        if (data.type === 'outboundrtp' && data.mediaType === 'audio') {\n          newStats.audioPacketsSent = data.packetsSent;\n        } else if (data.type === 'inboundrtp' && data.mediaType === 'audio') {\n          newStats.audioPacketsRecvd = data.packetsReceived;\n        }\n      }\n    });\n\n    this.set(newStats);\n  }\n});\nmodule.exports = RTCCallStatsModel;\n\n//# sourceURL=webpack:///./src/rtc-call-stats-model.js?");

/***/ }),

/***/ "./src/rtc-call-stats.js":
/*!*******************************!*\
  !*** ./src/rtc-call-stats.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar RTCCallStatsModel = __webpack_require__(/*! ./rtc-call-stats-model */ \"./src/rtc-call-stats-model.js\");\n\nvar BrowserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar RTCCallStats = my.Class({\n  STATIC: {},\n  constructor: function constructor(options) {\n    _.bindAll(this);\n\n    _.extend(this, Backbone.Events);\n\n    this.model = new RTCCallStatsModel();\n    this.peerConnection = options.peerConnection;\n    this.pollInterval = options.statsPollInterval;\n  },\n  startPollingStats: function startPollingStats() {\n    var self = this;\n\n    if (!this.pollStatsHandle) {\n      Logger.debug('RTCCallStats: Starting call stats poll with interval: ', this.pollInterval);\n      this.pollStatsHandle = window.setInterval(function () {\n        self.getStats({\n          peerConnection: self.peerConnection,\n          success: self.getStatsSuccess,\n          error: self.getStatsError\n        });\n      }, this.pollInterval);\n    }\n  },\n  stopPollingStats: function stopPollingStats() {\n    if (!this.pollStatsHandle) {\n      Logger.warn('RTCCallStats: Call stats poll already stopped');\n      return;\n    }\n\n    Logger.debug('RTCCallStats: Stopping call stats poll');\n    window.clearInterval(this.pollStatsHandle);\n    this.pollStatsHandle = null;\n  },\n  getStats: function getStats(params) {\n    var pc = params.peerConnection;\n\n    if (pc && pc.getStats) {\n      pc.getStats(null, params.success, params.error);\n    }\n  },\n  getStatsSuccess: function getStatsSuccess(stats) {\n    if (BrowserDetector.browser === 'firefox') {\n      //Update call stats to detect ICE connection issues\n      this.trigger(\"rtcstats\", stats);\n    }\n\n    this.model.updateStats(stats);\n  },\n  getStatsError: function getStatsError(err) {\n    Logger.error('RTCCallStats: Failed to get webrtc call stats', err);\n  },\n  close: function close() {\n    this.stopPollingStats();\n  }\n});\nmodule.exports = RTCCallStats;\n\n//# sourceURL=webpack:///./src/rtc-call-stats.js?");

/***/ }),

/***/ "./src/rtc-capabilities-manager.js":
/*!*****************************************!*\
  !*** ./src/rtc-capabilities-manager.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n* Blue Jeans WebRTC Capabilities Manager\n* =====================================================================================\n* @version In bower.json\n* @Scope Figures out what WebRTC features are supported by the current browser\n*\n*/\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar RTCCapabilitiesModel = Backbone.Model.extend({\n  defaults: {\n    'supportsOutputSpeakerSelection': null\n  }\n});\nvar RTCCapabilitiesManager = my.Class({\n  STATIC: {},\n  constructor: function constructor(params) {\n    _.bindAll(this);\n\n    this.model = new RTCCapabilitiesModel();\n  },\n  detectCapabilities: function detectCapabilities() {\n    var deferred = Q.defer();\n    this.detectOutputSpeakerSelection();\n    deferred.resolve();\n    return deferred.promise;\n  },\n  detectOutputSpeakerSelection: function detectOutputSpeakerSelection() {\n    $('body').append('<video id=\"testSpeakerSelection\" style=\"display:none\"></video>');\n    var testEl = $('#testSpeakerSelection')[0];\n    this.model.set('supportsOutputSpeakerSelection', testEl && testEl.setSinkId !== undefined ? true : false);\n    $('#testSpeakerSelection').remove();\n  }\n});\nmodule.exports = new RTCCapabilitiesManager();\n\n//# sourceURL=webpack:///./src/rtc-capabilities-manager.js?");

/***/ }),

/***/ "./src/rtc-client.js":
/*!***************************!*\
  !*** ./src/rtc-client.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (RTCManager) {\n  console.log(\"(webrtcclientsdk.js) client Ref Design loading...\");\n  var config = {\n    muteParams: {\n      localAudio: false,\n      localVideo: false\n    }\n  };\n  var sdkVersion = {\n    major: 1,\n    minor: 2,\n    build: 0\n  };\n  /* Original - Chrome only version\n    var mediaConstraints =  {\n        audio:{\n            optional:[],\n            mandatory:[]\n        },\n        video:{\n        }\n    };\n  */\n\n  var mediaConstraints = {\n    audio: {},\n    video: {}\n  };\n  var localVideoEl = null;\n  var remoteVideoEl = null;\n  var contentVideoEl = null;\n  var MediaStarted = false; // new for ffox\n\n  var localDevices;\n  var localAudioStream;\n  var localVideoStream;\n  var remoteStream;\n  var contentStream; // client callbacks\n\n  var cbVideoMute = null;\n  var cbRemoteConnectionStateChange = null;\n  var cbLocalConnectionStateChange = null;\n  var cbOnError = null;\n  var cbContentShareStateChange = null;\n  /*\n      options : {\n        localVideoEl  : <dom element for local video>,\n        remoteVideoEl : <dom element for remote video>,\n        contentVideoEl: <dom element for content share video>\n        bandWidth     : <100..4096Kbps netwk b/w>,\n        devices       : { A/V devices },\n        evtVideoUnmute  : callback(),\n        evtRemoteConnectionStateChange : callback(),\n        evtLocalConnectionStateChange : callback(),\n        evtOnError : callback(),\n        evtContentShareStateChange : callback()  // ver 1.1.x\n  */\n\n  var initialize = function initialize(options) {\n    console.log(\"bjnrtcsdk initializing\");\n    localDevices = options.devices;\n    localVideoEl = options.localVideoEl;\n    remoteVideoEl = options.remoteVideoEl;\n    contentVideoEl = options.contentVideoEl;\n    cbVideoMute = options.evtVideoUnmute;\n    cbRemoteConnectionStateChange = options.evtRemoteConnectionStateChange;\n    cbLocalConnectionStateChange = options.evtLocalConnectionStateChange;\n    cbOnError = options.evtOnError; // ver 1.1.x\n\n    if (options.evtContentShareStateChange) {\n      cbContentShareStateChange = options.evtContentShareStateChange;\n    }\n\n    RTCManager.setBandwidth(options.bandWidth);\n    MediaStarted = false;\n    startLocalStream(); // get hooks to RTCManager callbacks\n\n    RTCManager.localVideoStreamChange = updateSelfView;\n    RTCManager.localAudioStreamChange = updateAudioPath;\n    RTCManager.remoteEndPointStateChange = onRemoteConnectionStateChange;\n    RTCManager.localEndPointStateChange = onLocalConnectionStateChange;\n    RTCManager.remoteStreamChange = onRemoteStreamUpdated;\n    RTCManager.error = onRTCError;\n    RTCManager.contentStreamChange = onContentStreamUpdated;\n  }; //Get the local A/V stream, this stream will be used to for the webrtc connection\n  // stream is an array of stream\n  // stream[0] - local audio stream\n  // stream[1] - local video stream\n\n\n  var startLocalStream = function startLocalStream() {\n    var streamType = 'local_stream';\n    if (MediaStarted) streamType = 'preview_stream';\n    RTCManager.getLocalMedia(mediaConstraints, streamType).then(function (stream) {\n      /* Original - Chrome only version\n            RTCManager.getLocalMedia(mediaConstraints, 'local_stream').then(function(stream) {\n                BJN.localAudioStream = stream[0];\n                BJN.localVideoStream = stream[1];\n      */\n      //---------- New for Firefox ------------------\n      for (var i = 0; i < stream.length; i++) {\n        if (stream[i].bjn_label === \"local_audio_stream\") {\n          localAudioStream = stream[i];\n        } else if (stream[i].bjn_label === \"local_video_stream\") {\n          localVideoStream = stream[i];\n        }\n      }\n\n      updateSelfView(localVideoStream); //Uncomment the below line, if we want to change device in-meeting\n\n      MediaStarted = true;\n      if (cbVideoMute) cbVideoMute();\n    }, function (err) {\n      console.log(\"getLocalMedia error:\\n\" + JSON.stringify(err, null, 2));\n    });\n  }; //Callback for local video stream change, it can be used to render self view when the stream is available\n\n\n  var updateSelfView = function updateSelfView(localStream) {\n    if (localStream) {\n      RTCManager.renderSelfView({\n        stream: localStream,\n        el: localVideoEl\n      });\n      if (cbVideoMute) cbVideoMute(false);\n    } else console.log(\"updateSelfView no stream!!!\");\n  }; // Callback when audio stream changes.  update GUI if stream is defined\n\n\n  var updateAudioPath = function updateAudioPath(localStream) {\n    if (localStream) {\n      console.log(\"Audio Path Change\");\n    }\n  };\n\n  var changeAudioInput = function changeAudioInput(who) {\n    var dev = localDevices.audioIn[who].id;\n    console.log(\"Audio Input is changed: \" + dev);\n    /*  Original Chrome\n      mediaConstraints.audio.optional.push( { sourceId: dev } );\n    */\n\n    mediaConstraints.audio.deviceId = dev;\n    RTCManager.stopLocalStreams();\n    startLocalStream();\n  };\n\n  var changeVideoInput = function changeVideoInput(who) {\n    var dev = localDevices.videoIn[who].id;\n    console.log(\"Video Input is changed: \" + dev);\n    /*  Original Chrome\n      mediaConstraints.video.optional.push( { sourceId: dev } );\n    */\n\n    mediaConstraints.video.deviceId = dev;\n    RTCManager.stopLocalStreams();\n    startLocalStream();\n  };\n\n  var changeAudioOutput = function changeAudioOutput(who) {\n    var dev = localDevices.audioOut[who].id;\n    console.log(\"Audio Output is changed: \" + dev);\n    /*  Original Chrome\n      mediaConstraints.audio.optional.push( { sourceId: dev } );\n    */\n    // 5/30/2017 - bugfix pass mediaElements value as an array rather than discrete object\n\n    RTCManager.setSpeaker({\n      speakerId: dev,\n      mediaElements: [remoteVideoEl]\n    });\n  };\n\n  var setVideoBandwidth = function setVideoBandwidth(bw) {\n    console.log(\"Video BW is changed: \" + bw);\n    RTCManager.setBandwidth(bw);\n  };\n  /* ========================= */\n\n  /*      Mute Controls   \t */\n\n  /* ========================= */\n\n\n  var toggleAudioMute = function toggleAudioMute(event) {\n    var audioMuted = config.muteParams.localAudio ? true : false;\n    config.muteParams.localAudio = !audioMuted;\n    RTCManager.muteStreams(config.muteParams);\n    return !audioMuted;\n  };\n\n  var toggleVideoMute = function toggleVideoMute(event) {\n    var videoMuted = config.muteParams.localVideo ? true : false;\n    config.muteParams.localVideo = !videoMuted;\n    RTCManager.muteStreams(config.muteParams);\n    return !videoMuted;\n  };\n\n  var setVolume = function setVolume() {};\n\n  var joinMeeting = function joinMeeting(meetingParams) {\n    if (meetingParams.numericMeetingId != \"\" && meetingParams.displayName != \"\") {\n      console.log(\"*** Joining meeting id: \" + meetingParams.numericMeetingId);\n      RTCManager.startMeeting(meetingParams);\n    }\n  }; // End the meeting\n\n\n  var leaveMeeting = function leaveMeeting(event) {\n    RTCManager.endMeeting();\n    console.log(\"Leaving meeting\");\n  };\n\n  var onRemoteConnectionStateChange = function onRemoteConnectionStateChange(state) {\n    console.log('Remote Connection state :: ' + state);\n    if (cbRemoteConnectionStateChange) cbRemoteConnectionStateChange(state);\n  };\n\n  var onLocalConnectionStateChange = function onLocalConnectionStateChange(state) {\n    console.log('Local Connection state :: ' + state);\n    if (cbLocalConnectionStateChange) cbLocalConnectionStateChange(state);\n  };\n\n  var onRemoteStreamUpdated = function onRemoteStreamUpdated(stream) {\n    remoteStream = stream;\n\n    if (stream) {\n      console.log('Remote stream updated');\n      RTCManager.renderStream({\n        stream: remoteStream,\n        el: remoteVideoEl\n      });\n    }\n  };\n\n  var onContentStreamUpdated = function onContentStreamUpdated(stream) {\n    contentStream = stream;\n\n    if (stream) {\n      console.log('Content stream updated');\n      RTCManager.renderStream({\n        stream: stream,\n        el: contentVideoEl\n      });\n    }\n\n    if (cbContentShareStateChange) cbContentShareStateChange(stream != null);\n  }; //Add code to handle error from BJN SDK\n\n\n  var onRTCError = function onRTCError(error) {\n    console.log(\"Error has occured :: \" + error);\n    leaveMeeting();\n    if (cbOnError) cbOnError(error);\n  };\n\n  var reportSdkVersion = function reportSdkVersion() {\n    return sdkVersion;\n  };\n\n  var getLocalAudioStream = function getLocalAudioStream() {\n    return localAudioStream;\n  };\n\n  var getLocalVideoStream = function getLocalVideoStream() {\n    return localVideoStream;\n  };\n\n  var getRemoteStream = function getRemoteStream() {\n    return remoteStream;\n  };\n\n  var getContentStream = function getContentStream() {\n    return contentStream;\n  };\n\n  return {\n    initialize: initialize,\n    toggleVideoMute: toggleVideoMute,\n    toggleAudioMute: toggleAudioMute,\n    changeAudioInput: changeAudioInput,\n    changeAudioOutput: changeAudioOutput,\n    changeVideoInput: changeVideoInput,\n    setVideoBandwidth: setVideoBandwidth,\n    joinMeeting: joinMeeting,\n    leaveMeeting: leaveMeeting,\n    version: reportSdkVersion,\n    getLocalAudioStream: getLocalAudioStream,\n    getLocalVideoStream: getLocalVideoStream,\n    getRemoteStream: getRemoteStream,\n    getContentStream: getContentStream\n  };\n};\n\n//# sourceURL=webpack:///./src/rtc-client.js?");

/***/ }),

/***/ "./src/rtc-controller.js":
/*!*******************************!*\
  !*** ./src/rtc-controller.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n* Blue Jeans WebRTC Peer Connection Manager\n* =====================================================================================\n* @version In bower.json\n*\n*/\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar BrowserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCUtils = __webpack_require__(/*! ./rtc-utils */ \"./src/rtc-utils.js\");\n\nvar RTCSignallingManager = __webpack_require__(/*! ./rtc-signalling-manager */ \"./src/rtc-signalling-manager.js\");\n\nvar RTCLocalMediaManager = __webpack_require__(/*! ./rtc-local-media-manager */ \"./src/rtc-local-media-manager.js\");\n\nvar RTCPeerConnectionManager = __webpack_require__(/*! ./rtc-peer-connection-manager */ \"./src/rtc-peer-connection-manager.js\");\n\nvar RTCTransactionManager = __webpack_require__(/*! ./rtc-transaction-manager */ \"./src/rtc-transaction-manager.js\");\n\nvar RTCStateManager = __webpack_require__(/*! ./rtc-state-manager */ \"./src/rtc-state-manager.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\n\nvar RTCScreenSharingManager = __webpack_require__(/*! ./rtc-screensharing-manager */ \"./src/rtc-screensharing-manager.js\");\n\nvar RTCErrors = __webpack_require__(/*! ./rtc-error */ \"./src/rtc-error.js\");\n\nvar RTCCapabilitiesManager = __webpack_require__(/*! ./rtc-capabilities-manager */ \"./src/rtc-capabilities-manager.js\");\n\nvar RTCCallStateModel = Backbone.Model.extend({\n  defaults: {\n    localVideoStream: null,\n    localAudioStream: null,\n    previewStream: null,\n    remoteStream: null,\n    localContentStream: null,\n    remoteContentStream: null,\n    connectionState: '',\n    // ICE Connection states\n    callState: '',\n    // Call States - Waiting, InProgress, Ended, Failed,\n    disconnectCode: '',\n    // Reason code for call getting disconnected\n    localAudioMuted: null,\n    localVideoMuted: null,\n    remoteAudioMuted: false,\n    remoteVideoMuted: false,\n    isSpeaking: false,\n    volumeLevel: 0,\n    devices: {\n      available: {\n        audioIn: [],\n        videoIn: []\n      },\n      selected: {\n        audioIn: null,\n        videoIn: null\n      }\n    },\n    presentationToken: null,\n    presentationState: null,\n    // Current state of presentation sharing\n    isWSConnected: false,\n    isIceRestarted: false,\n    capabilities: {}\n  }\n});\nvar RTCPrivateModel = Backbone.Model.extend({\n  defaults: {\n    wsConnectionState: 'closed',\n    wsSocketId: '',\n    isIceRestarted: false,\n    dtlsCertificate: null\n  }\n});\nvar RTCController = my.Class({\n  config: {},\n  resendMute: false,\n  constructor: function constructor(params) {\n    _.bindAll(this);\n\n    _.extend(this.config, params);\n\n    _.extend(this, Backbone.Events);\n\n    if (BrowserDetector.browser === 'firefox') this.isFirefox = true;\n    this.model = new RTCCallStateModel();\n    this.internalModel = new RTCPrivateModel();\n    this.BJ_CALLSTATES = RTCStates.BJ_CALLSTATES;\n    this.TOKEN_STATUS = RTCBlueJay.TOKEN_STATUS;\n    this.EXTENSION_STATES = RTCStates.EXTENSION_STATES;\n    this.WS_STATES = RTCStates.WS_STATES;\n    this.localMediaManager = new RTCLocalMediaManager(this.config.localMediaParams);\n    this.peerConnectionManager = new RTCPeerConnectionManager({\n      'peerConfig': this.config.peerConfig,\n      'meetingParams': params.meetingParams\n    });\n    this.localMediaManager.model.on('change:localAudioStream', this.onLocalAudioStreamChange);\n    this.localMediaManager.model.on('change:localVideoStream', this.onLocalVideoStreamChange);\n    this.localMediaManager.model.on('change:previewStream', this.onPreviewStreamChange);\n    this.localMediaManager.model.on('change:remoteAudioMuted', this.onRemoteAudioMuteChange);\n    this.localMediaManager.model.on('change:remoteVideoMuted', this.onRemoteVideoMuteChange);\n    this.localMediaManager.model.on('change:isSpeaking', this.isSpeaking);\n    this.localMediaManager.model.on('change:volumeLevel', this.updateVolumeLevel);\n    this.localMediaManager.on('localStreamsChanged', this.onLocalStreamsChanged);\n    RTCTransactionManager.on('retransmitRequest', this.onRetransmitRequest);\n    RTCTransactionManager.on('receivedConnectResponse', this.onReceiveConnectResponse);\n    RTCTransactionManager.on('requestTimeout', this.onRequestTimeout);\n    RTCTransactionManager.on('closeSocketConnection', this.closeSocket);\n    RTCStateManager.model.on('change:disconnectCode', this.onDisconnectCodeChange);\n    RTCStateManager.model.on('change:currentState', this.onCallStateChange);\n    RTCSignallingManager.on('wsConnectionStateChange', this.wsConnectionStateChange);\n    RTCScreenSharingManager.setParams({\n      extensionId: this.config.extensionId,\n      features: this.config.features\n    });\n    RTCScreenSharingManager.model.on('change:presentationToken', this.onReceivePresentationToken);\n    RTCScreenSharingManager.model.on('change:localContentStream', this.onLocalContentStreamChanged);\n    RTCScreenSharingManager.model.on('change:tokenStatus', this.onPresentationTokenStatusChanged);\n    RTCScreenSharingManager.model.on('change:extensionStatus', this.onExtensionStatusChanged);\n    RTCScreenSharingManager.model.on('change:firefoxScreenShareCancelled', this.triggerFirefoxScreenShareCancelled);\n  },\n  getLocalMedia: function getLocalMedia(params, streamType) {\n    var deferred = Q.defer();\n    this.localMediaManager.startMedia(params, streamType).then(function (stream) {\n      return deferred.resolve(stream);\n    }, function (error) {\n      Logger.warn(\"RTCController: Could not get access to user's media devices\");\n      return deferred.reject(error);\n    });\n    return deferred.promise;\n  },\n  getLocalDevices: function getLocalDevices() {\n    var self = this;\n    var deferred = Q.defer();\n    this.localMediaManager.getDevices().then(function (newDevices) {\n      var devices = self.model.get(\"devices\");\n      devices.available = newDevices.available;\n      devices.selected = newDevices.selected;\n      self.model.set('devices', devices);\n      deferred.resolve(devices);\n    }, function (error) {\n      deferred.reject(error);\n    });\n    return deferred.promise;\n  },\n  getCameraStatus: function getCameraStatus(streamType) {\n    return this.localMediaManager.detectCameraStatus(streamType);\n  },\n  getCapabilities: function getCapabilities() {\n    return RTCCapabilitiesManager.detectCapabilities().then(_.bind(function () {\n      this.model.set('capabilities', RTCCapabilitiesManager.model.attributes);\n    }, this), function () {\n      Logger.error('RTCController: failed to get RTC capabilities');\n    });\n  },\n  setSpeaker: function setSpeaker(params) {\n    this.localMediaManager.setSpeaker(params);\n  },\n  renderSelfView: function renderSelfView(params) {\n    return this.localMediaManager.renderSelfView(params);\n  },\n  renderStream: function renderStream(params) {\n    return this.localMediaManager.renderStream(params);\n  },\n  stopLocalMedia: function stopLocalMedia(stream) {\n    this.localMediaManager.stopMedia(stream);\n  },\n  createPeerConnection: function createPeerConnection(params) {\n    this.peerConnectionManager.createPeer(params);\n    this.peerConnectionManager.peer.model.on('change:remoteStream', this.onRemoteStreamChanged);\n    this.peerConnectionManager.peer.model.on('change:remoteContentStream', this.onRemoteContentStreamChanged);\n    this.peerConnectionManager.peer.on('iceConnectionClosed', this.onIceConnectivityClosed);\n    this.peerConnectionManager.peer.on('restartICE', this.restartMediaChannel);\n    this.peerConnectionManager.peer.on('iceConnectivityTimeout', this.onIceConnectivityTimeout);\n    this.peerConnectionManager.peer.callStatsModel.on('change', function (callStats) {\n      this.model.set(callStats.attributes);\n    }, this);\n  },\n  onCallStateChange: function onCallStateChange(model) {\n    var newState = model.get('currentState');\n    this.model.set('callState', newState);\n    RTCTransactionManager.updateCallState(newState);\n    this.reactToCallStateChange();\n  },\n  reactToCallStateChange: function reactToCallStateChange() {\n    var callState = this.model.get('callState');\n\n    switch (callState) {\n      case this.BJ_CALLSTATES.CONNECTED:\n        this.model.set('isIceRestarted', false);\n        break;\n\n      case this.BJ_CALLSTATES.DISCONNECTED:\n        this.reset();\n        this.sendDisconnectMessage(RTCStateManager.getDisconnectReason());\n        break;\n\n      default:\n        break;\n    }\n  },\n  onDisconnectCodeChange: function onDisconnectCodeChange() {\n    this.model.set('disconnectCode', RTCStateManager.model.get('disconnectCode'));\n  },\n  initializePeerConnection: function initializePeerConnection(params, resetState) {\n    if (resetState === undefined || resetState === true) {\n      RTCStateManager.reset();\n    }\n\n    this.peerConnectionManager.initiateCall(params, true);\n  },\n  startConnection: function startConnection(params) {\n    // Generate a new call-Id for the new signaling channel\n    var callId = uuid.v1();\n    RTCSignallingManager.createSocket(params);\n    this.peerConnectionManager.updateMeetingParams(params);\n    RTCBlueJay.setCallid(callId);\n  },\n  generateDtlsRsaCertificate: function generateDtlsRsaCertificate() {\n    var deferred = Q.defer();\n    var self = this;\n    var dtlsRSACert;\n\n    if (webkitRTCPeerConnection.generateCertificate) {\n      dtlsRSACert = self.internalModel.get('dtlsCertificate');\n\n      if (!dtlsRSACert) {\n        webkitRTCPeerConnection.generateCertificate({\n          name: 'RSASSA-PKCS1-v1_5',\n          hash: 'SHA-256',\n          modulusLength: 2048,\n          publicExponent: new Uint8Array([1, 0, 1])\n        }).then(function (cert) {\n          Logger.debug(\"RTCController :: Successfully created DTLS RSA certificate\");\n          self.internalModel.set('dtlsCertificate', cert);\n          deferred.resolve(cert);\n        }, function (error) {\n          deferred.reject(error);\n        });\n      } else {\n        deferred.resolve(dtlsRSACert);\n      }\n    } else {\n      deferred.resolve();\n    }\n\n    return deferred.promise;\n  },\n\n  /* Use this API to makeCall from skinny, right now we need to call\n      three APIs just to initiate the call. Skinny should only call one\n      API to start the call */\n  makeCall: function makeCall(peerParams, callParams) {\n    var self = this; //reset old states, required in re-connection scenarios\n\n    RTCTransactionManager.reset();\n    RTCStateManager.reset();\n    this.closeSocket();\n\n    if (this.isFirefox) {\n      self.startConnection(callParams);\n      self.createPeerConnection(peerParams);\n    } else {\n      this.generateDtlsRsaCertificate().then(function (cert) {\n        if (cert) {\n          peerParams.peerConfig.peerConnectionConfig.certificates = [cert];\n        }\n\n        self.startConnection(callParams);\n        self.createPeerConnection(peerParams);\n      }, function (error) {\n        Logger.error(\"RTCController :: Failed to start call, Error :\" + error);\n      });\n    }\n  },\n  joinMeeting: function joinMeeting() {\n    var callState = this.model.get('callState');\n\n    if (callState !== this.BJ_CALLSTATES.CONNECTING && callState !== this.BJ_CALLSTATES.RECONNECTING) {\n      Logger.error('RTCController: callState is not in connecting/reconnecting state, cannot proceed with call yet');\n      throw \"Connection state not ready to call\";\n    } //TODO :: Temporary fix to set IceRestart to false, to prevent IceRestart during joinMeeting\n    //Remove it once the params issue is fixed in skinny\n\n\n    var offerParams = this.config.peerConfig.receiveMedia;\n    offerParams.iceRestart = false;\n    this.peerConnectionManager.initiateCall(offerParams, false);\n  },\n  restartMediaChannel: function restartMediaChannel() {\n    var wsConnectionState = this.internalModel.get('wsConnectionState');\n\n    if ((wsConnectionState === this.WS_STATES.CONNECTED || wsConnectionState === this.WS_STATES.RECONNECTED) && this.model.get('isIceRestarted') === false) {\n      Logger.debug('Re-starting the media channel - ICE Restart, get new local SDP');\n      var offerParams = this.config.peerConfig.receiveMedia;\n      offerParams.iceRestart = true;\n      this.initializePeerConnection(offerParams, false);\n      this.model.set('isIceRestarted', true);\n    } else {\n      Logger.debug(\"RTCController : Failed to restart media channel, Signalling channel\" + \" is disconnected or media restart is already in progress.\");\n    }\n  },\n  //TODO:: Can move this function somewhere else\n  onRetransmitRequest: function onRetransmitRequest(message) {\n    // Call the state manager with the change\n    RTCSignallingManager.sendMsg(message);\n  },\n  onLocalAudioStreamChange: function onLocalAudioStreamChange(model) {\n    this.model.set('localAudioStream', model.get('localAudioStream'));\n  },\n  onLocalVideoStreamChange: function onLocalVideoStreamChange(model) {\n    this.model.set('localVideoStream', model.get('localVideoStream'));\n  },\n  onPreviewStreamChange: function onPreviewStreamChange(model) {\n    this.model.set('previewStream', model.get('previewStream'));\n  },\n  onRemoteStreamChanged: function onRemoteStreamChanged(model) {\n    this.model.set('remoteStream', model.get('remoteStream'));\n    this.localMediaManager.updateStream({\n      remoteStream: model.get('remoteStream')\n    });\n  },\n  onRemoteContentStreamChanged: function onRemoteContentStreamChanged(model) {\n    this.model.set('remoteContentStream', model.get('remoteContentStream'));\n  },\n  onReceivePresentationToken: function onReceivePresentationToken(model) {\n    this.model.set('presentationToken', model.get('presentationToken'));\n  },\n  _applyCachedMuteStates: function _applyCachedMuteStates() {\n    Logger.info('RTCController: Applying cached mute states');\n    this.muteStreams({\n      resendMuteMsg: true,\n      localAudio: this.localMediaManager.model.get('localAudioMuted'),\n      localVideo: this.localMediaManager.model.get('localVideoMuted'),\n      remoteAudio: this.localMediaManager.model.get('remoteAudioMuted'),\n      remoteVideo: this.localMediaManager.model.get('remoteVideoMuted')\n    });\n  },\n  muteStreams: function muteStreams(params) {\n    var self = this;\n    var connectMsgAckd = RTCTransactionManager.model.get('connectResponseReceived');\n    var localAudioToggled = _.isBoolean(params.localAudio) && params.localAudio !== this.model.get('localAudioMuted');\n    var localVideoToggled = _.isBoolean(params.localVideo) && params.localVideo !== this.model.get('localVideoMuted'); //Set the remote mute state in RTCPeer\n\n    if (this.peerConnectionManager && this.peerConnectionManager.peer) {\n      if (!_.isUndefined(params.remoteAudio) && !_.isUndefined(params.remoteVideo)) {\n        this.peerConnectionManager.peer.isRemoteMute = params.remoteAudio && params.remoteVideo;\n      }\n    }\n\n    this.localMediaManager.muteStreams(params).then(function () {\n      if (!params.localMuteOnly && connectMsgAckd) {\n        if (localVideoToggled && params.localVideo === false) {\n          self.onLocalStreamsChanged();\n        }\n\n        var localAudioMuted = params.localAudio;\n        var localVideoMuted = params.localVideo;\n        var remoteAudioMuted = params.remoteAudio;\n        var remoteVideoMuted = params.remoteVideo;\n        var muteMsg = RTCBlueJay.getMuteMessage({\n          'audio': localAudioMuted ? \"muted\" : \"unmuted\",\n          'video': localVideoMuted ? \"muted\" : \"unmuted\",\n          'remoteAudio': remoteAudioMuted ? \"muted\" : \"unmuted\",\n          'remoteVideo': remoteVideoMuted ? \"muted\" : \"unmuted\"\n        }); // Local Stream Audio/Video mute states should be updated only after sending mute msg to connector.\n\n        if (RTCSignallingManager.sendMsg(muteMsg)) {\n          RTCTransactionManager.onBlueJayRequest(muteMsg);\n          self.resendMute = false;\n        } else {\n          self.resendMute = true;\n        }\n\n        self.model.set({\n          'localAudioMuted': localAudioMuted,\n          'localVideoMuted': localVideoMuted\n        });\n      }\n    }, function () {\n      Logger.error(\"RTCController: Failed to Mute streams\");\n    });\n  },\n  onRemoteAudioMuteChange: function onRemoteAudioMuteChange(model) {\n    this.model.set('remoteAudioMuted', model.get('remoteAudioMuted'));\n  },\n  onRemoteVideoMuteChange: function onRemoteVideoMuteChange(model) {\n    this.model.set('remoteVideoMuted', model.get('remoteVideoMuted'));\n  },\n  updateLocalStream: function updateLocalStream(params) {\n    return this.peerConnectionManager.updatePeerStream(params);\n  },\n  startVolumeMonitoring: function startVolumeMonitoring(stream, options) {\n    if (this.localMediaManager.volumeMoniter == null) {\n      this.localMediaManager.startVolumeMonitor(stream, options);\n    } else {\n      Logger.debug(\"Already monitering volume\");\n    }\n  },\n  stopVolumeMonitoring: function stopVolumeMonitoring() {\n    this.localMediaManager.stopVolumeMonitor();\n  },\n  isSpeaking: function isSpeaking(model) {\n    this.model.set('isSpeaking', model.get('isSpeaking'));\n  },\n  setIsSpeaking: function setIsSpeaking(val) {\n    this.localMediaManager.model.set('isSpeaking', val);\n\n    if (!val) {\n      // Reset vad count if we are resetting isSpeaking flag.\n      this.localMediaManager.vadCount = 0;\n    }\n  },\n  updateVolumeLevel: function updateVolumeLevel(model) {\n    this.model.set('volumeLevel', model.get('volumeLevel'));\n  },\n  onLocalStreamsChanged: function onLocalStreamsChanged() {\n    var newAudioStream = this.localMediaManager.model.get('localAudioStream');\n    var newVideoStream = this.localMediaManager.model.get('localVideoStream');\n    var callState = this.model.get('callState');\n    this.peerConnectionManager.updatePeerStream({\n      newVideoStream: newVideoStream,\n      newAudioStream: newAudioStream\n    });\n  },\n  onLocalStreamSuccessCB: function onLocalStreamSuccessCB(streams) {\n    var self = this;\n    var newVideoStream = null;\n    var newAudioStream = null;\n    var currentVideoStream = self.model.get('localVideoStream');\n    var currentAudioStream = self.model.get('localAudioStream');\n    var callState = this.model.get('callState');\n\n    _.each(streams, function (stream, i, list) {\n      if (stream.getVideoTracks().length > 0) {\n        newVideoStream = stream;\n        self.model.set('localVideoStream', newVideoStream);\n      } else {\n        newAudioStream = stream;\n        self.model.set('localAudioStream', newAudioStream);\n      }\n    }); // RENEGOTIATE\n\n\n    if (callState === this.BJ_CALLSTATES.CONNECTED) {\n      self.peerConnectionManager.updatePeerStream({\n        currentVideoStream: currentVideoStream,\n        newVideoStream: newVideoStream,\n        currentAudioStream: currentAudioStream,\n        newAudioStream: newAudioStream\n      });\n    }\n  },\n  onReceiveConnectResponse: function onReceiveConnectResponse() {\n    this._applyCachedMuteStates();\n\n    this.peerConnectionManager.signallingChannelCreated();\n    this.localMediaManager.sendDeviceInfo();\n  },\n  onCallDisconnected: function onCallDisconnected(params) {\n    RTCStateManager.callDisconnected(params);\n  },\n  onRequestTimeout: function onRequestTimeout() {\n    RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.REQ_TIMED_OUT);\n  },\n  endCall: function endCall() {\n    this.sendDisconnectMessage(RTCErrors.DISCONNECT_REASONS.USER_INITIATED);\n    this.localMediaManager.close();\n    this.reset();\n  },\n  reset: function reset() {\n    //Wait for call to get cleared and then go ahead\n    var deferred = Q.defer();\n    this.peerConnectionManager.close();\n    RTCScreenSharingManager.close();\n    RTCTransactionManager.reset();\n    deferred.resolve();\n    return deferred.promise;\n  },\n  sendDisconnectMessage: function sendDisconnectMessage(disconnectParams) {\n    var disconnectMsg = RTCBlueJay.getDisconnectMessage(disconnectParams);\n    RTCTransactionManager.onBlueJayRequest(disconnectMsg);\n    RTCSignallingManager.sendMsg(disconnectMsg);\n  },\n  closeSocket: function closeSocket() {\n    Logger.debug(\"RTCController closing socket\");\n    RTCSignallingManager.close();\n  },\n  getVersion: function getVersion() {\n    return \"1.0\"; // TO-DO: Can this be fetched from bower.json?\n  },\n  startScreenSharing: function startScreenSharing(params) {\n    RTCScreenSharingManager.startScreenSharing(params);\n  },\n  stopScreenSharing: function stopScreenSharing() {\n    RTCScreenSharingManager.stopScreenSharing();\n  },\n  onLocalContentStreamChanged: function onLocalContentStreamChanged(model) {\n    var contentStream = model.get('localContentStream');\n\n    if (this.isFirefox) {\n      this.peerConnectionManager.updateContentStream(contentStream);\n    } else {\n      if (contentStream) {\n        this.peerConnectionManager.addPeerStream(contentStream);\n      } else {\n        contentStream = this.model.get('localContentStream');\n        contentStream && this.peerConnectionManager.removePeerStream(contentStream);\n      }\n    }\n\n    this.model.set('localContentStream', model.get('localContentStream'));\n  },\n  onPresentationTokenStatusChanged: function onPresentationTokenStatusChanged(model) {\n    this.model.set('presentationTokenStatus', model.get('tokenStatus'));\n  },\n  triggerFirefoxScreenShareCancelled: function triggerFirefoxScreenShareCancelled(model) {\n    this.model.trigger('change:presentationTokenStatus', this.model);\n  },\n  onExtensionStatusChanged: function onExtensionStatusChanged(model) {\n    this.model.set('extensionStatus', model.get('extensionStatus'));\n  },\n  wsConnectionStateChange: function wsConnectionStateChange(state, socketId) {\n    var oldWsSock = this.internalModel.get('wsConnectionState');\n    this.internalModel.set('wsConnectionState', state);\n\n    switch (state) {\n      case this.WS_STATES.CONNECTED:\n        // New Socket is created, start the new connection flow\n        if (RTCStateManager.getCurrentCallState() === this.BJ_CALLSTATES.IDLE || oldWsSock !== this.WS_STATES.RECONNECTED) this.initializePeerConnection();\n        break;\n\n      case this.WS_STATES.RECONNECTED:\n        var oldSockId = this.internalModel.get('wsSocketId');\n\n        if (oldSockId !== socketId && RTCStateManager.getCurrentCallState() === this.BJ_CALLSTATES.RESTART_MEDIA) {\n          //TODO :: Change the connection state logic\n          this.restartMediaChannel();\n        }\n\n        this.peerConnectionManager.sendKeepAliveMessage(true);\n\n        if (this.resendMute) {\n          this._applyCachedMuteStates();\n        }\n\n        break;\n\n      case this.WS_STATES.FAILED:\n        RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.TRANSPORT_FAIL);\n        break;\n\n      case this.WS_STATES.DISCONNECTED:\n      case this.WS_STATES.CLOSED:\n      default:\n        break;\n    }\n\n    this.internalModel.set('wsSocketId', socketId);\n  },\n  onIceConnectivityTimeout: function onIceConnectivityTimeout() {\n    RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.TRANSPORT_FAIL);\n  },\n  setPresentationRatio: function setPresentationRatio(splitRatio) {\n    RTCScreenSharingManager.sendPresentaionRatio(splitRatio);\n  },\n  onIceConnectivityClosed: function onIceConnectivityClosed() {\n    Logger.debug(\"RTCController :: Ice connection is closed, ending the call\");\n    RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.USER_INITIATED);\n    this.localMediaManager.close();\n  }\n});\nmodule.exports = RTCController;\n\n//# sourceURL=webpack:///./src/rtc-controller.js?");

/***/ }),

/***/ "./src/rtc-error.js":
/*!**************************!*\
  !*** ./src/rtc-error.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar RTCErrors = my.Class({\n  constructor: function constructor(options) {\n    /* Errors specific to the BlueJay Signaling protocol */\n    this.SIGNALING_ERRORS = {\n      BAD_REQUEST: {\n        code: '400',\n        message: 'Bad Request'\n      },\n      DOESNOT_EXIST: {\n        code: '481',\n        message: 'Call Does Not Exists'\n      },\n      NOT_ALLOWED: {\n        code: '405',\n        message: 'Method Not Allowed'\n      },\n      METHOD_NOT_IMPLEMENTED: {\n        code: '501',\n        message: 'Method Not Implemented'\n      }\n    };\n    /* Errors specific to call disconnect scenarios */\n\n    this.DISCONNECT_REASONS = {\n      REQ_TIMED_OUT: {\n        code: '408',\n        message: 'Request Timeout'\n      },\n      TRANSPORT_FAIL: {\n        code: '500',\n        message: 'Server Internal Error'\n      },\n      KEEPALIVE_TIMEOUT: {\n        code: '450',\n        message: 'Keep Alive Timeout'\n      },\n      USER_INITIATED: {\n        code: '200',\n        message: 'User Action'\n      },\n      NODE_DRAIN: {\n        code: '302',\n        message: 'Node Draining'\n      },\n      SERVICE_UNAVAILABLE: {\n        code: '503',\n        message: 'Service Unavailable'\n      },\n      ICE_CONNECTION_FAILED: {\n        code: '520',\n        message: 'Ice Connection Failed'\n      },\n      ICE_GATHERING_FAILED: {\n        code: '521',\n        message: 'Ice Gathering Failed'\n      },\n      SIG_CHANNEL_CLOSED: {\n        code: '522',\n        message: 'Signaling Channel Closed'\n      }\n    };\n    /* States for getUserMedia call */\n\n    this.GET_LOCAL_MEDIA_STATES = {\n      AVAILABLE: {\n        code: 200,\n        message: 'Requested devices are available',\n        details: ''\n      },\n      DEVICES_NOT_FOUND: {\n        code: 404,\n        message: 'Requested devices were not found',\n        details: ''\n      },\n      PERMISSION_DENIED: {\n        code: 401,\n        message: 'User denied access to local device streams',\n        details: ''\n      },\n      SOURCE_UNAVAILABLE: {\n        code: 423,\n        message: 'Device is unavailable, maybe locked by another process',\n        details: ''\n      },\n      NOT_READABLE: {\n        code: 409,\n        message: 'Device source in use',\n        details: ''\n      },\n      EXCEPTION: {\n        code: 500,\n        message: 'Unknown error',\n        details: ''\n      }\n    };\n    /* STATES for Screen Sharing feature */\n\n    this.SCREEN_SHARING_STATES = {\n      STARTED: {\n        code: 200,\n        message: 'Screen Sharing has started',\n        details: ''\n      },\n      INSTALL_EXTENSION_FAILED: {\n        code: 421,\n        message: 'Chrome Extension installation failed',\n        details: ''\n      },\n      GET_TOKEN_FAILED: {\n        code: 408,\n        message: 'Token request timed out',\n        details: ''\n      },\n      GET_SCREEN_MEDIA_FAILED: {\n        code: 400,\n        message: 'Failed to get screen media stream',\n        details: ''\n      },\n      EXCEPTION: {\n        code: 500,\n        message: 'Unknown error',\n        details: ''\n      },\n      STOPPED: {\n        code: 204,\n        message: 'Screen Sharing has stopped',\n        details: ''\n      }\n    };\n    this.PEER_CONNECTION_ERRORS = {\n      PC_CLOSED: {\n        code: 410,\n        message: 'Peer Connection is closed, request cannot be processed',\n        details: ''\n      }\n    };\n  },\n  translateGetUserMediaError: function translateGetUserMediaError(error) {\n    var translatedError = {};\n    var gumErrors = this.GET_LOCAL_MEDIA_STATES;\n\n    switch (error.name) {\n      case \"DevicesNotFoundError\":\n        translatedError = gumErrors.DEVICES_NOT_FOUND;\n        break;\n\n      case \"PermissionDeniedError\":\n        translatedError = gumErrors.PERMISSION_DENIED;\n        break;\n\n      case \"SourceUnavailableError\":\n        translatedError = gumErrors.SOURCE_UNAVAILABLE;\n        break;\n\n      case \"NotReadableError\":\n        translatedError = gumErrors.NOT_READABLE;\n        break;\n\n      default:\n        Logger.warn('Unhandled error in getUserMedia: ', error);\n        translatedError = gumErrors.EXCEPTION;\n    }\n\n    translatedError.details = error; // add the actual error retuned by api in 'details' field\n\n    return translatedError;\n  },\n  //Temp Workaround for Chrome: If camera is not avaliable, bubble up a fake SourceUnavailableError until this error gets implemented in chrome\n  detectCameraStatus: function detectCameraStatus(stream) {\n    /*\n    var deferred = Q.defer();\n    var cameraAvailable = false;\n    var cameraError, videoTrack, self = this;\n    if(stream && typeof(stream.getVideoTracks) === 'function') {\n        videoTrack = stream.getVideoTracks()[0];\n        if(videoTrack) {\n            window.setTimeout(function() {\n                if(videoTrack.readyState === 'ended') {\n                    cameraAvailable = false;\n                    Logger.warn('RTCErrors: Camera feed is unavailable, faulty camera or its in use by another program');\n                    deferred.resolve(self.GET_LOCAL_MEDIA_STATES.SOURCE_UNAVAILABLE);\n                } else {\n                    cameraAvailable = true;\n                    deferred.resolve(self.GET_LOCAL_MEDIA_STATES.AVAILABLE);\n                }\n            }, 0);\n        } else {\n            deferred.resolve(this.GET_LOCAL_MEDIA_STATES.SOURCE_UNAVAILABLE);\n        }\n    } else {\n        deferred.resolve(this.GET_LOCAL_MEDIA_STATES.DEVICES_NOT_FOUND);\n    }\n    return deferred.promise;\n    */\n    var cameraAvailable = false;\n    var cameraError,\n        videoTrack,\n        self = this;\n\n    if (stream && typeof stream.getVideoTracks === 'function') {\n      videoTrack = stream.getVideoTracks()[0];\n\n      if (videoTrack) {\n        if (videoTrack.readyState === 'ended') {\n          cameraAvailable = false;\n          Logger.warn('RTCErrors: Camera feed is unavailable, faulty camera or its in use by another program');\n          return self.GET_LOCAL_MEDIA_STATES.SOURCE_UNAVAILABLE;\n        } else {\n          cameraAvailable = true;\n          return self.GET_LOCAL_MEDIA_STATES.AVAILABLE;\n        }\n      } else {\n        Logger.warn('RTCErrors: No video tracks available in the stream, triggering camera unavailable state');\n        return this.GET_LOCAL_MEDIA_STATES.SOURCE_UNAVAILABLE;\n      }\n    } else {\n      return this.GET_LOCAL_MEDIA_STATES.DEVICES_NOT_FOUND;\n    }\n  }\n});\nmodule.exports = new RTCErrors();\n\n//# sourceURL=webpack:///./src/rtc-error.js?");

/***/ }),

/***/ "./src/rtc-local-media-manager.js":
/*!****************************************!*\
  !*** ./src/rtc-local-media-manager.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n* Blue Jeans WebRTC Local Media Manager\n* =====================================================================================\n* @version In bower.json\n*\n*/\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar RTCUtils = __webpack_require__(/*! ./rtc-utils */ \"./src/rtc-utils.js\");\n\nvar RTCErrors = __webpack_require__(/*! ./rtc-error */ \"./src/rtc-error.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCSignallingManager = __webpack_require__(/*! ./rtc-signalling-manager */ \"./src/rtc-signalling-manager.js\");\n\nvar RTCTransactionManager = __webpack_require__(/*! ./rtc-transaction-manager */ \"./src/rtc-transaction-manager.js\");\n\nvar LocalMedia = __webpack_require__(/*! localmedia */ \"./node_modules/localmedia/localmedia.js\");\n\nvar _attachMediaStream = __webpack_require__(/*! attachmediastream */ \"./node_modules/attachmediastream/attachmediastream.js\");\n\nvar Hark = __webpack_require__(/*! hark */ \"./node_modules/hark/hark.js\");\n\nvar BrowserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar LocalMediaModel = Backbone.Model.extend({\n  defaults: {\n    previewStream: null,\n    localStream: null,\n    localAudioStream: null,\n    localVideoStream: null,\n    remoteStream: null,\n    localAudioMuted: false,\n    localVideoMuted: false,\n    remoteAudioMuted: false,\n    remoteVideoMuted: false,\n    localStreamStopped: false,\n    availableDevices: {\n      audioIn: [],\n      videoIn: [],\n      audioOut: []\n    },\n    selectedMic: null,\n    selectedCamera: null,\n    selectedSpeaker: null,\n    volumeLevel: 0,\n    isSpeaking: false\n  }\n});\nvar RTCLocalMediaManager = my.Class({\n  chromeConfig: {\n    mediaConstraints: {\n      audio: {\n        advanced: [{\n          googEchoCancellation: true\n        }, {\n          googAutoGainControl: true\n        }, {\n          googNoiseSuppression: true\n        }, {\n          googHighpassFilter: true\n        }, {\n          googAudioMirroring: false\n        }, {\n          googNoiseSuppression2: true\n        }, {\n          googEchoCancellation2: true\n        }, {\n          googAutoGainControl2: true\n        }, {\n          googDucking: false\n        }]\n      },\n      video: {\n        width: {\n          min: 1280,\n          max: 1280\n        },\n        height: {\n          min: 720,\n          max: 720\n        }\n      }\n    },\n    selfViewConfig: {\n      autoplay: true,\n      mirror: true,\n      muted: true\n    },\n    volumeMonitoring: {\n      interval: 300,\n      // polling time (in ms) used for detecting speech/volume change\n      threshold: -50 // Decibel level threshold used to determine speech signals in local audio stream\n\n    }\n  },\n  firefoxConfig: {\n    mediaConstraints: {\n      audio: {\n        advanced: [{\n          \"echoCancellation\": true\n        }, {\n          \"mozAutoGainControl\": true\n        }, {\n          \"mozNoiseSuppression\": true\n        }]\n      },\n      video: {\n        \"width\": {\n          \"min\": \"640\",\n          \"ideal\": \"1280\"\n        },\n        \"height\": {\n          \"min\": \"360\",\n          \"ideal\": \"720\"\n        }\n      }\n    },\n    selfViewConfig: {\n      autoplay: true,\n      mirror: true,\n      muted: true\n    },\n    volumeMonitoring: {\n      interval: 300,\n      // polling time (in ms) used for detecting speech/volume change\n      threshold: -50 // Decibel level threshold used to determine speech signals in local audio stream\n\n    }\n  },\n  volumeMonitor: null,\n  isSignallingChannelReady: false,\n  vadCount: 0,\n  constructor: function constructor(options) {\n    _.bindAll(this);\n\n    _.extend(this, Backbone.Events); // override default config with passed in options\n\n\n    this.config = BrowserDetector.browser === 'firefox' ? this.firefoxConfig : this.chromeConfig;\n    this.config = RTCUtils.deepMergeObjects(this.config, options);\n    this.model = new LocalMediaModel();\n    this.localMedia = new LocalMedia(this.config);\n    this.cachedMediaConstraints = this.config.mediaConstraints;\n    RTCTransactionManager.on('receivedConnectResponse', this.onReceiveConnectResponse);\n  },\n  startMedia: function startMedia(constraints, streamType) {\n    var self = this;\n    var deferred = Q.defer();\n    var mediaConstraints = RTCUtils.deepMergeObjects(this.cachedMediaConstraints, constraints);\n    var prevConstraints = this.cachedMediaConstraints;\n\n    this._startMedia(mediaConstraints, streamType).then(function (streamList) {\n      deferred.resolve(streamList);\n      self.detectDeviceChange(prevConstraints, mediaConstraints);\n    }, function (error) {\n      deferred.reject(error);\n    });\n\n    this.cachedMediaConstraints = mediaConstraints;\n    return deferred.promise;\n  },\n  _startMedia: function _startMedia(constraints, streamType) {\n    var deferred = Q.defer();\n    var self = this;\n    var micPreferenceChanged = this.hasMicPreferenceChanged(this.cachedMediaConstraints, constraints);\n    var cameraPreferenceChanged = this.hasCameraPreferenceChanged(this.cachedMediaConstraints, constraints);\n    var streamList = [];\n    var skip = false; //Use the local_stream for preview_stream is the camera and mic prefrence have not changed\n\n    if (BrowserDetector.browser === 'firefox' && streamType === 'preview_stream' && !micPreferenceChanged && !cameraPreferenceChanged) {\n      var localStream = this.model.get('localStream');\n      this.stopPreviewStream();\n\n      if (!_.isUndefined(localStream) && !_.isNull(localStream)) {\n        var previewStream = localStream.clone();\n        previewStream.bjn_label = 'preview_stream';\n        previewStream.getTracks().forEach(function (track) {\n          track.enabled = true;\n        });\n        this.model.set('previewStream', previewStream);\n        streamList.push(previewStream);\n        deferred.resolve(streamList);\n        skip = true;\n      }\n    }\n\n    if (!skip) {\n      //Remove all streams before requesting the new streams\n      if (BrowserDetector.browser === 'firefox') {\n        this.stopLocalStreams();\n        this.stopPreviewStream();\n        this.stopVolumeMonitor();\n        this.stopLocalStreamClone();\n      }\n\n      if (BrowserDetector.browser === 'firefox' && constraints.audio === false && constraints.video === false) {\n        //FF fails the call if both A/V device are not present. To avoid it create\n        //fake streams for both audio and video and to continue with the call\n        streamList = self.startMediaSuccess({\n          stream: null,\n          type: streamType,\n          micChanged: false,\n          cameraChanged: false\n        });\n        deferred.reject(RTCErrors.GET_LOCAL_MEDIA_STATES.DevicesNotFoundError);\n      } else {\n        this.localMedia.start(constraints, function (error, stream) {\n          if (error) {\n            var gumError = RTCErrors.translateGetUserMediaError(error);\n            Logger.error('RTCLocalMediaManager: Error in get user media: ', JSON.stringify(gumError));\n            deferred.reject(gumError);\n          } else {\n            self.startMediaSuccess({\n              stream: stream,\n              type: streamType,\n              micChanged: micPreferenceChanged,\n              cameraChanged: cameraPreferenceChanged\n            }).then(function (streamList) {\n              deferred.resolve(streamList);\n            });\n          }\n        });\n      }\n    }\n\n    return deferred.promise;\n  },\n  startMediaSuccess: function startMediaSuccess(params) {\n    var previewStream = null;\n    var localStream = params.stream;\n    var localStreamClone = null;\n    var localVideoMuted = this.model.get('localVideoMuted');\n    var streamList = [];\n    var self = this;\n    var deferred = Q.defer();\n    if (BrowserDetector.browser === 'firefox' && localStream) this.saveLocalStream(localStream);\n\n    if (params.type === 'local_stream') {\n      this.createLocalStreams(localStream).then(function (localStreamList) {\n        deferred.resolve(localStreamList);\n      });\n      return deferred.promise;\n    } else {\n      this.stopPreviewStream();\n      previewStream = localStream;\n      previewStream.bjn_label = 'preview_stream';\n\n      previewStream.onended = function () {\n        Logger.warn('RTCLocalMediaManager: Preview stream has ended. Id: ', this.id);\n      };\n\n      streamList.push(previewStream);\n\n      if (params.micChanged || !localVideoMuted && params.cameraChanged || params.cameraChanged && BrowserDetector.browser === 'firefox') {\n        this.stopLocalStreams();\n        localStreamClone = localStream.clone();\n        this.model.set('previewStream', previewStream);\n        this.createLocalStreams(localStreamClone).then(function (localStreamList) {\n          streamList = streamList.concat(localStreamList);\n          self.trigger('localStreamsChanged');\n          deferred.resolve(streamList);\n        });\n        return deferred.promise;\n      } else {\n        this.model.set('previewStream', previewStream);\n        deferred.resolve(streamList);\n        return deferred.promise;\n      }\n    }\n  },\n  createLocalStreams: function createLocalStreams(localStream) {\n    var deferred = Q.defer();\n    var localStreamClone = null;\n    var streamList = [];\n    var self = this;\n    var promises = [];\n    if (this.hasVideoTracks(localStream) && this.hasAudioTracks(localStream)) localStreamClone = localStream.clone();else localStreamClone = localStream;\n    promises.push(this.extractAudioOnlyStream(localStream).then(function (localAudioStream) {\n      if (localAudioStream) {\n        streamList.push(localAudioStream);\n        self.model.set('localAudioStream', localAudioStream);\n      }\n    }, function (error) {\n      Logger.error(\"RTCLocalMediaManager :: error while extracting audio stream\", error);\n    }));\n    promises.push(this.extractVideoOnlyStream(localStreamClone).then(function (localVideoStream) {\n      if (localVideoStream) {\n        streamList.push(localVideoStream);\n        self.model.set('localVideoStream', localVideoStream);\n      }\n    }, function (error) {\n      Logger.error(\"RTCLocalMediaManager :: error while extracting audio stream\", error);\n    }));\n    Q.all(promises).then(function () {\n      deferred.resolve(streamList);\n    }, function (err) {\n      Logger.error('RTCLocalMediaManager: Failed to create local streams');\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  },\n  saveLocalStream: function saveLocalStream(stream) {\n    var oldStream = this.model.get('localStream');\n\n    if (oldStream) {\n      this.localMedia.stop(oldStream);\n      oldStream = null;\n    }\n\n    var newStream = stream.clone();\n    newStream.getTracks().forEach(function (track) {\n      track.enabled = false;\n    });\n    newStream.label = 'local_stream';\n    this.model.set('localStream', newStream);\n  },\n  hasMicPreferenceChanged: function hasMicPreferenceChanged(prevConstraints, newConstraints) {\n    var prevMicId = this.getSourceId(prevConstraints.audio);\n    var newMicId = this.getSourceId(newConstraints.audio);\n    return !_.isNull(newMicId) && prevMicId !== newMicId ? true : false;\n  },\n  hasCameraPreferenceChanged: function hasCameraPreferenceChanged(prevConstraints, newConstraints) {\n    var prevCameraId = this.getSourceId(prevConstraints.video);\n    var newCameraId = this.getSourceId(newConstraints.video);\n    return !_.isNull(newCameraId) && prevCameraId !== newCameraId ? true : false;\n  },\n  getSourceId: function getSourceId(constraints) {\n    var sourceId = null;\n\n    if (constraints.deviceId) {\n      sourceId = constraints.deviceId;\n    }\n\n    return sourceId;\n  },\n  hasAudioTracks: function hasAudioTracks(stream) {\n    return stream && stream.getAudioTracks().length > 0;\n  },\n  hasVideoTracks: function hasVideoTracks(stream) {\n    return stream && stream.getVideoTracks().length > 0;\n  },\n  extractAudioOnlyStream: function extractAudioOnlyStream(stream) {\n    var deferred = Q.defer();\n    var muteAudio = this.model.get('localAudioMuted');\n    var self = this;\n\n    var setAudioProperty = function setAudioProperty(audioStream) {\n      // If local audio is currently been muted, Mute the new audio stream as well.\n      if (muteAudio) {\n        audioStream.getAudioTracks().forEach(function (track) {\n          track.enabled = !muteAudio;\n        });\n      }\n\n      audioStream.bjn_label = 'local_audio_stream';\n\n      audioStream.getAudioTracks()[0].onended = function () {\n        Logger.warn('RTCLocalMediaManager: Local Audio track has ended. Id: ', this.id);\n        self.model.set('localAudioStream', null);\n      };\n\n      return audioStream;\n    };\n\n    if (this.hasAudioTracks(stream)) {\n      var audioStream = stream;\n\n      if (audioStream.getVideoTracks().length > 0) {\n        audioStream.getVideoTracks()[0].stop();\n        audioStream.removeTrack(audioStream.getVideoTracks()[0]);\n      }\n\n      audioStream = setAudioProperty(audioStream);\n      deferred.resolve(audioStream);\n    } else if (BrowserDetector.browser === 'firefox') {\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        fake: true\n      }).then(function (fakeStream) {\n        var audioStream = fakeStream; //Set mute state to true while creating a fake stream\n\n        muteAudio = true;\n        audioStream = setAudioProperty(audioStream);\n        deferred.resolve(audioStream);\n      }, function (error) {\n        Logger.debug(\"RTCLocalMediaManager :: Error creating audio fake stream\");\n        deferred.reject(error);\n      });\n    } else {\n      deferred.resolve(null);\n    }\n\n    return deferred.promise;\n  },\n  extractVideoOnlyStream: function extractVideoOnlyStream(stream) {\n    var deferred = Q.defer();\n    var muteVideo = this.model.get('localVideoMuted');\n    var self = this;\n\n    var setVideoProperty = function setVideoProperty(videoStream, isFFFakeStream) {\n      if (muteVideo) {\n        videoStream.getVideoTracks().forEach(function (track) {\n          if (BrowserDetector.browser === 'firefox' && !isFFFakeStream) track.enabled = !muteVideo;else track.stop();\n        });\n      }\n\n      videoStream.bjn_label = 'local_video_stream';\n\n      videoStream.getVideoTracks()[0].onended = function () {\n        Logger.warn('RTCLocalMediaManager: Local Video track has ended. Id: ', this.id);\n        self.model.set('localVideoStream', null);\n      };\n\n      return videoStream;\n    };\n\n    if (this.hasVideoTracks(stream)) {\n      var videoStream = stream;\n\n      if (videoStream.getAudioTracks().length > 0) {\n        videoStream.getAudioTracks()[0].stop();\n        videoStream.removeTrack(videoStream.getAudioTracks()[0]);\n      }\n\n      videoStream = setVideoProperty(videoStream, false);\n      deferred.resolve(videoStream);\n    } else if (BrowserDetector.browser === 'firefox') {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        fake: true\n      }).then(function (fakeStream) {\n        var videoStream = fakeStream; //Set mute state to true while creating a fake stream\n\n        muteVideo = true;\n        videoStream = setVideoProperty(videoStream, true);\n        deferred.resolve(videoStream);\n      }, function (error) {\n        Logger.debug(\"RTCLocalMediaManager :: Error creating fake stream\");\n        deferred.reject(error);\n      });\n    } else {\n      deferred.resolve(null);\n    }\n\n    return deferred.promise;\n  },\n  stopLocalStreams: function stopLocalStreams() {\n    this.stopLocalAudioStream();\n    this.stopLocalVideoStream();\n  },\n  stopLocalAudioStream: function stopLocalAudioStream() {\n    this.stopMedia(this.model.get('localAudioStream'), 'localAudioStream');\n  },\n  stopLocalVideoStream: function stopLocalVideoStream() {\n    this.stopMedia(this.model.get('localVideoStream'), 'localVideoStream');\n  },\n  stopPreviewStream: function stopPreviewStream() {\n    this.stopMedia(this.model.get('previewStream'), 'previewStream');\n  },\n  stopLocalStreamClone: function stopLocalStreamClone() {\n    this.stopMedia(this.model.get('localStream'), 'localStream');\n  },\n  stopMedia: function stopMedia(stream, streamType) {\n    if (!_.isNull(stream) && !_.isUndefined(stream)) {\n      //var streamType = RTCUtils.getLocalStreamType(stream);\n      this.localMedia.stop(stream);\n      Logger.debug(\"RTCLocalMediaManager: \" + streamType + \" has been stopped.\");\n      this.model.set(streamType, null, {\n        silent: true\n      });\n    }\n  },\n  renderStream: function renderStream(params) {\n    params.config = _.defaults({\n      autoplay: true,\n      mirror: false,\n      muted: false\n    }, params.config);\n    return this.attachMediaStream(params);\n  },\n  renderSelfView: function renderSelfView(params) {\n    params.config = _.defaults(this.config.selfViewConfig, params.config);\n    return this.attachMediaStream(params);\n  },\n  attachMediaStream: function attachMediaStream(params) {\n    if (!params.stream || !params.el) {\n      Logger.error('RTCLocalMediaManager: Incorrect params passed to attachmediastream API. stream: ' + params.stream + ', el: ' + params.el);\n      return null;\n    }\n\n    params.el && (params.el.oncontextmenu = function () {\n      return false;\n    });\n    return _attachMediaStream(params.stream, params.el, params.config);\n  },\n  getDevices: function getDevices() {\n    var self = this;\n    var deferred = Q.defer();\n    var newDevices = {\n      audioIn: [],\n      videoIn: [],\n      audioOut: []\n    };\n    var selectedAudioDevice = \"\";\n    var selectedVideoDevice = \"\";\n    var selected = {\n      audioIn: null,\n      videoIn: null\n    }; //get selected devices,if available\n\n    if (this.model.get('localAudioStream')) {\n      selectedAudioDevice = this.model.get('localAudioStream').getAudioTracks()[0].label;\n    }\n\n    if (this.model.get('localVideoStream')) {\n      selectedVideoDevice = this.model.get('localVideoStream').getVideoTracks()[0].label;\n    }\n\n    var _getDevicesSuccess = function _getDevicesSuccess(devices) {\n      var newDevices = {\n        audioIn: [],\n        videoIn: [],\n        audioOut: []\n      };\n\n      _.each(devices, function (device, i, list) {\n        if (device.kind === 'audio' || device.kind === 'audioinput') {\n          newDevices.audioIn.push(self.translateDeviceInfo(device));\n          if (device.label === selectedAudioDevice) selected.audioIn = device;\n        } else if (device.kind === 'video' || device.kind === 'videoinput') {\n          newDevices.videoIn.push(self.translateDeviceInfo(device));\n          if (device.label === selectedVideoDevice) selected.videoIn = device;\n        } else if (device.kind === 'audiooutput') {\n          newDevices.audioOut.push(self.translateDeviceInfo(device));\n        }\n      });\n\n      self.model.set('availableDevices', newDevices);\n      deferred.resolve({\n        available: newDevices,\n        selected: selected\n      });\n    };\n\n    var _getDevicesFailed = function _getDevicesFailed(error) {\n      deferred.reject(\"Error in navigator.mediaDevices.enumerateDevices API\");\n    };\n\n    if (navigator.mediaDevices.enumerateDevices) {\n      navigator.mediaDevices.enumerateDevices().then(_getDevicesSuccess).catch(_getDevicesFailed);\n    } else if (MediaStreamTrack.getSources) {\n      MediaStreamTrack.getSources(_getDevicesSuccess);\n    } else {\n      deferred.reject(\"Browser doesn't support MediaStreamTrack.getSources API\");\n    }\n\n    return deferred.promise;\n  },\n  translateDeviceInfo: function translateDeviceInfo(device) {\n    var deviceId = device.id || device.deviceId;\n\n    if (device.kind === 'audiooutput') {\n      deviceId = this.transformSpeakerId(deviceId, true);\n    }\n\n    return {\n      id: deviceId,\n      label: device.label,\n      kind: device.kind,\n      facing: device.facing,\n      groupId: device.groupId\n    };\n  },\n  transformSpeakerId: function transformSpeakerId(deviceId, forwardTransform) {\n    var speakerSuffix = \"_speaker\";\n\n    if (forwardTransform) {\n      return deviceId + speakerSuffix;\n    } else {\n      if (deviceId && deviceId.indexOf(speakerSuffix) !== -1) {\n        deviceId = deviceId.split(speakerSuffix)[0];\n      }\n\n      return deviceId;\n    }\n  },\n  updateStream: function updateStream(params) {\n    if (!_.isUndefined(params.remoteStream)) {\n      this.model.set('remoteStream', params.remoteStream);\n    }\n  },\n\n  /* ============================= */\n\n  /*        Mute Controls  \t\t */\n\n  /* ============================= */\n  muteStreams: function muteStreams(muteParams) {\n    var mutePromise = Q.defer();\n    var promises = [];\n\n    if (!_.isUndefined(muteParams.localAudio)) {\n      promises.push(this.muteLocalAudio(muteParams.localAudio));\n    }\n\n    if (!_.isUndefined(muteParams.localVideo)) {\n      promises.push(this.muteLocalVideo(muteParams.localVideo));\n    }\n\n    if (!_.isUndefined(muteParams.remoteAudio)) {\n      promises.push(this.muteRemoteAudio(muteParams.remoteAudio));\n    }\n\n    if (!_.isUndefined(muteParams.remoteVideo)) {\n      promises.push(this.muteRemoteVideo(muteParams.remoteVideo));\n    }\n\n    Q.all(promises).then(function () {\n      mutePromise.resolve();\n    }, function () {\n      Logger.error('RTCLocalMediaManager: Failed to mute local/remote stream');\n    });\n    return mutePromise.promise;\n  },\n  muteLocalAudio: function muteLocalAudio(mute) {\n    var deferred = Q.defer();\n    var stream = this.model.get('localAudioStream');\n    var currentMuteState = this.isAudioMuted(stream);\n    var muteToggled = _.isBoolean(mute) && currentMuteState !== mute;\n\n    if (!muteToggled) {\n      Logger.debug('Local Audio is already ' + (currentMuteState ? \"muted.\" : \"unmuted.\") + \" Ignoring the mute request.\");\n      deferred.resolve();\n      return deferred.promise;\n    }\n\n    if (!_.isNull(stream) && !_.isUndefined(stream)) {\n      Logger.debug('RTCLocalMediaManager: ' + (mute ? 'Muting ' : 'Unmuting ') + 'local audio stream now');\n      stream.getAudioTracks().forEach(function (track) {\n        track.enabled = !mute;\n      });\n      this.model.set('localAudioMuted', mute);\n      Logger.debug('RTCLocalMediaManager: Local Audio ', mute ? 'muted' : 'unmuted');\n    } else {\n      Logger.warn('Local Audio stream is null, cannot mute/unmute local audio');\n    }\n\n    deferred.resolve();\n    return deferred.promise;\n  },\n  muteLocalVideo: function muteLocalVideo(mute) {\n    var deferred = Q.defer();\n    var currentMuteState = this.model.get('localVideoMuted');\n    var muteToggled = _.isBoolean(mute) && currentMuteState !== mute;\n\n    if (!muteToggled) {\n      Logger.debug('Local Video is already ' + (currentMuteState ? \"muted.\" : \"unmuted.\") + \" Ignoring the mute request.\");\n      deferred.resolve();\n      return deferred.promise;\n    }\n\n    mute ? this._stopLocalVideo(deferred) : this._resumeLocalVideo(deferred);\n    return deferred.promise;\n  },\n  _stopLocalVideo: function _stopLocalVideo(deferred) {\n    var stream = null;\n    var self = this;\n    stream = this.model.get('localVideoStream');\n\n    if (!_.isNull(stream) && !_.isUndefined(stream)) {\n      Logger.debug('RTCLocalMediaManager: Stopping/Muting local video stream now');\n      stream.getVideoTracks().forEach(function (track) {\n        if (BrowserDetector.browser === 'firefox') track.enabled = false;else track.stop();\n      });\n      Logger.debug('RTCLocalMediaManager: Local Video muted');\n    } else {\n      Logger.warn('Local Video stream is null, cannot mute/unmute local video');\n    }\n\n    this.model.set('localVideoMuted', true);\n    deferred.resolve();\n  },\n  _resumeLocalVideo: function _resumeLocalVideo(deferred) {\n    var self = this;\n    var mediaConstraints = RTCUtils.deepMergeObjects(this.cachedMediaConstraints, {\n      audio: false\n    });\n    this.model.set('localVideoMuted', false);\n\n    if (BrowserDetector.browser === 'firefox') {\n      var stream = this.model.get('localVideoStream');\n\n      if (!_.isNull(stream) && !_.isUndefined(stream)) {\n        stream.getVideoTracks().forEach(function (track) {\n          track.enabled = true;\n        });\n      }\n\n      deferred.resolve();\n    } else {\n      this._startMedia(mediaConstraints, 'local_stream').then(function (streams) {\n        Logger.debug('RTCLocalMediaManager: Local Video unmuted');\n        deferred.resolve();\n      }, function (error) {\n        Logger.warn('RTCLocalMediaManager: Failed to get local video stream: ' + error);\n        deferred.resolve();\n      });\n    }\n  },\n  muteRemoteAudio: function muteRemoteAudio(mute) {\n    var deferred = Q.defer();\n    var stream = this.model.get('remoteStream');\n\n    if (!_.isNull(stream) && !_.isUndefined(stream)) {\n      stream.getAudioTracks().forEach(function (track) {\n        track.enabled = !mute;\n      });\n      this.model.set('remoteAudioMuted', mute);\n    } else {\n      Logger.warn('Remote stream is null, cannot mute/unmute remote audio');\n    }\n\n    deferred.resolve();\n    return deferred.promise;\n  },\n  muteRemoteVideo: function muteRemoteVideo(mute) {\n    var deferred = Q.defer();\n    var stream = this.model.get('remoteStream');\n\n    if (!_.isNull(stream) && !_.isUndefined(stream)) {\n      stream.getVideoTracks().forEach(function (track) {\n        track.enabled = !mute;\n      });\n      this.model.set('remoteVideoMuted', mute);\n    } else {\n      Logger.warn('Remote stream is null, cannot mute/unmute remote video');\n    }\n\n    deferred.resolve();\n    return deferred.promise;\n  },\n  isAudioMuted: function isAudioMuted(stream) {\n    var isMuted = true;\n\n    if (!_.isNull(stream) && !_.isUndefined(stream)) {\n      stream.getAudioTracks().forEach(function (track) {\n        isMuted = isMuted && !track.enabled;\n      });\n    }\n\n    return isMuted;\n  },\n\n  /* ============================= */\n\n  /*    Volume/Speech Monitoring   */\n\n  /* ============================= */\n  startVolumeMonitor: function startVolumeMonitor(stream, options) {\n    _.extend(this.config.volumeMonitoring, options);\n\n    var monitoredStream = stream.clone();\n    monitoredStream.getAudioTracks().forEach(function (track) {\n      track.enabled = true;\n    });\n    monitoredStream.getVideoTracks().forEach(function (track) {\n      track.stop();\n    });\n    this.volumeMonitor = Hark(monitoredStream, options);\n    this.volumeMonitor.monitoredStream = monitoredStream;\n    this.volumeMonitor.on('volume_change', this.volumeLevelChanged);\n    Logger.debug(\"RTCLocalMediaManager: Started volume monitor\");\n  },\n  volumeLevelChanged: function volumeLevelChanged(volume, speechThreshold) {\n    // Normalize volume to be between [0, 10] - values received are between -30 to -100 decibels\n    var avgVolume = Math.abs(1 - Math.abs(volume / 100));\n\n    if (typeof avgVolume === 'number') {\n      avgVolume = parseFloat(avgVolume.toFixed(3));\n    }\n\n    var normalizedVolume = avgVolume < 1 ? avgVolume : 0;\n    this.model.set('volumeLevel', normalizedVolume);\n    this.checkIfSpeaking(volume);\n  },\n  checkIfSpeaking: function checkIfSpeaking(vol) {\n    var spFrameMs = 20; //frame size in ms. for now it's dsp frame size. Can be much bigger for non-real time app\n\n    var vadOnThreshold = 140 / spFrameMs; // # of speech frames to turn on VAD\n\n    var vadHangOverThreshold = 260 / spFrameMs; // # of speech frames to turn off VAD after it's on\n\n    if (vol >= this.config.volumeMonitoring.threshold) {\n      this.vadCount++;\n\n      if (this.vadCount >= vadOnThreshold) {\n        //secure the vad after solid vadOnThrd counts of above threshold\n        this.vadCount = vadHangOverThreshold + vadOnThreshold;\n      }\n    } else {\n      this.vadCount--;\n\n      if (this.vadCount < vadOnThreshold) {\n        this.vadCount = 0; //reset it to exclude noises\n      }\n    }\n\n    this.model.set('isSpeaking', this.vadCount >= vadOnThreshold ? true : false); //console.log(\"volume: \" + vol + \", vadCount: \"+ this.vadCount);\n  },\n  stopVolumeMonitor: function stopVolumeMonitor() {\n    if (!_.isNull(this.volumeMonitor)) {\n      Logger.debug(\"RTCLocalMediaManager: Stopping volume monitor\");\n\n      if (this.volumeMonitor.monitoredStream) {\n        this.volumeMonitor.monitoredStream.getTracks().forEach(function (track) {\n          track.stop();\n        });\n        this.volumeMonitor.monitoredStream = null;\n      }\n\n      this.volumeMonitor.stop();\n    }\n  },\n  setSpeaker: function setSpeaker(params) {\n    var self = this;\n    var mediaElements = params.mediaElements;\n    var speakerDeviceId = params.speakerId;\n\n    _.each(mediaElements, function (element) {\n      if (element && typeof element.setSinkId === 'function' && speakerDeviceId) {\n        element.setSinkId(self.transformSpeakerId(speakerDeviceId, false));\n      }\n    });\n\n    if (speakerDeviceId && speakerDeviceId !== this.model.get('selectedSpeaker')) {\n      this.model.set('selectedSpeaker', speakerDeviceId);\n      this.sendDeviceInfo();\n    }\n  },\n  detectCameraStatus: function detectCameraStatus(streamType) {\n    var videoTrack,\n        self = this;\n    var deferred = Q.defer();\n    var stream = streamType === 'local_stream' ? this.model.get('localVideoStream') : this.model.get('previewStream');\n\n    if (stream && typeof stream.getVideoTracks === 'function') {\n      videoTrack = stream.getVideoTracks()[0];\n\n      if (videoTrack) {\n        window.setTimeout(function () {\n          var videoMuteState = streamType === 'local_stream' ? self.model.get('localVideoMuted') : false;\n\n          if (videoTrack.readyState === 'ended' && !videoMuteState) {\n            Logger.warn('RTCLocalMediaManager: Camera feed is unavailable, faulty camera or its in use by another program');\n            deferred.resolve(RTCErrors.GET_LOCAL_MEDIA_STATES.SOURCE_UNAVAILABLE);\n          } else {\n            deferred.resolve(RTCErrors.GET_LOCAL_MEDIA_STATES.AVAILABLE);\n          }\n        }, 500);\n      } else {\n        Logger.warn(\"RTCLocalMediaManager: Stream doesn't have any video tracks\");\n        deferred.resolve(RTCErrors.GET_LOCAL_MEDIA_STATES.SOURCE_UNAVAILABLE);\n      }\n    } else {\n      deferred.resolve(RTCErrors.GET_LOCAL_MEDIA_STATES.DEVICES_NOT_FOUND);\n    }\n\n    return deferred.promise;\n  },\n  detectDeviceChange: function detectDeviceChange(previousConstraints, newConstraints) {\n    var micPreferenceChanged = this.hasMicPreferenceChanged(previousConstraints, newConstraints);\n    var cameraPreferenceChanged = this.hasCameraPreferenceChanged(previousConstraints, newConstraints);\n    this.model.set('selectedCamera', this.getSourceId(newConstraints.video));\n    this.model.set('selectedMic', this.getSourceId(newConstraints.audio));\n\n    if (micPreferenceChanged || cameraPreferenceChanged) {\n      this.sendDeviceInfo();\n    }\n  },\n  sendDeviceInfo: function sendDeviceInfo() {\n    if (!this.isSignallingChannelReady) return;\n    var micId = this.model.get('selectedMic');\n    var cameraId = this.model.get('selectedCamera');\n    var speakerId = this.model.get('selectedSpeaker');\n    var micLabel = this.getDeviceLabel(micId, 'audioIn');\n    var cameraLabel = this.getDeviceLabel(cameraId, 'videoIn');\n    var speakerLabel = this.getDeviceLabel(speakerId, 'audioOut');\n    Logger.debug('RTCLocalMediaManager: Devices in use, ' + 'Mic - ' + micLabel + ', Camera - ' + cameraLabel + ', Speaker - ' + speakerLabel);\n    var deviceInfoMessage = RTCBlueJay.getInfoMsg({\n      \"type\": \"deviceinfo\",\n      \"device\": {\n        \"input\": {\n          \"audio\": micLabel,\n          \"video\": cameraLabel\n        },\n        \"output\": {\n          \"audio\": speakerLabel,\n          \"video\": \"Default\"\n        }\n      }\n    });\n    RTCSignallingManager.sendMsg(deviceInfoMessage);\n    RTCTransactionManager.onBlueJayRequest(deviceInfoMessage);\n  },\n  getDeviceLabel: function getDeviceLabel(deviceId, deviceType) {\n    var deviceLabel = null;\n    var availableDevices = this.model.get('availableDevices');\n\n    _.each(availableDevices[deviceType], function (device, i, list) {\n      if (device.id === deviceId) {\n        deviceLabel = device.label;\n      }\n    });\n\n    return deviceLabel;\n  },\n  onReceiveConnectResponse: function onReceiveConnectResponse() {\n    this.isSignallingChannelReady = true;\n  },\n  close: function close() {\n    this.stopMediaCapture();\n    this.isSignallingChannelReady = false;\n    this.model.clear().set(LocalMediaModel.defaults);\n  },\n  stopMediaCapture: function stopMediaCapture() {\n    this.stopLocalStreams();\n    this.stopPreviewStream();\n    this.stopLocalStreamClone();\n    this.cachedMediaConstraints.audio.deviceId = null;\n    this.cachedMediaConstraints.video.deviceId = null;\n  }\n});\nmodule.exports = RTCLocalMediaManager;\n\n//# sourceURL=webpack:///./src/rtc-local-media-manager.js?");

/***/ }),

/***/ "./src/rtc-manager.js":
/*!****************************!*\
  !*** ./src/rtc-manager.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n* Blue Jeans WebRTC BJNRTCManager\n* ==============================================================================\n* Wrapper to control events between WebRTC SDK Client and BJN Seam API JS Lib\n* @version In bower.json\n*\n*/\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar RTCController = __webpack_require__(/*! ./rtc-controller */ \"./src/rtc-controller.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar SecurePerimeterClient = __webpack_require__(/*! ./client-sdk/clients/secure-perimeter-client */ \"./src/client-sdk/clients/secure-perimeter-client.js\");\n\nvar EVSC = __webpack_require__(/*! ./client-sdk/clients/event-service-client */ \"./src/client-sdk/clients/event-service-client.js\");\n\nvar SchedulingClient = __webpack_require__(/*! ./client-sdk/clients/scheduling-client */ \"./src/client-sdk/clients/scheduling-client.js\");\n\nvar BrowserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar RTCManager = my.Class({\n  constructor: function constructor(params) {\n    if (!(BrowserDetector.browser === \"chrome\" || BrowserDetector.browser === \"firefox\")) {\n      Logger.error(\"Browser not supported !!\");\n      return;\n    }\n\n    this.EventServiceClient = EVSC();\n\n    _.bindAll(this);\n\n    _.extend(this, Backbone.Events);\n\n    this.initialize(params);\n    this.aggregateAPIResponse = null;\n    this.meeting = null;\n    this.reconnectInterval = 1000;\n    this.bjnCloudTimeout = 5000;\n    this.bjnSIPTimeout = 3000;\n    this.bjnWebRTCReconnectTimeout = 90000;\n    this.isVolumeMonitorStarted = false;\n    this.maxBandwidth = 1200;\n    this.config = {\n      environment: {\n        hostname: \"https://bluejeansdev.com\"\n      },\n      meeting: {\n        meetingNumericId: \"\",\n        attendeePasscode: \"\"\n      },\n      user: {\n        name: \"Testclient\",\n        leaderId: 14659,\n        userToken: \"186731bd52f8478090444d7c5862f7bd\"\n      },\n      events: [\"meeting\", \"endpoint\"]\n    };\n  },\n  initialize: function initialize(params) {\n    this.rtcController = new RTCController(params.webrtcParams);\n    this.webrtcParams = params.webrtcParams;\n    this.setupRTCControllerCB();\n    this.setupRTCControllerListeners(); // Set SIP and WebRTC EP timeouts, if they are not received in\n    // params, use the default values\n\n    if (params.bjnSIPTimeout) {\n      this.bjnSIPTimeout = params.bjnSIPTimeout;\n    }\n\n    if (params.bjnWebRTCReconnectTimeout) {\n      this.bjnWebRTCReconnectTimeout = params.bjnWebRTCReconnectTimeout;\n    }\n\n    if (params.bjnCloudTimeout) {\n      this.bjnCloudTimeout = params.bjnCloudTimeout;\n    }\n\n    this.meetingInfo = null; //Init event handlers\n\n    this.localEndPointStateChange = null;\n    this.remoteEndPointStateChange = null;\n    this.remoteStreamChange = null;\n    this.remoteMuteChange = null;\n    this.localVideoStreamChange = null;\n    this.localAudioStreamChange = null;\n    this.error = null; //this.endMeeting                = null;\n\n    this.fakeStream = null;\n    this.contentStreamChange = null;\n\n    if (BrowserDetector.browser === \"firefox\") {\n      this.createFakeStream();\n    }\n  },\n  setBandwidth: function setBandwidth(bw) {\n    if (bw >= 100 && bw <= 4096) {\n      this.maxBandwidth = bw;\n    }\n  },\n  getServiceClient: function getServiceClient() {\n    return this.EventServiceClient;\n  },\n  setupRTCControllerCB: function setupRTCControllerCB() {\n    this.getLocalMedia = this.rtcController.getLocalMedia;\n    this.getLocalDevices = this.rtcController.getLocalDevices;\n    this.setSpeaker = this.rtcController.setSpeaker;\n    this.renderSelfView = this.rtcController.renderSelfView;\n    this.renderStream = this.rtcController.renderStream;\n    this.muteStreams = this.rtcController.muteStreams;\n    this.makeCall = this.rtcController.makeCall;\n  },\n  setupRTCControllerListeners: function setupRTCControllerListeners() {\n    this.rtcController.model.on('change:callState', this.onCallStateChange);\n    this.rtcController.model.on('change:localAudioStream', this.onLocalAudioStreamChange);\n    this.rtcController.model.on('change:localVideoStream', this.onLocalVideoStreamChange);\n    this.rtcController.model.on('change:previewStream', this.onPreviewStreamChange);\n    this.rtcController.model.on('change:remoteStream', this.onRemoteStreamChange);\n    this.rtcController.model.on('change:isIceRestarted', this.onIceRestart);\n    this.rtcController.model.on('change:presentationToken', this.onPresentationTokenUpdated.bind(this));\n  },\n  startMeeting: function startMeeting(params) {\n    var self = this;\n\n    if (!params.numericMeetingId || !params.displayName) {\n      if (this.error) {\n        this.error('invalidMeetingParams');\n      }\n\n      Logger.error(\"Meeting id or display name cannot be empty\");\n      return;\n    }\n\n    this.getPairingCodeAndInitCall(params);\n    this.initBJNCloudConnectionTimer();\n  },\n  WebRTCPairing: function WebRTCPairing() {\n    var self = this;\n    this.meeting.oauthInfo = this.aggregateAPIResponse.oauthInfo;\n    SecurePerimeterClient.webRTCPairing(self.meeting, function (err, webRTCPairingResult) {\n      if (err) {\n        Logger.error(err); //self.error('bjnCloudUnreachable');\n        //self.clearBJNCloudConnectionTimer();\n        //self.endMeeting();\n      } else {\n        self.clearReconnectTimer();\n        self.clearBJNCloudConnectionTimer();\n        self.initWebRTCCall(JSON.parse(webRTCPairingResult));\n        self.connectEventService(self.aggregateAPIResponse);\n      }\n    });\n  },\n  getPairingCodeAndInitCall: function getPairingCodeAndInitCall(meetingParams) {\n    //Add more params and function CBs\n    var self = this;\n    this.meetingInfo = meetingParams;\n    self.meeting = {};\n    self.meeting.meetingNumericId = meetingParams.numericMeetingId;\n    if (meetingParams.attendeePasscode) self.meeting.meetingPasscode = meetingParams.attendeePasscode;\n    SecurePerimeterClient.aggregatePairing(self.meeting, function (err, aggregateResult) {\n      if (err) {\n        Logger.debug(\"could not get response of aggregate Pairing \", err);\n      } else {\n        self.aggregateAPIResponse = JSON.parse(aggregateResult);\n        Logger.debug(\"main: aggregatePairing response = \", self.aggregateAPIResponse);\n        self.WebRTCPairing();\n      }\n    });\n  },\n  connectEventService: function connectEventService(params) {\n    var self = this;\n    this.EventServiceClient.roster.collection.bind(\"add\", function (participant, collection, options) {\n      //Logger.debug(\"bind onAdd: \" + participant.id + participant.attributes.name , participant);\n      self.clearSipConnectionTimer();\n      if (self.remoteEndPointStateChange) self.remoteEndPointStateChange('connected');\n    });\n    this.EventServiceClient.roster.collection.bind(\"change:isSendingAudio\", function (participant, collection, options) {//Logger.debug(\"bind change:isSendingAudio \" , participant.id + participant.attributes.name , participant);\n    });\n    this.EventServiceClient.roster.collection.bind(\"change:isSendingVideo\", function (participant, collection, options) {//Logger.debug(\"bind change:isSendingVideo \" , participant.id + participant.attributes.name , participant);\n    });\n    this.EventServiceClient.roster.collection.bind(\"remove\", function (participant, collection, options) {\n      //Logger.debug(\"bind onRemove: \" , participant.id + participant.attributes.name , participant);\n      if (self.remoteEndPointStateChange) self.remoteEndPointStateChange('disconnected');\n    });\n    this.EventServiceClient.connect(params, this.config, function (err, result) {\n      if (err) {\n        Logger.debug(\"Event Service: connect error\");\n\n        if (self.error) {\n          Logger.error(err);\n          self.error('bjnCloudUnreachable');\n          self.clearBJNCloudConnectionTimer();\n          self.endMeeting();\n        }\n      }\n    });\n  },\n  disconntEventService: function disconntEventService() {\n    this.EventServiceClient.close();\n  },\n\n  /* Call Seam API with meeting id to generate access token\n    * Make a pairing API call\n    * meetingParams : {\n      userName :\n      numericMeetingId :\n      attendeePassCode :\n      webrtcLocalStream : App has to create using getLocalMedia\n  } */\n  initWebRTCCall: function initWebRTCCall(webrtcPairingRsp) {\n    Logger.debug(\"RTCManager :: WebRTC Pairing response \", JSON.stringify(webrtcPairingRsp));\n    var callParams = {\n      sockUrl: webrtcPairingRsp.uri,\n      sessionId: webrtcPairingRsp.pairingCode,\n      endpointDetails: {\n        displayName: this.meetingInfo.displayName,\n        endpointType: \"Browser\",\n        browserUserAgent: window.navigator.userAgent\n      },\n      maxBandwidth: this.maxBandwidth\n    };\n    var peerConfig = this.webrtcParams.peerConfig;\n    peerConfig.peerConnectionConfig.iceServers = webrtcPairingRsp.turnservers;\n    var peerParams = {\n      peerConfig: peerConfig,\n      localVideoStream: this.getMediaStream('localVideoStream'),\n      localAudioStream: this.getMediaStream('localAudioStream')\n    };\n    if (BrowserDetector.browser === \"firefox\") peerParams.fakeStream = this.fakeStream;\n    this.makeCall(peerParams, callParams);\n  },\n  stopLocalStreams: function stopLocalStreams() {\n    var localVideoStream = this.getMediaStream('localVideoStream');\n    var localAudioStream = this.getMediaStream('localAudioStream');\n\n    if (!_.isNull(localAudioStream) && !_.isUndefined(localAudioStream)) {\n      this.rtcController.stopLocalMedia(localAudioStream);\n    }\n\n    if (!_.isNull(localVideoStream) && !_.isUndefined(localVideoStream)) {\n      this.rtcController.stopLocalMedia(localVideoStream);\n    }\n  },\n  getMediaStream: function getMediaStream(streamType) {\n    var stream = this.rtcController.model.get(streamType);\n\n    if (stream) {\n      return stream;\n    } else {\n      return null;\n    }\n  },\n  getCurrentState: function getCurrentState(endpointType) {\n    if (endpointType === 'local') {\n      return this.rtcController.model.get('callState');\n    } else {\n      return this.getRemoteCallState();\n    }\n  },\n  getCurrentMuteStates: function getCurrentMuteStates(endpointType) {\n    //this information can be retrived from the SEAM apis\n    if (endpointType === 'local') {\n      return {\n        'audio': this.rtcController.model.get('audioMuted'),\n        'video': this.rtcController.model.get('videoMuted')\n      };\n    }\n  },\n  // RTCContoller model change handlers\n  onCallStateChange: function onCallStateChange(model) {\n    var self = this;\n    var callState = model.get('callState');\n\n    switch (callState) {\n      case 'connected':\n        this.clearWebrtcReconnectTimer();\n        break;\n\n      case 'disconnected':\n        //start the webrtc reconnection timer\n        //reconnect the webrtc call\n        var disconnectCode = this.rtcController.model.get('disconnectCode');\n\n        if (disconnectCode / 100 !== 2) {\n          self.initReconnectTimer();\n          self.initWebrtcReconnectTimer();\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (this.localEndPointStateChange) this.localEndPointStateChange(callState);\n  },\n  onRemoteStreamChange: function onRemoteStreamChange(model) {\n    var remoteStream = model.get('remoteStream');\n    if (this.remoteStreamChange && remoteStream) this.remoteStreamChange(remoteStream);\n  },\n  onLocalVideoStreamChange: function onLocalVideoStreamChange(model) {\n    if (this.localVideoStreamChange) this.localVideoStreamChange(model.get('localVideoStream'));\n  },\n  onLocalAudioStreamChange: function onLocalAudioStreamChange(model) {\n    if (this.localAudioStreamChange) this.localAudioStreamChange(model.get('localAudioStream'));\n  },\n  onPresentationTokenUpdated: function onPresentationTokenUpdated(model) {\n    var token = model.get('presentationToken');\n\n    if (token && token.type === 'contentindication') {\n      if (this.isScreenShareOn && token.callGuid === \"null\") {\n        // currently sharing, but want to end\n        this.isScreenShareOn = false;\n        this.onContentStreamUpdated(null);\n      } else if (!this.isScreenShareOn && token.callGuid && token.callGuid !== \"null\") {\n        // starting to share\n        this.isScreenShareOn = true;\n        var contentStream = model.get('remoteContentStream');\n        if (contentStream) this.onContentStreamUpdated(contentStream);\n      } else if (!this.isScreenShareOn && !token.callGuid) {\n        // not sharing, and desire to end share\n        this.onContentStreamUpdated(null);\n      }\n\n      ;\n    }\n  },\n  onContentStreamUpdated: function onContentStreamUpdated(stream) {\n    if (this.contentStreamChange) this.contentStreamChange(stream);\n  },\n  initWebrtcReconnectTimer: function initWebrtcReconnectTimer() {\n    var self = this;\n\n    if (!self.webrtcReconnectTimer) {\n      self.webrtcReconnectTimer = window.setTimeout(function () {\n        if (self.getCurrentState('local') !== 'connected') {\n          if (self.error) self.error('webrtcReconnectTimeout');\n          self.clearReconnectTimer();\n          self.endMeeting();\n        }\n      }, self.bjnWebRTCReconnectTimeout);\n    }\n  },\n  clearWebrtcReconnectTimer: function clearWebrtcReconnectTimer() {\n    this.webrtcReconnectTimer && window.clearTimeout(this.webrtcReconnectTimer);\n    this.webrtcReconnectTimer = null;\n  },\n  initSipConnectionTimer: function initSipConnectionTimer() {\n    var self = this;\n\n    if (!self.sipConnectionTimer) {\n      self.sipConnectionTimer = window.setTimeout(function () {\n        //if SIP end point is disconnected end the meeting\n        if (self.error) self.error('sipConnectionTimeout');\n        self.endMeeting();\n      }, self.bjnSIPTimeout);\n    }\n  },\n  clearSipConnectionTimer: function clearSipConnectionTimer() {\n    this.sipConnectionTimer && window.clearTimeout(this.sipConnectionTimer);\n    this.sipConnectionTimer = null;\n  },\n  initBJNCloudConnectionTimer: function initBJNCloudConnectionTimer() {\n    var self = this;\n\n    if (!this.bjnCloudConnectiontimer) {\n      this.bjnCloudConnectiontimer = window.setTimeout(function () {\n        if (self.onError) self.onError('bjnCloudUnreachable');\n        self.endMeeting();\n      }, this.bjnCloudTimeout);\n    }\n  },\n  clearBJNCloudConnectionTimer: function clearBJNCloudConnectionTimer() {\n    this.bjnCloudConnectiontimer && window.clearTimeout(this.bjnCloudConnectiontimer);\n    this.bjnCloudConnectiontimer = null;\n  },\n  initReconnectTimer: function initReconnectTimer() {\n    if (this.reconnectInterval < 32000) {\n      this.reconnectInterval *= 2;\n    }\n\n    Logger.debug(\"reconnect interval\" + this.reconnectInterval);\n    this.WebRTCPairing();\n    this.reconnectTimer = window.setTimeout(this.initReconnectTimer, this.reconnectInterval);\n  },\n  getMicrophoneVolume: function getMicrophoneVolume() {\n    if (!this.isVolumeMonitorStarted) {\n      this.rtcController.startVolumeMonitoring(this.rtcController.model.get('localAudioStream'), params = {});\n      this.isVolumeMonitorStarted = true;\n    }\n\n    return this.rtcController.model.get('volumeLevel');\n  },\n  createFakeStream: function createFakeStream(stream) {\n    var self = this;\n\n    if (_.isNull(this.fakeStream)) {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false,\n        fake: true\n      }).then(function (stream) {\n        stream.getVideoTracks().forEach(function (track) {\n          if (track) track.stop();\n        });\n        Logger.debug('RTCManager: Adding fake stream for firefox');\n        stream.bjn_label = \"fake_stream\";\n        self.fakeStream = stream;\n      });\n    }\n  },\n  clearReconnectTimer: function clearReconnectTimer() {\n    this.reconnectTimer && window.clearTimeout(this.reconnectTimer);\n    this.reconnectTimer = null;\n    this.reconnectInterval = 1000;\n  },\n  endMeeting: function endMeeting() {\n    Logger.debug(\"End the meeting\");\n    self.fakeStream = null;\n    this.rtcController.stopVolumeMonitoring();\n    this.isVolumeMonitorStarted = false;\n    this.rtcController.endCall();\n    this.disconntEventService();\n  }\n});\nmodule.exports = RTCManager;\n\n//# sourceURL=webpack:///./src/rtc-manager.js?");

/***/ }),

/***/ "./src/rtc-message-parser.js":
/*!***********************************!*\
  !*** ./src/rtc-message-parser.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n* Blue Jeans WebRTC Signalling Message Parser\n* =====================================================================================\n* @version In bower.json\n* @uses Utility which can understands the custom BJN JSON-RPC protocol: BlueJay\n*\n*/\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCErrors = __webpack_require__(/*! ./rtc-error */ \"./src/rtc-error.js\");\n\nvar RTCMessageParser = my.Class({\n  STATIC: {\n    SUPPORTED_METHODS: _.values(RTCBlueJay.METHODS),\n    ERROR: RTCErrors.SIGNALING_ERRORS\n  },\n  constructor: function constructor(options) {\n    _.bindAll(this);\n\n    this.callbacks = options.callbacks;\n  },\n  getMessgeType: function getMessgeType(message) {\n    if (_.isUndefined(message.id)) {\n      return 'notification';\n    } else if (!_.isEmpty(message.error)) {\n      return 'error';\n    } else if (!_.isEmpty(message.result)) {\n      return 'response';\n    } else if (!_.isEmpty(message.params)) {\n      return 'request';\n    }\n\n    Logger.error('Message passed is in invalid format. Supported message types are: request, response, error, notification');\n    return 'invalid';\n  },\n  parseIncomingMessage: function parseIncomingMessage(msg) {\n    var self = this;\n    var message = JSON.parse(msg);\n\n    var parseFailure = function parseFailure(error) {\n      self.callbacks['invalidMessage'].apply(self, [message, error]);\n    };\n\n    var parseSuccess = function parseSuccess() {\n      var msgType = self.getMessgeType(message);\n\n      if (typeof self.callbacks[msgType] === 'function') {\n        self.callbacks[msgType].apply(self, [message]);\n      }\n    };\n\n    this.validateMessage(message, parseSuccess, parseFailure);\n  },\n  validateMessage: function validateMessage(message, successCb, failureCb) {\n    var callId = RTCBlueJay.getCallId();\n\n    if (_.isNull(message.call) || _.isUndefined(message.call)) {\n      Logger.error(\"Invalid message received from Remote Server, 'call' field not defined in message\");\n      failureCb(RTCMessageParser.ERROR.BAD_REQUEST);\n    } else if (message.call !== callId) {\n      Logger.error(\"Invalid call id, Transaction does not exists\");\n      failureCb(RTCMessageParser.ERROR.DOESNOT_EXIST);\n    } else if (!_.isUndefined(message.method) && _.indexOf(RTCMessageParser.SUPPORTED_METHODS, message.method) === -1) {\n      Logger.error(\"Invalid message received from Remote Server, 'method' passed is not supported: \" + message.method);\n      failureCb(RTCMessageParser.ERROR.METHOD_NOT_IMPLEMENTED);\n    } else {\n      successCb();\n    }\n  }\n});\nmodule.exports = RTCMessageParser;\n\n//# sourceURL=webpack:///./src/rtc-message-parser.js?");

/***/ }),

/***/ "./src/rtc-peer-connection-manager.js":
/*!********************************************!*\
  !*** ./src/rtc-peer-connection-manager.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n* Blue Jeans WebRTC Peer Connection Manager\n* =====================================================================================\n* @version In bower.json\n*\n*/\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar RTCPeer = __webpack_require__(/*! ./rtc-peer */ \"./src/rtc-peer.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar SDPUtils = __webpack_require__(/*! sdpUtils */ \"./src/thirdparty/sdp-utils.js\");\n\nvar RTCStateManager = __webpack_require__(/*! ./rtc-state-manager */ \"./src/rtc-state-manager.js\");\n\nvar RTCSignallingManager = __webpack_require__(/*! ./rtc-signalling-manager */ \"./src/rtc-signalling-manager.js\");\n\nvar RTCTransactionManager = __webpack_require__(/*! ./rtc-transaction-manager */ \"./src/rtc-transaction-manager.js\");\n\nvar RTCScreenSharingManager = __webpack_require__(/*! ./rtc-screensharing-manager */ \"./src/rtc-screensharing-manager.js\");\n\nvar RTCErrors = __webpack_require__(/*! ./rtc-error */ \"./src/rtc-error.js\");\n\nvar BrowserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar RTCPeerConnectionManager = my.Class({\n  config: {\n    keepAliveMaxFailures: 6,\n    keepAliveConnectorfailure: 2,\n    sdpParams: {\n      videoRecvBitrate: 1200\n    }\n  },\n  peer: null,\n  offerInProgress: false,\n  createOfferQueued: false,\n  keepAliveTimer: null,\n  keepAliveFailedAttempts: 0,\n  isSignallingChannelReady: false,\n  constructor: function constructor(params) {\n    _.bindAll(this);\n\n    _.extend(this.config, params);\n\n    _.extend(this, Backbone.Events);\n\n    this.BJ_CALLSTATES = RTCStates.BJ_CALLSTATES;\n    this.WEBRTC_STATES = RTCStates.WEBRTC_STATES;\n    RTCSignallingManager.setupMessageParser(this.getSignallingCallbacks());\n    this.iceCandidates = [];\n    this.isSignalingChannelReady = false;\n    RTCTransactionManager.on('receivedConnectResponse', this.onReceiveConnectResponse);\n    RTCTransactionManager.on('receivedKeepAliveResponse', this.onKeepAliveResponse);\n  },\n  createPeer: function createPeer(params) {\n    this.peer = new RTCPeer(params);\n    this.peer.on('iceCandidate', this.onNewIceCandiate);\n    this.peer.model.on('change:iceGatheringState', this.onIceGatheringStateChanged);\n    this.peer.model.on('change:iceConnectionState', this.onIceConnectionStateChange);\n    this.peer.model.on('change:signalingState', this.onSignalingStateChange);\n  },\n  getPeer: function getPeer() {\n    return this.peer;\n  },\n  updateMeetingParams: function updateMeetingParams(params) {\n    this.meetingParams = params;\n\n    if (this.meetingParams.maxBandwidth) {\n      var bitrate = window.parseInt(this.meetingParams.maxBandwidth, 10); // Min allowed bit rate 100kpbs, Max allowed bitrate 4096 kpbs\n\n      if (bitrate >= 100 && bitrate <= 4096) {\n        this.config.sdpParams.videoRecvBitrate = this.meetingParams.maxBandwidth;\n        Logger.debug(\"RTCPeerConnectionManager :: Updating max session bitrate to - \" + this.config.sdpParams.videoRecvBitrate);\n      } else {\n        Logger.debug(\"RTCPeerConnectionManager :: received invalid max bitrate \" + bitrate + \", using default value\");\n      }\n    } else {\n      Logger.debug(\"RTCPeerConnectionManager :: using default max session bitrate - \" + this.config.sdpParams.videoRecvBitrate);\n    }\n  },\n  signallingChannelCreated: function signallingChannelCreated() {\n    this.initKeepAliveMessage();\n    this.sendKeepAliveMessage(false);\n    this.isSignalingChannelReady = true;\n    this.enqueueIceCandidates();\n  },\n  initiateCall: function initiateCall(params, isCallInit) {\n    var self = this;\n    this.iceCandidates = [];\n    this.createOffer(params).then(function (offerSdp) {\n      var callState = RTCStateManager.getCurrentCallState();\n\n      if (callState === self.BJ_CALLSTATES.CONNECTING || callState === self.BJ_CALLSTATES.INITIALISING || callState === self.BJ_CALLSTATES.IDLE) {\n        self.sendConnectMessage(offerSdp);\n      } else if (callState === self.BJ_CALLSTATES.RECONNECTING || callState === self.BJ_CALLSTATES.REINITIALISING) {\n        self.sendUpdateMessage(offerSdp);\n      }\n    }, function (error) {\n      Logger.error(\"RTCPeerConnectionManager: Error while creating offerSdp, reconnecting the call\");\n      RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.SIG_CHANNEL_CLOSED);\n      throw error;\n    });\n  },\n  sendIceCandidate: function sendIceCandidate(iceCandidate) {\n    if (iceCandidate) {\n      if (BrowserDetector.browser === 'firefox') {\n        if (iceCandidate.sdpMid === 'sdparta_0') iceCandidate.sdpMid = 'audio';else if (iceCandidate.sdpMid === 'sdparta_1' || iceCandidate.sdpMid === 'sdparta_2') {\n          iceCandidate.sdpMid = 'video';\n          iceCandidate.sdpMLineIndex = 1;\n        }\n      }\n\n      var iceCandidateMsg = RTCBlueJay.getIceCandidateMessage(iceCandidate);\n      RTCSignallingManager.sendMsg(iceCandidateMsg);\n      RTCTransactionManager.onBlueJayRequest(iceCandidateMsg);\n    }\n  },\n  enqueueIceCandidates: function enqueueIceCandidates() {\n    var self = this;\n    self.iceCandidates.forEach(function (iceCandidate) {\n      self.sendIceCandidate(iceCandidate);\n    });\n  },\n  onNewIceCandiate: function onNewIceCandiate(peer, iceCandidate) {\n    // send iceCandidate notification message\n    if (this.isSignalingChannelReady === false) {\n      this.iceCandidates.push(iceCandidate);\n    } else {\n      this.sendIceCandidate(iceCandidate);\n    }\n  },\n  onIceGatheringStateChanged: function onIceGatheringStateChanged(model) {\n    RTCStateManager.iceGatheringStateChange(model.get('iceGatheringState'));\n  },\n  onIceConnectionStateChange: function onIceConnectionStateChange(model) {\n    RTCStateManager.iceConnectionStateChange(model.get('iceConnectionState'));\n  },\n  onSignalingStateChange: function onSignalingStateChange(model) {\n    RTCStateManager.signalingStateChange(model.get('signalingState'));\n  },\n  handleResponseMessage: function handleResponseMessage(message) {\n    var peer = this.getPeer();\n    return peer.handleResponseMessage(message);\n  },\n  handleErrorMessage: function handleErrorMessage(message) {\n    var peer = this.getPeer();\n    return peer.handleErrorMessage(message);\n  },\n  handleNotificationMessage: function handleNotificationMessage(message) {\n    var peer = this.getPeer();\n    return peer.handleNotificationMessage(message);\n  },\n  handleRequestMessage: function handleRequestMessage(message) {\n    var methods = RTCBlueJay.METHODS;\n    var peer = this.getPeer();\n\n    switch (message.method) {\n      case methods.CONNECT:\n        return this.onConnect(peer, message);\n        break;\n\n      case methods.ANSWER:\n        return this.onAnswer(peer, message);\n        break;\n\n      case methods.UPDATE:\n        return this.onUpdate(peer, message);\n        break;\n\n      case methods.DISCONNECT:\n        return this.onDisconnect(peer, message);\n        break;\n\n      case methods.KEEPALIVE:\n        return this.onKeepAlive(peer, message);\n        break;\n\n      case methods.ICE:\n        return this.onIceCandidate(peer, message);\n        break;\n\n      default:\n        Logger.error(\"RTCPeerConnectionManager: Method received in message: \" + message.method + \" is not supported.\");\n    }\n  },\n  onConnect: function onConnect(peer, message) {\n    return peer.handleOffer(message);\n  },\n  onAnswer: function onAnswer(peer, message) {\n    var self = this;\n    message.params.sessionDescription.sdp = SDPUtils.maybeSetVideoReceiveBitRate(message.params.sessionDescription.sdp, self.config.sdpParams);\n    return peer.handleAnswer(message).then(function () {\n      self.offerInProgress = false;\n\n      if (self.createOfferQueued) {\n        Logger.debug(\"RTCPeerConnectionManager: Processing previously Queued 'update offer' request\");\n        self.createUpdateOffer();\n        self.createOfferQueued = false;\n      }\n    });\n  },\n  onUpdate: function onUpdate(peer, message) {\n    return peer.handleUpdate(message);\n  },\n  onDisconnect: function onDisconnect(peer, message) {\n    return peer.handleDisconnect(message);\n  },\n  onKeepAlive: function onKeepAlive(peer, message) {\n    return peer.handleKeepAlive(message);\n  },\n  onIceCandidate: function onIceCandidate(peer, message) {\n    return peer.handleIceCandidate(message.params.iceCandidate);\n  },\n  addPeerStream: function addPeerStream(stream) {\n    var peer = this.getPeer();\n\n    if (!peer) {\n      Logger.warn('RTCPeerConnectionManager: RTCPeer does not exist, ignoring addStream API on it');\n      return false;\n    }\n\n    peer.addStream(stream);\n    this.createUpdateOffer();\n    return true;\n  },\n  updatePeerStream: function updatePeerStream(params) {\n    var peer = this.getPeer();\n\n    if (!peer) {\n      Logger.warn('RTCPeerConnectionManager: RTCPeer does not exist, ignoring updatePeerStream API on it');\n      return false;\n    }\n\n    if (!_.isUndefined(params.newAudioStream) && !_.isNull(params.newAudioStream)) {\n      if (BrowserDetector.browser === 'firefox') {\n        //FF support replaceTrack API to change the media track on the fly,\n        //these is no need to remove and add the stream again.\n        peer.replaceTrack('audio', params.newAudioStream);\n      } else {\n        // remove the currently negotiated local audio stream in peer connection\n        peer.removeAudioStream(); // add the new audio stream to the peer connection\n\n        peer.addStream(params.newAudioStream);\n      }\n    }\n\n    if (!_.isUndefined(params.newVideoStream) && !_.isNull(params.newVideoStream)) {\n      if (BrowserDetector.browser === 'firefox') {\n        //FF support replaceTrack API to change the media track on the fly,\n        //these is no need to remove and add the stream again.\n        peer.replaceTrack('video', params.newVideoStream);\n      } else {\n        // remove the currently negotiated local video stream in peer connection\n        peer.removeVideoStream(); // add the new video stream to the peer connection\n\n        peer.addStream(params.newVideoStream);\n      }\n    } // Do not send update message in case of Firefox\n\n\n    if (BrowserDetector.browser !== 'firefox') this.createUpdateOffer();\n  },\n  updateContentStream: function updateContentStream(stream) {\n    var peer = this.getPeer();\n    peer.replaceTrack('content', stream);\n  },\n  removePeerStream: function removePeerStream(stream) {\n    var peer = this.getPeer();\n\n    if (!peer) {\n      Logger.warn('RTCPeerConnectionManager: RTCPeer does not exist, ignoring removeStream API on it');\n      return false;\n    }\n\n    peer.removeStream(stream);\n    this.createUpdateOffer();\n    return true;\n  },\n  createUpdateOffer: function createUpdateOffer(params) {\n    var self = this; // Do not create an update message before receiving the initial connect response\n\n    if (this.isSignallingChannelReady === false) {\n      this.createOfferQueued = true;\n      return;\n    }\n\n    this.createOffer(params).then(function (offerSdp) {\n      self.sendUpdateMessage(offerSdp);\n    }, function (error) {\n      Logger.error('RTCPeerConnectionManager: RTCPeer failed to create \"updated\" offer');\n    });\n  },\n  createOffer: function createOffer(params) {\n    var peer = this.getPeer();\n    var self = this;\n    var deferred = Q.defer();\n    var currentState = RTCStateManager.getCurrentCallState();\n\n    if (this.offerInProgress) {\n      this.createOfferQueued = true;\n      Logger.debug(\"RTCPeerConnectionManager: Queing 'update offer' request. Current call state: \", currentState);\n    } else {\n      self.offerInProgress = true;\n      peer.createOffer(params).then(function (offerSdp) {\n        offerSdp.sdp = SDPUtils.maybeSetVideoReceiveBitRate(offerSdp.sdp, self.config.sdpParams);\n        offerSdp.sdp = SDPUtils.maybeSetTrickleIceAttr(offerSdp.sdp);\n        deferred.resolve(offerSdp);\n      }, function (error) {\n        self.offerInProgress = false;\n        deferred.reject(error);\n      });\n    }\n\n    return deferred.promise;\n  },\n  sendConnectMessage: function sendConnectMessage(offerSdp) {\n    var connectMessage = RTCBlueJay.getConnectMessage({\n      'sessionId': this.meetingParams.sessionId,\n      'endpointProperties': this.meetingParams.endpointDetails,\n      'sessionDescription': offerSdp,\n      'streamInfo': offerSdp.streamInfo,\n      'bundlingPolicy': this.peer.bundlePolicy\n    });\n    RTCTransactionManager.onBlueJayRequest(connectMessage);\n    RTCSignallingManager.sendMsg(connectMessage);\n  },\n  sendUpdateMessage: function sendUpdateMessage(offerSdp) {\n    //var newSdp = this.peerConnectionManager.peer.model.get('localSdp');\n    //this.internalState.set('localSdp', newSdp);\n    var updateMessage = RTCBlueJay.getUpdateMessage({\n      'sessionDescription': offerSdp,\n      'streamInfo': offerSdp.streamInfo\n    });\n    RTCTransactionManager.onBlueJayRequest(updateMessage);\n    RTCSignallingManager.sendMsg(updateMessage); //this._applyCachedMuteStates();\n  },\n  sendKeepAliveMessage: function sendKeepAliveMessage(forceSend) {\n    if (!forceSend || this.keepAliveFailedAttempts >= this.config.keepAliveMaxFailures - 1) {\n      var keepAliveReq = RTCBlueJay.getKeepaliveMessage();\n      RTCTransactionManager.onKeepaliveRequest(keepAliveReq.id);\n      RTCSignallingManager.sendMsg(keepAliveReq);\n    }\n  },\n  getSignallingCallbacks: function getSignallingCallbacks() {\n    return {\n      'request': this.onRequestMessage,\n      'response': this.onResponseMessage,\n      'error': this.onErrorMessage,\n      'notification': this.onNotificationMessage,\n      'invalidMessage': this.onInvalidMessage\n    };\n  },\n  onRequestMessage: function onRequestMessage(message) {\n    var self = this;\n    var responseMsg = RTCBlueJay.getSuccessResponse(message.id);\n\n    if (_.isUndefined(RTCTransactionManager.lookupOutgoingResponse(message.id))) {\n      if (message.method === RTCBlueJay.METHODS.TOKEN) {\n        //TODO:: Change the below methods\n        RTCScreenSharingManager.handleTokenMessage(message);\n        RTCSignallingManager.sendMsg(responseMsg);\n      } else {\n        this.handleRequestMessage(message).then(function (response) {\n          RTCSignallingManager.sendMsg(responseMsg);\n          RTCTransactionManager.onOutgoingBlueJayResponse(message.id, responseMsg);\n\n          if (message.method === 'disconnect') {\n            RTCStateManager.callDisconnected(message.params);\n          }\n        }, function (error) {\n          Logger.debug(\"RTCPeerConnectionManager :: Error while handling request message \" + error);\n          var errorMsg = RTCBlueJay.getErrorResponse(message.id, RTCErrors.SIGNALING_ERRORS.BAD_REQUEST);\n          RTCSignallingManager.sendMsg(errorMsg);\n        });\n      }\n    } else {\n      RTCSignallingManager.sendMsg(responseMsg);\n    }\n  },\n  onResponseMessage: function onResponseMessage(message) {\n    this.handleResponseMessage(message);\n    RTCTransactionManager.onIncomingBlueJayResponse(message.id);\n  },\n  onErrorMessage: function onErrorMessage(message) {\n    this.handleErrorMessage(message);\n\n    if (message.error.code === RTCErrors.SIGNALING_ERRORS.METHOD_NOT_IMPLEMENTED.code) {\n      Logger.warn(\"RTCPeerConnectionManager :: Method not Implemented, Message :: \" + JSON.stringify(RTCTransactionManager.getRequestMessage(message.id)));\n      return;\n    }\n\n    RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.TRANSPORT_FAIL);\n  },\n  onNotificationMessage: function onNotificationMessage(message) {\n    this.handleNotificationMessage(message);\n  },\n  onInvalidMessage: function onInvalidMessage(message, errorMsg) {\n    var error = RTCBlueJay.getErrorResponse(message.id, errorMsg);\n    RTCSignallingManager.sendMsg(error);\n  },\n  initKeepAliveMessage: function initKeepAliveMessage() {\n    var self = this;\n    self.keepAliveTimer = setInterval(function () {\n      if (RTCTransactionManager.getKeepaliveMessageState() === 'finished') {\n        self.sendKeepAliveMessage(false);\n        self.keepAliveFailedAttempts = 0;\n      } else {\n        self.keepAliveFailedAttempts++;\n\n        if (self.keepAliveFailedAttempts == self.config.keepAliveConnectorfailure && RTCSignallingManager.WS_STATES === RTCStates.WS_STATES.CONNECTED || self.keepAliveFailedAttempts >= self.config.keepAliveMaxFailures) {\n          Logger.warn('RTCPeerConnectionManager: KeepAlive timeout has occurred, call will need to be reconnected!!');\n          RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.KEEPALIVE_TIMEOUT);\n        } else {\n          self.sendKeepAliveMessage(false);\n        }\n      }\n    }, RTCTransactionManager.config.keepaliveTimeout);\n  },\n  stopKeepAliveMessages: function stopKeepAliveMessages() {\n    this.keepAliveFailedAttempts = 0;\n    clearInterval(this.keepAliveTimer);\n  },\n  onReceiveConnectResponse: function onReceiveConnectResponse() {\n    this.isSignallingChannelReady = true;\n  },\n  onKeepAliveResponse: function onKeepAliveResponse() {\n    this.keepAliveFailedAttempts = 0;\n  },\n  reset: function reset() {\n    this.close();\n  },\n  close: function close() {\n    var peer = this.getPeer();\n    this.stopKeepAliveMessages();\n    this.createOfferQueued = false;\n    this.offerInProgress = false;\n    this.isSignalingChannelReady = false;\n    peer && peer.close();\n  }\n});\nmodule.exports = RTCPeerConnectionManager;\n\n//# sourceURL=webpack:///./src/rtc-peer-connection-manager.js?");

/***/ }),

/***/ "./src/rtc-peer-model.js":
/*!*******************************!*\
  !*** ./src/rtc-peer-model.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar RTCUtils = __webpack_require__(/*! ./rtc-utils */ \"./src/rtc-utils.js\");\n\nvar PeerModel = Backbone.Model.extend({\n  initialize: function initialize() {},\n  setStreamByType: function setStreamByType(stream, type, newValue) {\n    var streamType = type === 'local' ? RTCUtils.getLocalStreamType(stream) : RTCUtils.getRemoteStreamType(stream);\n    this.set(streamType, newValue);\n  }\n}, {\n  getDefaults: function getDefaults() {\n    return {\n      id: null,\n      receiveMedia: {\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: true\n      },\n      peerConnectionConfig: {\n        iceServers: [],\n        bundlePolicy: \"max-bundle\",\n        rtcpMuxPolicy: \"require\",\n        iceTransports: \"all\"\n      },\n      peerConnectionConstraints: {\n        optional: []\n      },\n      iceGatheringState: '',\n      iceConnectionState: '',\n      useTrickleICE: false,\n      localSdp: null,\n      remoteSdp: null,\n      localVideoStream: null,\n      localAudioStream: null,\n      localContentStream: null,\n      remoteStream: null,\n      remoteContentStream: null,\n      closed: false,\n      signalingState: ''\n    };\n  }\n});\nmodule.exports = PeerModel;\n\n//# sourceURL=webpack:///./src/rtc-peer-model.js?");

/***/ }),

/***/ "./src/rtc-peer.js":
/*!*************************!*\
  !*** ./src/rtc-peer.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar Adapter = __webpack_require__(/*! webrtc-adapter */ \"./node_modules/webrtc-adapter/src/js/adapter_core.js\");\n\nvar RTCErrors = __webpack_require__(/*! ./rtc-error */ \"./src/rtc-error.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCCallStats = __webpack_require__(/*! ./rtc-call-stats */ \"./src/rtc-call-stats.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar RTCUtils = __webpack_require__(/*! ./rtc-utils */ \"./src/rtc-utils.js\");\n\nvar PeerModel = __webpack_require__(/*! ./rtc-peer-model */ \"./src/rtc-peer-model.js\");\n\nvar RTCStateManager = __webpack_require__(/*! ./rtc-state-manager */ \"./src/rtc-state-manager.js\");\n\nvar SDPUtils = __webpack_require__(/*! sdpUtils */ \"./src/thirdparty/sdp-utils.js\");\n\nvar SDPInterop = __webpack_require__(/*! ./sdp-interop/index */ \"./src/sdp-interop/index.js\");\n\nvar BrowserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar RTCPeer = my.Class({\n  iceRestartTimer: null,\n  iceRestartTimeout: 10000,\n  //trigger an ICE restart if iceConnectionState doesn't move from 'disconnected' to 'completed' in this timeout period\n  iceConnectivityTimeout: 20000,\n  iceConnectivityTimer: null,\n  numIceCandidates: 0,\n  constructor: function constructor(options) {\n    _.bindAll(this);\n\n    _.extend(this, Backbone.Events);\n\n    this.isFirefox = BrowserDetector.browser === 'firefox' ? true : false;\n    this.ICE_CONNECTION_STATES = RTCStates.WEBRTC_STATES.iceConnectionState;\n    var peerConfig = RTCUtils.deepMergeObjects(PeerModel.getDefaults(), options.peerConfig);\n    this.model = new PeerModel(peerConfig); //FF specific changes\n\n    this.isConnectionLost = false;\n    this.oldPktCount = 0;\n    this.maxPktRecvCounter = 5;\n    this.pktRecvCounter = this.maxPktRecvCounter;\n    this.isClosing = false;\n    this.isRemoteMute = false;\n    var peerConnectionConfig = this.model.get('peerConnectionConfig');\n    var peerConnectionConstraints = this.model.get('peerConnectionConstraints'); //create via adapter.js API\n    //if (peerConnectionConfig.forceTurn) {\n\n    Logger.debug(\"RTCPeer: Force turn is enabled, get only relay ICE candidates\");\n    peerConnectionConfig.iceTransportPolicy = \"relay\"; //}\n\n    if (peerConnectionConfig.webrtcDisableBundling && !this.isFirefox) {\n      Logger.debug(\"RTCPeer: Disable ICE bundling\");\n      peerConnectionConfig.bundlePolicy = \"balanced\";\n      this.bundlePolicy = \"balanced\";\n    } else {\n      this.bundlePolicy = \"max-bundle\";\n    } //Append ICE Server username for Firefox\n\n\n    if (this.isFirefox) {\n      peerConnectionConfig.iceServers.forEach(function (icesvr) {\n        icesvr.username = icesvr.username + \"#firefox\";\n      });\n    }\n\n    this.pc = new RTCPeerConnection(peerConnectionConfig, peerConnectionConstraints);\n    this.pc.onicecandidate = this.onIceCandidate;\n    this.pc.onaddstream = this.onRemoteStreamAdded;\n    this.pc.onremovestream = this.onRemoteStreamRemoved;\n    this.pc.onsignalingstatechange = this.onSignalingStateChanged;\n    this.pc.oniceconnectionstatechange = this.onIceConnectionStateChanged;\n    this.pc.onicegatheringstatechange = this.onIceGatheringStateChanged;\n    this.pc.onnegotiationneeded = this.onNegotiationNeeded;\n\n    if (!_.isNull(options.localAudioStream) && !_.isUndefined(options.localAudioStream)) {\n      this.addStream(options.localAudioStream);\n    }\n\n    if (!_.isNull(options.localVideoStream) && !_.isUndefined(options.localVideoStream)) {\n      this.addStream(options.localVideoStream);\n    }\n\n    if (!_.isNull(options.fakeStream) && !_.isUndefined(options.fakeStream)) {\n      this.addStream(options.fakeStream);\n    }\n\n    this.callStats = new RTCCallStats({\n      peerConnection: this.pc,\n      statsPollInterval: this.isFirefox ? 1000 : this.model.get('statsPollInterval')\n    });\n    this.callStatsModel = this.callStats.model;\n    this.callStats.on('rtcstats', this.checkFFMediaConnectivity);\n    if (this.isFirefox) this.sdpInterop = new SDPInterop.Interop();\n    this.webrtcFec = peerConnectionConfig.webrtcFec;\n  },\n  addStream: function addStream(stream) {\n    if (this.isPCClosed()) {\n      Logger.warn('RTCPeer: Peer connection is closed, ignoring addStream request');\n      return RTCErrors.PEER_CONNECTION_ERRORS.PC_CLOSED;\n    } else {\n      this.pc.addStream(stream);\n      this.model.setStreamByType(stream, 'local', stream);\n      Logger.debug('RTCPeer: Added stream to peer connection: ', stream.id);\n    }\n  },\n  removeStream: function removeStream(stream) {\n    if (this.isPCClosed()) {\n      Logger.warn('RTCPeer: Peer connection is closed, ignoring removeStream request');\n      return RTCErrors.PEER_CONNECTION_ERRORS.PC_CLOSED;\n    } else {\n      this.pc.removeStream(stream);\n      this.model.setStreamByType(stream, 'local', null);\n      Logger.debug('RTCPeer: Removed stream from peer connection: ', stream.id);\n    }\n  },\n  removeAudioStream: function removeAudioStream() {\n    var localAudioStream = this.model.get('localAudioStream');\n\n    if (!_.isNull(localAudioStream) && !_.isUndefined(localAudioStream)) {\n      this.removeStream(localAudioStream);\n    } else {\n      Logger.debug('RTCPeer: Local Audio Stream in PC is null, cannot remove');\n    }\n  },\n  removeVideoStream: function removeVideoStream() {\n    var localVideoStream = this.model.get('localVideoStream');\n\n    if (!_.isNull(localVideoStream) && !_.isUndefined(localVideoStream)) {\n      this.removeStream(localVideoStream);\n    } else {\n      Logger.debug('RTCPeer: Local Video Stream in PC is null, cannot remove');\n    }\n  },\n\n  /* ============================= */\n\n  /*        PC Event Handlers  \t */\n\n  /* ============================= */\n  onIceCandidate: function onIceCandidate(event) {\n    var candidate = event.candidate;\n\n    if (candidate) {\n      this.model.set('iceGatheringState', this.pc.iceGatheringState); //Logger.debug(\"RTCPeer: Got an ICE Candidate: \" + JSON.stringify(candidate) + \" but useTrickleICE is false, so not doing anything.\");\n\n      this.trigger('iceCandidate', this, candidate);\n      this.numIceCandidates++;\n    } else if (candidate === null) {\n      if (this.numIceCandidates === 0) {\n        // We have received only a null candidate till now, wait for 5 secs before terminating the call\n        Logger.debug('RTCPeer :: Received NULL Ice Candidate before gathering candidates');\n        this.onIceGatheringFailure();\n      } else {\n        Logger.debug(\"RTCPeer: Ice Gathering complete, Ice Candidate count \" + this.numIceCandidates);\n        this.model.set('iceGatheringState', this.pc.iceGatheringState);\n      }\n    }\n  },\n  onIceConnectionStateChanged: function onIceConnectionStateChanged(event) {\n    if (this.pc) {\n      this.model.set('iceConnectionState', this.pc.iceConnectionState);\n      Logger.debug(\"RTCPeer: iceConnectionState changed to: \" + this.pc.iceConnectionState);\n\n      switch (this.pc.iceConnectionState) {\n        case this.ICE_CONNECTION_STATES.CHECKING:\n          this.initIceConnectivityTimer();\n          break;\n\n        case this.ICE_CONNECTION_STATES.CONNECTED:\n        case this.ICE_CONNECTION_STATES.COMPLETED:\n          this.initCallStats();\n          this.clearIceConnectivityTimer();\n          break;\n\n        case this.ICE_CONNECTION_STATES.DISCONNECTED:\n          this.initIceRestart();\n          this.initIceConnectivityTimer();\n          break;\n\n        case this.ICE_CONNECTION_STATES.FAILED:\n          if (this.isFirefox) {\n            Logger.warn(\"ICE connection failed, restarting the call\");\n            RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.ICE_CONNECTION_FAILED);\n          } else {\n            this.initIceConnectivityTimer();\n            this.restartIce();\n          }\n\n          break;\n\n        case this.ICE_CONNECTION_STATES.CLOSED:\n          if (!this.isPCClosed()) this.trigger('iceConnectionClosed');\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n  ffIceConnectionChange: function ffIceConnectionChange(state) {\n    if (this.pc) {\n      this.model.set('iceConnectionState', state);\n\n      if (state === this.ICE_CONNECTION_STATES.CONNECTED) {\n        this.clearIceConnectivityTimer();\n      } else {\n        this.initIceRestart();\n        this.initIceConnectivityTimer();\n      }\n    }\n  },\n  initIceRestart: function initIceRestart() {\n    var self = this;\n    var state = this.model.get('iceConnectionState');\n    this.iceRestartTimer = window.setTimeout(function () {\n      state = self.model.get('iceConnectionState');\n\n      if (state === self.ICE_CONNECTION_STATES.CONNECTED || state === self.ICE_CONNECTION_STATES.COMPLETED) {\n        self.clearIceRestartTimer();\n      } else {\n        self.restartIce();\n      }\n    }, this.iceRestartTimeout);\n  },\n  restartIce: function restartIce() {\n    this.trigger('restartICE');\n    this.clearIceRestartTimer();\n    this.isConnectionLost = false;\n  },\n  initIceConnectivityTimer: function initIceConnectivityTimer() {\n    var self = this;\n\n    if (self.iceConnectivityTimer === null) {\n      self.iceConnectivityTimer = setTimeout(function () {\n        var state = self.model.get('iceConnectionState');\n\n        if (state !== self.ICE_CONNECTION_STATES.CONNECTED && state !== self.ICE_CONNECTION_STATES.COMPLETED) {\n          Logger.warn(\"Can not establish ICE connectivity, restarting the call\");\n\n          if (self.numIceCandidates === 0) {\n            RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.ICE_GATHERING_FAILED);\n          } else {\n            RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.ICE_CONNECTION_FAILED);\n          }\n        }\n      }, self.iceConnectivityTimeout);\n    }\n  },\n  clearIceRestartTimer: function clearIceRestartTimer() {\n    this.iceRestartTimer && window.clearTimeout(this.iceRestartTimer);\n    this.iceRestartTimer = null;\n  },\n  clearIceConnectivityTimer: function clearIceConnectivityTimer() {\n    this.iceConnectivityTimer && window.clearTimeout(this.iceConnectivityTimer);\n    this.iceConnectivityTimer = null;\n  },\n  onIceGatheringStateChanged: function onIceGatheringStateChanged(event) {\n    Logger.debug(\"RTCPeer: Received 'iceGatheringStateChange' event\");\n  },\n  onNegotiationNeeded: function onNegotiationNeeded(event) {//Logger.debug(\"RTCPeer: Received 'negotiationNeeded' event\");\n  },\n  onSignalingStateChanged: function onSignalingStateChanged(event) {\n    if (this.pc) {\n      Logger.debug(\"RTCPeer: signalingState changed to: \" + this.pc.signalingState);\n      this.model.set('signalingState', this.pc.signalingState);\n      if (this.pc.signalingState === 'closed' && !this.isClosing) RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.SIG_CHANNEL_CLOSED);\n    }\n  },\n  onIceCandidatesEnded: function onIceCandidatesEnded() {\n    Logger.debug(\"RTCPeer: Received 'endOfCandidates' event\");\n  },\n  onRemoteStreamAdded: function onRemoteStreamAdded(event) {\n    var remoteStream = event.stream;\n\n    if (!_.isNull(remoteStream) && !_.isUndefined(remoteStream)) {\n      this.model.setStreamByType(remoteStream, 'remote', remoteStream);\n      Logger.debug('RTCPeer: Connector added a stream to peer connection: ', remoteStream);\n    } else {\n      Logger.error('RTCPeer: onRemoteStreamAdded event has invalid stream in it: ', remoteStream);\n    }\n  },\n  onRemoteStreamRemoved: function onRemoteStreamRemoved(event) {\n    var remoteStream = event.stream;\n\n    if (!_.isNull(remoteStream) && !_.isUndefined(remoteStream)) {\n      this.model.setStreamByType(remoteStream, 'remote', null);\n      Logger.debug('RTCPeer: Connector removed a stream from peer connection: ', remoteStream);\n    } else {\n      Logger.error('RTCPeer: onRemoteStreamRemoved event has invalid stream in it: ', remoteStream);\n    }\n  },\n  initCallStats: function initCallStats() {\n    this.callStats.startPollingStats();\n  },\n\n  /*\n      Hack to detect media disconnects on FF.\n      Since FF does not trigger Ice state disconnected on temporary media disconnections,\n      Compute the number of inbound packets on firefox for all the inboundrtp channels,\n      to detect media connectivity. If the rtp packets are not updated for 5 consecutive\n      intervals. Trigger \"disconnected\" event indicating ICE disconnect, as soon as rtp packets\n      conunter is updated after a disconnected event, trigger \"connected\" event.\n  */\n  checkFFMediaConnectivity: function checkFFMediaConnectivity(stats) {\n    var is = function is(stat, type) {\n      return stat.type == type && !stat.isRemote;\n    };\n\n    if (this.isRemoteMute || this.model.get('iceConnectionState') !== 'connected') {\n      //Do not check for inbound rtp packets\n      return;\n    }\n\n    var newPktCount = 0;\n    Object.keys(stats).find(function (key) {\n      if (is(stats[key], \"inboundrtp\")) {\n        newPktCount = newPktCount + stats[key].packetsReceived;\n      }\n    });\n    var isPktRecv = newPktCount - this.oldPktCount ? true : false;\n\n    if (isPktRecv) {\n      //reset the pkt recv counter\n      this.pktRecvCounter = this.maxPktRecvCounter; //If the ep start receiving the packets again after a ICE disconnect\n      //trigger ICE connected event and reset the flag.\n\n      if (this.isConnectionLost) {\n        this.isConnectionLost = false;\n        this.ffIceConnectionChange('connected');\n        Logger.debug(\"RTCPeer :: ICE connected\");\n      }\n    } else {\n      if (this.pktRecvCounter) {\n        //Connection is not down yet\n        this.pktRecvCounter--;\n      } else {\n        //Media connection is lost, trigger ICE disconnected event\n        //Do not trigger it every time when stats are not updated\n        if (!this.isConnectionLost) {\n          this.ffIceConnectionChange('disconnected');\n          this.isConnectionLost = true;\n          Logger.debug(\"RTPeer :: ICE disconnected\");\n        }\n      }\n    }\n\n    this.oldPktCount = newPktCount;\n  },\n\n  /* ====================================== */\n\n  /*       Signalling Message Handlers      */\n\n  /* ====================================== */\n  handleResponseMessage: function handleResponseMessage(message) {//Logger.debug(\"RTCPeer: Received 'response' message: \" + message);\n    // Nothing to be done here for now\n  },\n  handleErrorMessage: function handleErrorMessage(message) {\n    Logger.debug(\"RTCPeer: Received 'error' message: \" + message); // Nothing to be done here for now\n  },\n  handleNotificationMessage: function handleNotificationMessage(message) {\n    Logger.debug(\"RTCPeer: Received 'notification' message: \" + message);\n    var methods = RTCBlueJay.METHODS;\n\n    switch (message.method) {\n      case methods.CANDIDATE:\n        this.pc.processIce(message.iceCandidate);\n        break;\n\n      default:\n        Logger.error(\"RTCPeer: Method received in notification message: \" + message.method + \" is not supported.\");\n    }\n  },\n  createOffer: function createOffer(params) {\n    var self = this;\n    var deferred = Q.defer();\n    if (!this.isFirefox) var offerParams = _.extend({}, this.model.get('receiveMedia'), params);else var offerParams = params; //Reset the numIceCandidates timer on ICE restart\n\n    if (offerParams && offerParams.iceRestart) {\n      this.numIceCandidates = 0;\n    }\n\n    var onSuccess = function onSuccess(offerSdp) {\n      //Do not remove FEC and RED from SDP if webrtc fec support is enabled\n      //Do not enable it for Firefox and Chrome 47 and lower\n      if (!self.webrtcFec || self.isFirefox || BrowserDetector.version < \"48\") {\n        if (BrowserDetector.version < \"51\" && !self.isFirefox) {\n          offerSdp.sdp = SDPUtils.maybeRemoveCodecFromSDP(offerSdp.sdp, '98');\n          offerSdp.sdp = SDPUtils.maybeRemoveCodecFromSDP(offerSdp.sdp, '116');\n        } else {\n          offerSdp.sdp = SDPUtils.maybeRemoveVideoFec(offerSdp.sdp, {\n            videoFec: 'false'\n          });\n        }\n      }\n\n      self.pc.setLocalDescription(offerSdp, function () {\n        if (self.isFirefox) {\n          offerSdp = self.sdpInterop.toPlanB(offerSdp);\n          offerSdp.sdp = SDPUtils.maybeReplaceVideoPortNumber(offerSdp.sdp, 9);\n        }\n\n        offerSdp = self._appendInfoToSdp(offerSdp);\n        self.model.set('localSdp', offerSdp);\n        deferred.resolve(offerSdp);\n      }, function (error) {\n        Logger.error(\"RTCPeer: Error while setting localSdp: \" + error);\n        deferred.reject(error);\n      });\n    };\n\n    var onFailure = function onFailure(error) {\n      Logger.error(\"RTCPeer: Error while creating offer sdp: \" + error);\n      deferred.reject(error);\n    };\n\n    if (this.isPCClosed()) {\n      Logger.warn('RTCPeer: Peer connection is closed, ignoring createOffer request');\n      deferred.reject(RTCErrors.PEER_CONNECTION_ERRORS.PC_CLOSED);\n    } else {\n      this.pc.createOffer(onSuccess, onFailure, offerParams);\n    }\n\n    return deferred.promise;\n  },\n  handleOffer: function handleOffer(message) {\n    var self = this;\n    var offerSdp = message.params.sessionDescription;\n    var deferred = Q.defer();\n\n    var onFailure = function onFailure(error) {\n      Logger.error(\"RTCPeer: Error while processing incoming offer request: \" + error);\n      deferred.reject(error);\n    };\n\n    if (this.isPCClosed()) {\n      Logger.warn('RTCPeer: Peer connection is closed, ignoring handleOffer request');\n      deferred.reject(RTCErrors.PEER_CONNECTION_ERRORS.PC_CLOSED);\n    } else {\n      this.pc.setRemoteDescription(new RTCSessionDescription(offerSdp), function () {\n        self.model.set('remoteSdp', offerSdp);\n        self.pc.createAnswer(function (answerSdp) {\n          self.pc.setLocalDescription(answer, function () {\n            // send the answer to the remote connection\n            answerSdp = self._appenInfotoSdp(answerSdp);\n            self.model.set('localSdp', answerSdp);\n            deferred.resolve();\n          }, onFailure);\n        }, onFailure);\n      }, onFailure);\n    }\n\n    return deferred.promise;\n  },\n  handleAnswer: function handleAnswer(message) {\n    var self = this;\n    var answerSdp = message.params.sessionDescription;\n    var deferred = Q.defer();\n\n    if (this.isPCClosed()) {\n      Logger.warn('RTCPeer: Peer connection is closed, ignoring handleAnswer request');\n      deferred.reject(RTCErrors.PEER_CONNECTION_ERRORS.PC_CLOSED);\n    } else {\n      if (this.isFirefox) answerSdp = this.sdpInterop.toUnifiedPlan(answerSdp);\n      this.pc.setRemoteDescription(new RTCSessionDescription(answerSdp), function () {\n        self.model.set('remoteSdp', answerSdp);\n        deferred.resolve();\n      }, function (error) {\n        Logger.error(\"RTCPeer: Error while setting remote description: \" + error);\n        deferred.reject(error);\n      });\n    }\n\n    return deferred.promise;\n  },\n  handleUpdate: function handleUpdate(message) {\n    // TO-DO: Handling Updates to previously negotiated SDP\n    var deferred = Q.defer();\n    Logger.warn(\"RTCPeer: 'update' Method is not supported yet\");\n    deferred.resolve();\n    return deferred.promise;\n  },\n  handleKeepAlive: function handleKeepAlive(message) {\n    Logger.debug(\"RTCPeer: Received a keepalive message\"); // TO-DO: Peer should have a keep-alive timer, and it should validate against it whether the remote is sending keep-alives\n    // within the timeout threshold or not\n\n    var deferred = Q.defer();\n    deferred.resolve();\n    return deferred.promise;\n  },\n  handleDisconnect: function handleDisconnect(message) {\n    var deferred = Q.defer();\n\n    if (!this.pc) {\n      Logger.warn(\"RTCPeer: This Peer Connection has already been closed!!\");\n    } else {\n      this.isClosing = true;\n      if (this.pc.signalingState !== \"closed\") this.pc.close();\n      this.model.set('remoteStream', null);\n      this.model.set('closed', true);\n      this.pc = null;\n    }\n\n    deferred.resolve();\n    return deferred.promise;\n  },\n  handleIceCandidate: function handleIceCandidate(message) {\n    var deferred = Q.defer();\n\n    if (this.isFirefox) {\n      if (message.sdpMid === 'audio') message.sdpMid = 'sdparta_0';else {\n        message.sdpMid = 'sdparta_1';\n        message.sdpMLineIndex = 1;\n      }\n    }\n\n    if (this.pc) {\n      var candidate = new RTCIceCandidate({\n        sdpMLineIndex: message.sdpMLineIndex,\n        candidate: message.candidate,\n        sdpMid: message.sdpMid\n      });\n      this.pc.addIceCandidate(candidate);\n      deferred.resolve();\n    }\n\n    return deferred.promise;\n  },\n  isPCClosed: function isPCClosed() {\n    if (this.model.get('closed') === true || this.pc.signalingState === 'closed') return true;else return false;\n  },\n  _appendInfoToSdp: function _appendInfoToSdp(desc) {\n    var streamInfo = new Object({\n      'audioMsid': \"\",\n      'videoMsid': \"\",\n      'contnetMsid': \"\"\n    });\n    this.pc.getLocalStreams().forEach(function (stream) {\n      switch (stream.bjn_label) {\n        case \"local_av_stream\":\n          streamInfo['audioMsid'] = stream.id;\n          streamInfo['videoMsid'] = stream.id;\n          break;\n\n        case \"local_audio_stream\":\n          streamInfo['audioMsid'] = stream.id;\n          break;\n\n        case \"local_video_stream\":\n          streamInfo['videoMsid'] = stream.id;\n          break;\n\n        case \"content_stream\":\n        case \"fake_stream\":\n          streamInfo['contentMsid'] = stream.id;\n          break;\n\n        default:\n          Logger.error('RTCPeer: Invalid Stream found in PC ' + stream.bjn_label);\n      }\n    });\n    desc.streamInfo = streamInfo;\n    return desc;\n  },\n  onIceGatheringFailure: function onIceGatheringFailure() {\n    var self = this;\n    window.setTimeout(function () {\n      if (self.numIceCandidates === 0) {\n        Logger.warn('RTCPeer :: Received only NULL Ice Candidate before gathering candidates, Restarting the call');\n        RTCStateManager.callDisconnected(RTCErrors.DISCONNECT_REASONS.ICE_GATHERING_FAILED);\n      }\n    }, 5000);\n  },\n  replaceTrack: function replaceTrack(trackType, newStream) {\n    var self = this;\n    var oldStream = null;\n\n    if (trackType === 'audio' || trackType === 'video') {\n      oldStream = trackType === 'audio' ? this.model.get('localAudioStream') : this.model.get('localVideoStream');\n    } else {\n      //Handle content stream changes seperately\n      if (newStream) {\n        //New Content stream, set the peer model value\n        this.model.setStreamByType(newStream, 'local', newStream);\n        oldStream = this.model.get('fakeStream');\n      } else {\n        oldStream = this.model.get('localContentStream');\n        newStream = this.model.get('fakeStream');\n        this.model.setStreamByType(oldStream, 'local', null);\n      }\n    }\n\n    if (!_.isNull(oldStream) && !_.isUndefined(oldStream) && this.pc) {\n      if (oldStream.id !== newStream.id) {\n        var oldTrack = oldStream.getTracks()[0].id;\n        this.pc.getSenders().forEach(function (rtcRtpSender) {\n          if (rtcRtpSender && rtcRtpSender.track.id === oldTrack) {\n            rtcRtpSender.replaceTrack(newStream.getTracks()[0]);\n            self.model.setStreamByType(newStream, 'local', newStream);\n          }\n        });\n      }\n    } else {\n      Logger.debug('RTCPeer: Local Stream in PC is null, cannot replace the track');\n    }\n  },\n  close: function close() {\n    Logger.debug('RTCPeer: closing RTCPeerConnection now');\n    this.isClosing = true;\n    this.clearIceConnectivityTimer();\n    this.clearIceRestartTimer();\n    this.handleDisconnect();\n    this.callStats.close();\n    this.numIceCandidates = 0;\n  }\n});\nmodule.exports = RTCPeer;\n\n//# sourceURL=webpack:///./src/rtc-peer.js?");

/***/ }),

/***/ "./src/rtc-roster.js":
/*!***************************!*\
  !*** ./src/rtc-roster.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// esc = EventServiceClient\nmodule.exports = function (esc) {\n  console.log(\"(webrtcroster.js) Roster Object...\");\n\n  var initialize = function initialize() {};\n\n  var getParticipant = function getParticipant(n) {\n    var r = null;\n\n    if (n >= 0 && n < esc.roster.collection.length) {\n      r = esc.roster.collection.at(n);\n    }\n\n    return r;\n  };\n\n  var getPartyCount = function getPartyCount() {\n    return esc.roster.collection.length;\n  };\n\n  var isMe = function isMe(x) {\n    var m = false;\n    if (x && x.id) m = x.id == esc.roster.selfParticipant.id;\n    return m;\n  };\n\n  var onChange = function onChange(isOn, attr, cb) {\n    if (isOn) esc.roster.collection.bind(\"change:\" + attr, cb);else esc.roster.collection.unbind(\"change:\" + attr);\n  };\n\n  var onJoin = function onJoin(isOn, cb) {\n    if (isOn) esc.roster.collection.bind(\"add\", cb);else esc.roster.collection.unbind(\"add\");\n  };\n\n  var onLeave = function onLeave(isOn, cb) {\n    if (isOn) esc.roster.collection.bind(\"remove\", cb);else esc.roster.collection.unbind(\"remove\");\n  };\n\n  var close = function close() {\n    esc.roster.collection.unbind(\"\");\n    esc.close();\n  };\n\n  return {\n    initialize: initialize,\n    getParticipant: getParticipant,\n    getPartyCount: getPartyCount,\n    isMe: isMe,\n    onChange: onChange,\n    onJoin: onJoin,\n    onLeave: onLeave,\n    close: close\n  };\n};\n\n//# sourceURL=webpack:///./src/rtc-roster.js?");

/***/ }),

/***/ "./src/rtc-screensharing-manager.js":
/*!******************************************!*\
  !*** ./src/rtc-screensharing-manager.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar RTCErrors = __webpack_require__(/*! ./rtc-error */ \"./src/rtc-error.js\");\n\nvar RTCUtils = __webpack_require__(/*! ./rtc-utils */ \"./src/rtc-utils.js\");\n\nvar RTCScreenSharingModel = __webpack_require__(/*! ./rtc-screensharing-model */ \"./src/rtc-screensharing-model.js\");\n\nvar RTCSignallingManager = __webpack_require__(/*! ./rtc-signalling-manager */ \"./src/rtc-signalling-manager.js\");\n\nvar RTCTransactionManager = __webpack_require__(/*! ./rtc-transaction-manager */ \"./src/rtc-transaction-manager.js\");\n\nvar RTCStateManager = __webpack_require__(/*! ./rtc-state-manager */ \"./src/rtc-state-manager.js\");\n\nvar browserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar desktopMediaRequestId = null;\nvar RTCScreenSharingManager = my.Class({\n  config: {\n    chromeMediaConstraints: {\n      audio: false,\n      video: {\n        mandatory: {\n          chromeMediaSource: \"desktop\",\n          maxWidth: 1920,\n          maxHeight: 1080\n        },\n        optional: [{\n          maxFrameRate: 5\n        }, {\n          minFrameRate: 5\n        }, {\n          googTemporalLayeredScreencast: true\n        }]\n      }\n    },\n    ffMediaConstraints: {\n      audio: false,\n      video: {\n        mediaSource: 'screen',\n        width: {\n          \"max\": \"1920\"\n        },\n        height: {\n          \"max\": \"1080\"\n        },\n        frameRate: {\n          \"exact\": \"5\"\n        }\n      }\n    }\n  },\n  installationCompletedRetries: 0,\n  maxInstallationCompletedRetries: 5,\n  constructor: function constructor(params) {\n    _.bindAll(this);\n\n    this.isFirefox = browserDetector.browser === 'firefox' ? true : false;\n    this.model = new RTCScreenSharingModel();\n    this.model.on('change:extensionStatus', this.onExtensionStatusChanged);\n    this.model.on('change:tokenStatus', this.onTokenStatusChange);\n  },\n  setParams: function setParams(params) {\n    this.model.set('extensionId', params.extensionId);\n    this.config.features = params.features;\n    this.config.extensionID = params.extensionId;\n    this.screenSharingExtensionUrl = \"https://chrome.google.com/webstore/detail/\" + params.extensionId;\n  },\n  onExtensionStatusChanged: function onExtensionStatusChanged() {\n    var currentState = this.model.get('extensionStatus');\n    var states = RTCStates.EXTENSION_STATES;\n    Logger.debug('RTCScreenSharingManager: Extension status changed to: ', currentState);\n\n    switch (currentState) {\n      case states.NOT_INSTALLED:\n        break;\n\n      case states.INSTALLING:\n        break;\n\n      case states.INSTALLED:\n        if (this.doScreenSharing) {\n          Logger.debug('RTCScreenSharingManager: Screen sharing is on, sending msg to extension to get desktop media source ID');\n          this.getDesktopMediaSourceId();\n        }\n\n        break;\n\n      case states.IFRAME_INSTALL_FAILED:\n        this.model.set('screenShareState', RTCErrors.SCREEN_SHARING_STATES.INSTALL_EXTENSION_FAILED);\n        break;\n\n      case states.INSTALL_FAILED:\n        this.model.set('screenShareState', RTCErrors.SCREEN_SHARING_STATES.INSTALL_EXTENSION_FAILED);\n        break;\n\n      case states.INSTALL_CANCELLED:\n        break;\n\n      case states.REQUEST_FAILED:\n        break;\n    }\n  },\n  startScreenSharing: function startScreenSharing(options) {\n    var self = this;\n    var alreadyInstalled = this.model.isExtensionInstalled();\n    var params = options || {};\n\n    if (this.isFirefox) {\n      this.initFFScreenSharing();\n      this.doScreenSharing = true;\n    } else {\n      this.doScreenSharing = true;\n      this.installationCompletedRetries = 0;\n      this.model.set('extensionStatus', RTCStates.EXTENSION_STATES.NOT_INSTALLED);\n\n      if (alreadyInstalled || params.skipInlineInstallation) {\n        Logger.debug('RTCScreenSharingManager: Content Scripts have been injected, \"ping\" extension to check if extension is not uninstalled');\n        this.pingAndStartSharing();\n      } else {\n        Logger.warn('RTCScreenSharingManager: Content Scripts have not been injected, extension has not been installed');\n\n        if (browserDetector.browser === 'chrome') {\n          this.triggerInlineInstallation();\n        } else if (browserDetector.browser === 'opera') {\n          this.triggerOperaAddOnInlineInstallation(options);\n        }\n      }\n    }\n  },\n  stopScreenSharing: function stopScreenSharing() {\n    this.doScreenSharing = false;\n    var contentStream = this.model.get('localContentStream');\n\n    if (contentStream) {\n      Logger.debug('RTCScreenSharingManager: Stopping screen sharing now');\n      contentStream.getTracks().forEach(function (track) {\n        track.stop();\n      });\n      if (this.isFirefox) this.reset();\n    } else {\n      Logger.debug('RTCScreenSharingManager: Screen sharing has already been stopped');\n      this.reset();\n    }\n  },\n  triggerInlineInstallation: function triggerInlineInstallation() {\n    var self = this;\n\n    var successCallback = function successCallback(response) {\n      Logger.debug(\"RTCScreenSharingManager: Chrome inline installation was successful.\");\n      self.model.set('extensionStatus', RTCStates.EXTENSION_STATES.INSTALLING);\n      self.pingAndStartSharing();\n    };\n\n    var failureCallback = function failureCallback(error) {\n      self.handleInstallationFailure(error);\n    };\n\n    try {\n      // Add the chrome extension link in the head tag for inline installation.\n      $('head').append('<link rel=\"chrome-webstore-item\" href=' + this.screenSharingExtensionUrl + '>');\n      window.chrome.webstore.install(this.screenSharingExtensionUrl, successCallback, failureCallback);\n    } catch (exception) {\n      self.handleInstallationFailure(exception);\n    }\n  },\n  triggerOperaAddOnInlineInstallation: function triggerOperaAddOnInlineInstallation(options) {\n    var self = this;\n\n    var successCallback = function successCallback(response) {\n      Logger.debug(\"RTCScreenSharingManager: Opera inline installation was successful.\");\n      self.model.set('extensionStatus', RTCStates.EXTENSION_STATES.INSTALLING);\n      self.pingAndStartSharing();\n    };\n\n    var failureCallback = function failureCallback(error) {\n      self.handleInstallationFailure(error);\n    };\n\n    try {\n      opr.addons.installExtension(self.config.extensionID, successCallback, failureCallback);\n    } catch (exception) {\n      self.handleInstallationFailure(exception);\n    }\n  },\n  handleInstallationFailure: function handleInstallationFailure(error) {\n    var state;\n    var states = RTCStates.EXTENSION_STATES;\n    Logger.error('RTCScreenSharingManager: Inline installation of Chrome extension failed: ' + error);\n\n    switch (error) {\n      case \"User cancelled install\":\n        state = states.INSTALL_CANCELLED;\n        break;\n\n      case \"Chrome Web Store installations can only be started by the top frame.\":\n        state = states.IFRAME_INSTALL_FAILED;\n        break;\n\n      case \"Installs can only be initiated by one of the Chrome Web Store item's verified sites.\":\n        state = states.INSTALL_FAILED_DOMAIN_UNVERIFIED;\n        break;\n\n      default:\n        state = states.INSTALL_FAILED;\n    }\n\n    this.model.set('extensionStatus', state);\n  },\n  pingAndStartSharing: function pingAndStartSharing() {\n    var self = this;\n\n    if (this.installationCompletedRetries < this.maxInstallationCompletedRetries) {\n      window.setTimeout(function () {\n        self.installationCompletedRetries++;\n        Logger.debug('RTCScreenSharingManager: Sending \"ping\" to extension. Attempt no. ', self.installationCompletedRetries);\n        self.pingExtension(function (message) {\n          self.installationCompletedRetries = 0;\n          self.onPingSuccess(message);\n        }, function (error) {\n          if (error === 'emptyResponse') {\n            self.pingAndStartSharing();\n          } else {\n            self.model.set('extensionStatus', RTCStates.EXTENSION_STATES.REQUEST_FAILED);\n          }\n        });\n      }, 500);\n    } else {\n      this.model.set('extensionStatus', RTCStates.EXTENSION_STATES.INSTALL_FAILED);\n    }\n  },\n  pingExtension: function pingExtension(onSuccess, onError) {\n    this.sendMessageToExtension({\n      type: 'ping'\n    }).then(onSuccess, onError);\n  },\n  onPingSuccess: function onPingSuccess(message) {\n    if (message.type === 'pong' && this.doScreenSharing) {\n      this.model.set('extensionStatus', RTCStates.EXTENSION_STATES.INSTALLED, {\n        silent: true\n      });\n      this.model.trigger('change:extensionStatus', this.model);\n    }\n  },\n  getDesktopMediaSourceId: function getDesktopMediaSourceId() {\n    var deferred = Q.defer();\n    var self = this;\n    this.model.set('tokenStatus', RTCBlueJay.TOKEN_STATUS.WAITING); // Make a request to screen sharing extension for getting chrome media source Id.\n    // The below API will trigger extension to show the Screen Share Popup UI of chrome.\n\n    this.sendMessageToExtension({\n      type: 'getScreen',\n      options: this.config.features.applicationSharing ? ['screen', 'window'] : ['screen']\n    }).then(function (message) {\n      switch (message.type) {\n        case 'gotScreenSharing':\n          self.model.set('chromeMediaSourceId', message.sourceId);\n          self.requestToken();\n          break;\n\n        case 'canceledGetScreen':\n          self.model.set('tokenStatus', RTCBlueJay.TOKEN_STATUS.CANCELLED);\n          break;\n\n        default:\n          Logger.error('RTCScreenSharingManager: Unhandled message type for \"getScreen\" API');\n          self.model.set('tokenStatus', RTCBlueJay.TOKEN_STATUS.CANCELLED);\n      }\n    }, function (error) {});\n    return deferred.promise;\n  },\n  sendMessageToExtension: function sendMessageToExtension(params) {\n    var deferred = Q.defer();\n\n    var msg = _.extend({\n      targetModule: 'RTCDesktopMedia'\n    }, params);\n\n    try {\n      window.chrome.runtime.sendMessage(this.model.get('extensionId'), msg, _.bind(function (message) {\n        Logger.debug(\"RTCScreenSharingManager: Response from extension: \" + JSON.stringify(message));\n\n        if (_.isUndefined(message)) {\n          deferred.reject('emptyResponse');\n        } else {\n          deferred.resolve(message);\n        }\n      }, this));\n    } catch (exception) {\n      Logger.error('RTCScreenSharingManager: Exception occured while sending message to Extension: ', exception);\n      deferred.reject('error');\n    }\n\n    return deferred.promise;\n  },\n  initFFScreenSharing: function initFFScreenSharing() {\n    this.model.set('tokenStatus', RTCBlueJay.TOKEN_STATUS.WAITING);\n    this.getDesktopMediaStream();\n  },\n  getDesktopMediaStream: function getDesktopMediaStream() {\n    var mediaSource = this.config.features.applicationSharing ? 'application' : 'screen';\n    this.config.ffMediaConstraints.video.mediaSource = mediaSource;\n    var desktopStreamConstraints = this.isFirefox ? this.config.ffMediaConstraints : RTCUtils.deepMergeObjects(this.config.chromeMediaConstraints, {\n      video: {\n        mandatory: {\n          chromeMediaSourceId: this.model.get('chromeMediaSourceId')\n        }\n      }\n    });\n    window.navigator.getUserMedia(desktopStreamConstraints, this.getDesktopMediaSuccess, this.getDesktopMediaError);\n  },\n  getDesktopMediaSuccess: function getDesktopMediaSuccess(stream) {\n    Logger.debug(\"RTCScreenSharingManager: Local Content has been acquired\");\n\n    if (this.isFirefox) {\n      this.requestToken();\n    }\n\n    stream.bjn_label = \"content_stream\";\n    stream.getVideoTracks()[0].onended = _.bind(function () {\n      Logger.debug(\"RTCScreenSharingManager: Local Content Stream has ended.\");\n      this.reset();\n      if (!this.isFirefox) this.sendMessageToExtension({\n        type: 'focusTab'\n      });\n    }, this);\n    this.model.set('localContentStream', stream);\n  },\n  getDesktopMediaError: function getDesktopMediaError(error) {\n    Logger.error(\"Failed to get desktop media stream, error: \", error);\n    var shouldTrigger = false; // If the token status is already 'cancelled', manually trigger an event\n    // so that RTCController gets a cue to fire an event which hides the\n    // UI overlay and cleans up any flags/tokens.\n\n    if (this.model.get('tokenStatus') === RTCBlueJay.TOKEN_STATUS.CANCELLED) {\n      shouldTrigger = true;\n    }\n\n    this.model.set('tokenStatus', RTCBlueJay.TOKEN_STATUS.CANCELLED);\n\n    if (shouldTrigger) {\n      this.model.trigger('change:firefoxScreenShareCancelled', this.model);\n    }\n\n    this.stopScreenSharing();\n  },\n  requestToken: function requestToken() {\n    var tokenMsg = RTCBlueJay.requestTokenMsg();\n    RTCSignallingManager.sendMsg(tokenMsg);\n    if (RTCStateManager.getCurrentCallState() !== RTCStates.BJ_CALLSTATES.IDLE) RTCTransactionManager.onBlueJayRequest(tokenMsg);\n  },\n  releaseToken: function releaseToken() {\n    var tokenMsg = RTCBlueJay.releaseTokenMsg();\n    RTCSignallingManager.sendMsg(tokenMsg);\n    RTCTransactionManager.onBlueJayRequest(tokenMsg);\n    this.model.set('tokenStatus', RTCBlueJay.TOKEN_STATUS.RELEASED);\n  },\n  handleTokenMessage: function handleTokenMessage(msg) {\n    var tokenMsgType = msg.params.type;\n\n    switch (tokenMsgType) {\n      case RTCBlueJay.TOKEN_TYPES.STATUS:\n        this.model.set('tokenStatus', msg.params.status);\n        break;\n\n      case RTCBlueJay.TOKEN_TYPES.TOKENINDICATION:\n        this.model.set('presentationToken', msg.params);\n        break;\n\n      case RTCBlueJay.TOKEN_TYPES.CONTENTINDICATION:\n        this.model.set('presentationToken', msg.params);\n        break;\n\n      default:\n        Logger.error('RTCScreenSharingManager: Invalid type passed in token msg: ', tokenMsgType);\n    }\n  },\n  onTokenStatusChange: function onTokenStatusChange(model) {\n    var tokenStatus = model.get('tokenStatus');\n\n    switch (tokenStatus) {\n      case RTCBlueJay.TOKEN_STATUS.GRANTED:\n        if (this.doScreenSharing) {\n          if (!this.isFirefox) {\n            this.getDesktopMediaStream();\n          }\n        } else {\n          Logger.info(\"RTCScreenSharingManager: Screen sharing was cancelled while acquiring token\");\n          this.releaseToken();\n        }\n\n        break;\n\n      case RTCBlueJay.TOKEN_STATUS.REVOKED:\n        Logger.debug(\"RTCScreenSharingManager: Token has been 'revoked', must have been hijacked!\");\n        this.stopScreenSharing();\n        break;\n    }\n  },\n  sendPresentaionRatio: function sendPresentaionRatio(splitRatio) {\n    var messageParams = {\n      type: \"presentationratio\",\n      ratio: {\n        content: splitRatio.content,\n        video: splitRatio.video\n      }\n    };\n    var infoMsg = RTCBlueJay.getInfoMsg(messageParams);\n    RTCSignallingManager.sendMsg(infoMsg);\n    RTCTransactionManager.onBlueJayRequest(infoMsg);\n  },\n  reset: function reset() {\n    this.doScreenSharing = false;\n    var tokenStatus = this.model.get('tokenStatus');\n    this.releaseToken();\n    this.model.set('localContentStream', null);\n    this.model.set('chromeMediaSourceId', null);\n  },\n  close: function close() {\n    this.stopScreenSharing();\n  }\n});\nmodule.exports = new RTCScreenSharingManager();\n\n//# sourceURL=webpack:///./src/rtc-screensharing-manager.js?");

/***/ }),

/***/ "./src/rtc-screensharing-model.js":
/*!****************************************!*\
  !*** ./src/rtc-screensharing-model.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar RTCScreenSharingModel = Backbone.Model.extend({\n  defaults: {\n    \"localContentStream\": null,\n    \"chromeMediaSourceId\": null,\n    \"isChromeExtensionInstalled\": false,\n    \"extensionStatus\": RTCStates.EXTENSION_STATES.NOT_INSTALLED,\n    \"screenShareState\": null,\n    \"tokenStatus\": null,\n    \"presentationToken\": {},\n    \"firefoxScreenShareCancelled\": null\n  },\n  isExtensionInstalled: function isExtensionInstalled() {\n    var extensionDom = $('body').find('.InMeetingExtensionIsInstalled');\n    var extensionDomInserted = false;\n    var self = this;\n\n    _.each(extensionDom, function (el, index, list) {\n      if ($(el).attr('data-extension-id') === self.get('extensionId')) {\n        extensionDomInserted = true;\n      }\n    });\n\n    var alreadyInstalled = this.get('extensionStatus') === RTCStates.EXTENSION_STATES.INSTALLED;\n\n    if (extensionDomInserted || alreadyInstalled) {\n      Logger.debug(\"RTCScreenSharingModel: The Screen Sharing Chrome extension has been installed.\");\n      return true;\n    }\n\n    Logger.warn(\"RTCScreenSharingModel: The Screen Sharing Chrome extension is not installed.\");\n    return false;\n  },\n  isExtensionInstalling: function isExtensionInstalling() {\n    return this.model.get('extensionStatus') === RTCStates.EXTENSION_STATES.INSTALLING;\n  }\n});\nmodule.exports = RTCScreenSharingModel;\n\n//# sourceURL=webpack:///./src/rtc-screensharing-model.js?");

/***/ }),

/***/ "./src/rtc-signalling-manager.js":
/*!***************************************!*\
  !*** ./src/rtc-signalling-manager.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n* Blue Jeans WebRTC Signalling Manager\n* =====================================================================================\n* @version In bower.json\n* @uses custom JSON-based protocol to send connection establishment data to remote peer\n*\n*/\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar io = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/lib/index.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCMessageParser = __webpack_require__(/*! ./rtc-message-parser */ \"./src/rtc-message-parser.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar RTCSignallingManager = my.Class({\n  STATIC: {\n    MESSAGE_BASE: {\n      \"bluejay\": \"1.0\"\n    }\n  },\n  config: {\n    'callId': null,\n    'sockUrl': null,\n    'socketId': null,\n    'socketioOpts': {\n      reconnectionAttempts: 15,\n      reconnectionDelay: 2000,\n      reconnectionDelayMax: 2500,\n      timeout: 2000,\n      forceNew: true\n    }\n  },\n  constructor: function constructor(options) {\n    _.bindAll(this);\n\n    _.extend(this.config, options);\n\n    _.extend(this, Backbone.Events);\n\n    this.isConnected = false;\n    this.WS_STATES = RTCStates.WS_STATES;\n  },\n  createSocket: function createSocket(params) {\n    this.socket = io.connect(params.sockUrl, this.config.socketioOpts);\n    this.setupListeners();\n  },\n  setupListeners: function setupListeners() {\n    this.socket.on('message', this.handleMessage); // below socket messages are emitted by socket.io. These are reserved messages.\n\n    this.socket.on('connect', this.socketConnected);\n    this.socket.on('error', this.socketError);\n    this.socket.on('disconnect', this.socketDisconnect);\n    this.socket.on('reconnecting', this.socketReconnecting);\n    this.socket.on('reconnect_failed', this.socketReconnectFailed);\n    this.socket.on('reconnect', this.socketReconnect);\n    this.socket.on('connect_error', this.onConnectError);\n  },\n  setupMessageParser: function setupMessageParser(signallingCallbacks) {\n    this.messageParser = new RTCMessageParser({\n      'callbacks': signallingCallbacks\n    });\n  },\n\n  /* ============================= */\n\n  /*    Socket Message Handlers    */\n\n  /* ============================= */\n  handleMessage: function handleMessage(message) {\n    Logger.debug(\"RTCSignallingManager: Received message on socket: \" + message);\n    this.messageParser.parseIncomingMessage(message);\n  },\n  socketConnected: function socketConnected() {\n    this.isConnected = true;\n    this.config.socketId = this.socket.id;\n    this.trigger('wsConnectionStateChange', this.WS_STATES.CONNECTED, this.socket.id);\n    Logger.debug(\"RTCSignallingManager: Socket connected successfully\");\n  },\n  socketError: function socketError(error) {\n    this.isConnected = false;\n    this.trigger('wsConnectionStateChange', this.WS_STATES.DISCONNECTED, this.config.socketId);\n    Logger.error(\"RTCSignallingManager: Received 'error' message on socket\");\n  },\n  socketDisconnect: function socketDisconnect(error) {\n    this.isConnected = false;\n    this.trigger('wsConnectionStateChange', this.WS_STATES.DISCONNECTED, this.config.socketId);\n\n    if (error === \"io client disconnect\") {\n      Logger.debug(\"RTCSignallingManager: Socket disconnected, initiated by client: \", error);\n    } else {\n      Logger.error(\"RTCSignallingManager: Socket disconnected, not initiated by client: \", error);\n    }\n  },\n  socketReconnecting: function socketReconnecting(number) {\n    this.isConnected = false;\n    Logger.debug(\"RTCSignallingManager: Reconnecting socket, reconnect attempt \", number);\n  },\n  socketReconnectFailed: function socketReconnectFailed() {\n    this.isConnected = false;\n    this.trigger('wsConnectionStateChange', this.WS_STATES.FAILED, this.config.socketId);\n    Logger.debug(\"RTCSignallingManager: Socket reconnection failed\");\n  },\n  socketReconnect: function socketReconnect() {\n    Logger.debug(\"RTCSignallingManager: Socket reconnected\");\n    this.isConnected = true;\n    this.config.socketId = this.socket.id;\n    this.trigger('wsConnectionStateChange', this.WS_STATES.RECONNECTED, this.socket.id);\n  },\n  onConnectError: function onConnectError(error) {\n    Logger.debug(\"RTCSignallingManager :: connect error : \" + error);\n  },\n  sendMsg: function sendMsg(msg) {\n    if (_.isNull(msg.call) || _.isUndefined(msg.call)) {\n      Logger.warn(\"RTCSignallingManager: Invalid BlueJay message, 'call' field is missing\");\n      return false;\n    }\n\n    if (!msg.id) {\n      Logger.warn(\"RTCSignallingManager: Invalid BlueJay message, 'id' field is missing\");\n      return false;\n    }\n\n    if (!this.isConnected) {\n      Logger.warn(\"RTCSignallingManager: Socket is not connected, Message :: \" + JSON.stringify(msg));\n      return false;\n    }\n\n    this.socket.emit('message', JSON.stringify(msg));\n    Logger.debug(\"RTCSignallingManager: Sending socket message: \" + JSON.stringify(msg));\n    return true;\n  },\n  close: function close() {\n    if (this.socket) {\n      this.isConnected = false;\n      this.socket.disconnect();\n      this.socket = null;\n    } else {\n      Logger.warn('RTCSignallingManager: Socket has already been closed.');\n    }\n  }\n});\nmodule.exports = new RTCSignallingManager();\n\n//# sourceURL=webpack:///./src/rtc-signalling-manager.js?");

/***/ }),

/***/ "./src/rtc-state-manager.js":
/*!**********************************!*\
  !*** ./src/rtc-state-manager.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar StateMachine = __webpack_require__(/*! state_machine */ \"./src/thirdparty/state_machine.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar RTCCallStateModel = Backbone.Model.extend({\n  defaults: {\n    currentState: \"\",\n    prevState: [],\n    iceConnectionState: \"\",\n    iceGatheringState: \"\",\n    signalingState: \"\",\n    disconnectCode: \"\",\n    disconnectReason: \"\"\n  },\n  setCurrentState: function setCurrentState(state) {\n    var curState = this.get('currentState');\n    var prevState = this.get('prevState');\n\n    if (state !== curState) {\n      prevState.push(curState);\n      this.set('currentState', state);\n    }\n\n    this.logStateTransition();\n  },\n  logStateTransition: function logStateTransition() {\n    Logger.debug(\"RTCStateManager: Call State: \" + this.get('currentState') + \", Ice-Gathering: \" + this.get('iceGatheringState') + \", Ice-Connection: \" + this.get('iceConnectionState') + \", Signaling: \" + this.get('signalingState'));\n  },\n  getCurrentState: function getCurrentState() {\n    return this.get('currentState');\n  },\n  getPreviousState: function getPreviousState() {\n    return this.get('prevState');\n  },\n  getDisconnectReason: function getDisconnectReason() {\n    return this.get('disconnectReason');\n  }\n});\nvar RTCStateManager = my.Class({\n  STATIC: {\n    BJ_CALLSTATES: RTCStates.BJ_CALLSTATES,\n    ICE_G_STATES: RTCStates.addWebrtcStatePrefix('iceG_', RTCStates.WEBRTC_STATES.iceGatheringState),\n    ICE_C_STATES: RTCStates.addWebrtcStatePrefix('ice_', RTCStates.WEBRTC_STATES.iceConnectionState),\n    SIG_STATES: RTCStates.addWebrtcStatePrefix('sig_', RTCStates.WEBRTC_STATES.signalingState),\n    STATE_EVTS: RTCStates.STATE_EVENTS\n  },\n  constructor: function constructor(params) {\n    _.bindAll(this);\n\n    _.extend(this, Backbone.Events);\n\n    this.model = new RTCCallStateModel();\n    this.stateMachine = this.initStateMachine();\n  },\n  initStateMachine: function initStateMachine() {\n    var transition = StateMachine.transitions.transition;\n    var anyOf = StateMachine.triggers.anyOf;\n    var allOf = StateMachine.triggers.allOf;\n    var BJ_CALLSTATES = RTCStateManager.BJ_CALLSTATES;\n    var ICE_C_STATES = RTCStateManager.ICE_C_STATES;\n    var ICE_G_STATES = RTCStateManager.ICE_G_STATES;\n    var SIG_STATES = RTCStateManager.SIG_STATES;\n    var STATE_EVTS = RTCStateManager.STATE_EVTS;\n\n    var callStateChange = function (params) {\n      this.callStateChange(params);\n    }.bind(this);\n\n    return StateMachine.create({\n      initial: BJ_CALLSTATES.IDLE,\n      events: {\n        // Normal flow: Initialise --> Connect --> StartMedia --> Establish Connection\n        // ICE Restart Flow: (Re)Initialise --> (Re)Connect --> StartMedia --> Establish Connection\n        initialise: transition([{\n          from: BJ_CALLSTATES.IDLE,\n          to: BJ_CALLSTATES.INITIALISING\n        }, {\n          from: BJ_CALLSTATES.RESTART_MEDIA,\n          to: BJ_CALLSTATES.REINITIALISING\n        }]),\n        connect: transition([{\n          from: BJ_CALLSTATES.INITIALISING,\n          to: BJ_CALLSTATES.CONNECTING\n        }, {\n          from: BJ_CALLSTATES.REINITIALISING,\n          to: BJ_CALLSTATES.RECONNECTING\n        }]),\n        startMedia: transition([{\n          from: BJ_CALLSTATES.CONNECTING,\n          to: BJ_CALLSTATES.STARTING_MEDIA\n        }, {\n          from: BJ_CALLSTATES.RECONNECTING,\n          to: BJ_CALLSTATES.STARTING_MEDIA\n        }]),\n        establishConnection: transition([{\n          from: BJ_CALLSTATES.STARTING_MEDIA,\n          to: BJ_CALLSTATES.CONNECTED\n        }, {\n          from: BJ_CALLSTATES.RESTART_MEDIA,\n          to: BJ_CALLSTATES.CONNECTED\n        }]),\n        mediaDisruption: transition({\n          from: BJ_CALLSTATES.CONNECTED,\n          to: BJ_CALLSTATES.RESTART_MEDIA,\n          resetTriggers: true\n        }),\n        disconnect: transition({\n          from: _.without(_.values(BJ_CALLSTATES), BJ_CALLSTATES.DISCONNECTED),\n          to: BJ_CALLSTATES.DISCONNECTED,\n          resetTriggers: true\n        }),\n        reset: transition({\n          from: _.without(_.values(BJ_CALLSTATES), BJ_CALLSTATES.IDLE),\n          to: BJ_CALLSTATES.IDLE,\n          resetTriggers: true\n        })\n      },\n      triggers: [{\n        event: STATE_EVTS.INITIALISE,\n        activatedBy: allOf([SIG_STATES.HAVE_LOCAL_OFFER])\n      }, {\n        event: STATE_EVTS.CONNECT,\n        activatedBy: anyOf([ICE_G_STATES.GATHERING, ICE_G_STATES.COMPLETE])\n      }, {\n        event: STATE_EVTS.START_MEDIA,\n        activatedBy: allOf([SIG_STATES.STABLE])\n      }, {\n        event: STATE_EVTS.ESTABLISH_CONNECTION,\n        activatedBy: anyOf([ICE_C_STATES.COMPLETED, ICE_C_STATES.CONNECTED])\n      }, // Ice Connection state changes to \"Disconnected\"!!!\n      {\n        event: STATE_EVTS.MEDIA_DISRUPTION,\n        activatedBy: allOf([ICE_C_STATES.DISCONNECTED])\n      }, // Nasty errors have occured, only the client can recover from this!! Needs complete call to be restarted.\n      {\n        event: STATE_EVTS.DISCONNECT,\n        activatedBy: allOf([ICE_C_STATES.FAILED, ICE_C_STATES.CLOSED])\n      }],\n      callbacks: [StateMachine.transitions.afterTransition({}, callStateChange)]\n    });\n  },\n  iceGatheringStateChange: function iceGatheringStateChange(state) {\n    this.model.set('iceGatheringState', state);\n    this.stateMachine.trigger('iceG_' + state);\n  },\n  signalingStateChange: function signalingStateChange(state) {\n    this.model.set('signalingState', state);\n    this.stateMachine.trigger('sig_' + state);\n  },\n  iceConnectionStateChange: function iceConnectionStateChange(state) {\n    this.model.set('iceConnectionState', state);\n    this.stateMachine.trigger('ice_' + state);\n  },\n  callDisconnected: function callDisconnected(params) {\n    this.stateMachine.disconnect();\n\n    this._updateDisconnectState(params);\n\n    this.model.setCurrentState(this.stateMachine.getState());\n  },\n  _updateDisconnectState: function _updateDisconnectState(params) {\n    var code = params && params.code || \"\";\n    var reason = params && params.message || \"\";\n\n    if (code) {\n      code = typeof code === \"string\" ? parseInt(code, 10) : code;\n      this.model.set({\n        'disconnectCode': code,\n        'disconnectReason': {\n          'code': code,\n          'message': reason\n        }\n      });\n    }\n  },\n  getCurrentCallState: function getCurrentCallState() {\n    return this.model.getCurrentState();\n  },\n  getDisconnectReason: function getDisconnectReason() {\n    return this.model.getDisconnectReason();\n  },\n  callStateChange: function callStateChange(params) {\n    if (params.to !== \"disconnected\") this.model.setCurrentState(params.to);\n  },\n  reset: function reset() {\n    this.stateMachine.reset();\n    this.model.setCurrentState(this.stateMachine.getState());\n  }\n});\nmodule.exports = new RTCStateManager();\n\n//# sourceURL=webpack:///./src/rtc-state-manager.js?");

/***/ }),

/***/ "./src/rtc-states.js":
/*!***************************!*\
  !*** ./src/rtc-states.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar RTCStates = my.Class({\n  constructor: function constructor(options) {\n    this.BJ_CALLSTATES = {\n      IDLE: 'idle',\n      INITIALISING: 'initialising',\n      CONNECTING: 'connecting',\n      STARTING_MEDIA: 'starting-media',\n      CONNECTED: 'connected',\n      RESTART_MEDIA: 'restart-media',\n      REINITIALISING: 're-initialising',\n      RECONNECTING: 'reconnecting',\n      DISCONNECTED: 'disconnected'\n    };\n    this.WEBRTC_STATES = {\n      iceGatheringState: {\n        NEW: \"new\",\n        GATHERING: \"gathering\",\n        COMPLETE: \"complete\"\n      },\n      iceConnectionState: {\n        NEW: \"new\",\n        CHECKING: \"checking\",\n        CONNECTED: \"connected\",\n        COMPLETED: \"completed\",\n        FAILED: \"failed\",\n        DISCONNECTED: \"disconnected\",\n        CLOSED: \"closed\"\n      },\n      signalingState: {\n        STABLE: \"stable\",\n        HAVE_LOCAL_OFFER: \"have-local-offer\",\n        HAVE_REMOTE_OFFER: \"have-remote-offer\",\n        HAVE_LOCAL_PRANSWER: \"have-local-pranswer\",\n        HAVE_REMOTE_PRANSWER: \"have-remote-pranswer\",\n        CLOSED: \"closed\"\n      }\n    };\n    this.STATE_EVENTS = {\n      INITIALISE: 'initialise',\n      CONNECT: 'connect',\n      START_MEDIA: 'startMedia',\n      ESTABLISH_CONNECTION: 'establishConnection',\n      MEDIA_DISRUPTION: 'mediaDisruption',\n      //FAILED_CONNECTION       : 'failedConnection',\n      DISCONNECT: 'disconnect',\n      RESET: 'reset'\n    };\n    this.TRANSACTION_STATES = {\n      INIT: 'init',\n      RESEND: 'resend',\n      FAILED: 'failed',\n      FINISHED: 'finished',\n      ERROR: 'error'\n    };\n    this.EXTENSION_STATES = {\n      NOT_INSTALLED: 'not_installed',\n      INSTALLING: 'installing',\n      BG_SCRIPTS_INJECTED: 'background_scripts_injected',\n      INSTALLED: 'installed',\n      IFRAME_INSTALL_FAILED: 'iframe_install_failed',\n      // occurs when inline install is tried from skinny embedded in iframe\n      INSTALL_FAILED_DOMAIN_UNVERIFIED: 'install_failed_domain_not_verified',\n      // occurs when extension is verfied for xyz.com but installing from abc.com\n      INSTALL_FAILED: 'install_failed',\n      INSTALL_CANCELLED: 'install_cancelled',\n      REQUEST_FAILED: 'request_failed'\n    };\n    this.WS_STATES = {\n      CONNECTED: \"connected\",\n      RECONNECTED: \"reconnected\",\n      DISCONNECTED: \"disconnected\",\n      FAILED: \"failed\",\n      CLOSED: \"closed\"\n    };\n    this.WS_STATES = {\n      CONNECTED: \"connected\",\n      RECONNECTED: \"reconnected\",\n      DISCONNECTED: \"disconnected\",\n      FAILED: \"failed\",\n      CLOSED: \"closed\"\n    };\n  },\n  addWebrtcStatePrefix: function addWebrtcStatePrefix(prefix, states) {\n    var prefixStates = {};\n\n    _.forEach(states, function (value, key) {\n      prefixStates[key] = prefix + value;\n    });\n\n    return prefixStates;\n  }\n});\nmodule.exports = new RTCStates();\n\n//# sourceURL=webpack:///./src/rtc-states.js?");

/***/ }),

/***/ "./src/rtc-transaction-manager.js":
/*!****************************************!*\
  !*** ./src/rtc-transaction-manager.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar Backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar RTCTransactionModel = __webpack_require__(/*! ./rtc-transaction-model */ \"./src/rtc-transaction-model.js\");\n\nvar RTCBlueJay = __webpack_require__(/*! ./rtc-bluejay */ \"./src/rtc-bluejay.js\");\n\nvar RTCStates = __webpack_require__(/*! ./rtc-states */ \"./src/rtc-states.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar RTCStateManager = __webpack_require__(/*! ./rtc-state-manager */ \"./src/rtc-state-manager.js\");\n\nvar RTCTransactionManager = my.Class({\n  config: {\n    requestTimeout: 5000,\n    keepaliveTimeout: 10000,\n    maxRetransmitAttempts: 3\n  },\n  STATIC: {\n    METHODS: RTCBlueJay.METHODS\n  },\n  constructor: function constructor() {\n    _.bindAll(this);\n\n    _.extend(this, Backbone.Events);\n\n    this.model = new RTCTransactionModel();\n    this.requestTimers = {};\n  },\n  onRequest: function onRequest(messageId) {\n    var self = this;\n\n    var callbackWithMessageId = function callbackWithMessageId() {\n      self.onRequestTimeout(messageId);\n    };\n\n    this.requestTimers[messageId] = setInterval(callbackWithMessageId, this.config.requestTimeout);\n  },\n  onBlueJayRequest: function onBlueJayRequest(requestMessage) {\n    this.model.addRequest(requestMessage.id, {\n      method: requestMessage.method,\n      message: requestMessage,\n      state: 'init',\n      retransmitAttempts: 0\n    }); //special message handling for BlueJay Request Message\n\n    switch (requestMessage.method) {\n      case RTCBlueJay.METHODS.MUTE:\n        var prevMuteMsgID = this.model.getMuteMessage();\n\n        if (!_.isUndefined(prevMuteMsgID)) {\n          this.removeRequestTransaction(prevMuteMsgID);\n        }\n\n        this.model.addMuteMessage(requestMessage.id);\n        break;\n\n      case RTCBlueJay.METHODS.TOKEN:\n        var prevTokenMsgId = this.model.getTokenMessage();\n\n        if (!_.isUndefined(prevTokenMsgId)) {\n          this.removeRequestTransaction(prevTokenMsgId);\n        }\n\n        this.model.addTokenMessage(requestMessage.id);\n        break;\n\n      default:\n        break;\n    } //Start the request timer\n\n\n    this.onRequest(requestMessage.id);\n  },\n  removeRequestTransaction: function removeRequestTransaction(messageId) {\n    if (!_.isUndefined(this.requestTimers[messageId])) {\n      clearInterval(this.requestTimers[messageId]);\n      delete this.requestTimers[messageId];\n    }\n\n    this.model.removeRequest(messageId);\n  },\n  onOutgoingBlueJayResponse: function onOutgoingBlueJayResponse(messageId, response) {\n    this.model.addResponse(messageId, {\n      response: response\n    });\n  },\n  onIncomingBlueJayResponse: function onIncomingBlueJayResponse(messageId) {\n    var requestMessage = this.model.getRequest(messageId);\n\n    if (!_.isUndefined(requestMessage)) {\n      //request response is received, remove the message from the transaction\n      this.removeRequestTransaction(messageId); //special message handling\n\n      switch (requestMessage.method) {\n        case RTCBlueJay.METHODS.CONNECT:\n          this.model.set('connectResponseReceived', true);\n          this.trigger('receivedConnectResponse');\n          break;\n\n        case RTCBlueJay.METHODS.DISCONNECT:\n          this.trigger('closeSocketConnection');\n          break;\n\n        default:\n          break;\n      }\n    } else if (this.model.get('bluejayKeepAlive').messageId == messageId) {\n      this.model.addKeepAlive({\n        messageId: messageId,\n        state: 'finished'\n      });\n    }\n  },\n  lookupOutgoingResponse: function lookupOutgoingResponse(messageId) {\n    return this.model.getResponse(messageId);\n  },\n  //Keep alive messages are handeled seperately\n  onKeepaliveRequest: function onKeepaliveRequest(messageId) {\n    this.model.addKeepAlive({\n      messageId: messageId,\n      state: 'init'\n    });\n  },\n  getKeepaliveMessageState: function getKeepaliveMessageState() {\n    return this.model.get('bluejayKeepAlive').state;\n  },\n  onRequestTimeout: function onRequestTimeout(messageId) {\n    var requestTransaction = this.model.getRequest(messageId);\n\n    if (requestTransaction.method === RTCBlueJay.METHODS.DISCONNECT) {\n      this.removeRequestTransaction(messageId);\n      this.trigger('closeSocketConnection');\n      return;\n    }\n\n    if (!_.isUndefined(requestTransaction)) {\n      switch (requestTransaction.state) {\n        case 'init':\n        case 'resend':\n          this.retransmitRequest(requestTransaction, messageId);\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n  retransmitRequest: function retransmitRequest(requestTransaction, messageId) {\n    if (requestTransaction.retransmitAttempts >= this.config.maxRetransmitAttempts) {\n      Logger.warn('RTCTransactionManager: Request timeout occured for - Method :' + requestTransaction.method + ' :: Id - ' + messageId);\n      this.removeRequestTransaction(messageId);\n      this.trigger('requestTimeout', {\n        'messageId': messageId,\n        'method': requestTransaction.method\n      });\n    } else {\n      requestTransaction.state = 'resend';\n      requestTransaction.retransmitAttempts++;\n      this.trigger('retransmitRequest', requestTransaction.message);\n      this.model.addRequest(messageId, requestTransaction);\n    }\n  },\n  getRequestMessage: function getRequestMessage(messageId) {\n    return this.model.getRequest(messageId).message;\n  },\n  updateCallState: function updateCallState(state) {\n    this.model.set('callState', state);\n  },\n  reset: function reset() {\n    _.each(this.requestTimers, function (timer) {\n      clearInterval(timer);\n    });\n\n    this.model.resetTransaction();\n    this.model.set('connectResponseReceived', false);\n  }\n});\nmodule.exports = new RTCTransactionManager();\n\n//# sourceURL=webpack:///./src/rtc-transaction-manager.js?");

/***/ }),

/***/ "./src/rtc-transaction-model.js":
/*!**************************************!*\
  !*** ./src/rtc-transaction-model.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar backbone = __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\");\n\nvar RTCTransactionModel = Backbone.Model.extend({\n  defaults: {\n    //Add default values for the tabel\n    bluejayReqMap: {},\n    bluejayKeepAlive: {},\n    bluejayRespMap: {},\n    requestCallbacks: {},\n    bluejayMuteMsg: {},\n    bluejayTokenMsg: {},\n    connectResponseReceived: false,\n    callState: 'idle'\n  },\n  addRequest: function addRequest(messageId, requestParams) {\n    this.get('bluejayReqMap')[messageId] = requestParams;\n  },\n  updateRequest: function updateRequest(messageId, requestParams) {\n    this.get('bluejayReqMap')[messageId] = requestParams;\n  },\n  removeRequest: function removeRequest(messageId) {\n    if (this.get('bluejayReqMap')[messageId]) {\n      this.unset('bluejayReqMap'[messageId], {\n        silent: true\n      });\n    }\n  },\n  addResponse: function addResponse(messageId, response) {\n    this.get('bluejayRespMap')[messageId] = response;\n  },\n  getRequest: function getRequest(messageId) {\n    return this.get('bluejayReqMap')[messageId];\n  },\n  getResponse: function getResponse(messageId) {\n    return this.get('bluejayRespMap')[messageId];\n  },\n  addKeepAlive: function addKeepAlive(msg) {\n    this.set('bluejayKeepAlive', msg);\n  },\n  addMuteMessage: function addMuteMessage(msg) {\n    this.set('bluejayMuteMsg', msg);\n  },\n  addTokenMessage: function addTokenMessage(msg) {\n    this.set('bluejayTokenMsg', msg);\n  },\n  getMuteMessage: function getMuteMessage() {\n    return this.get('bluejayMuteMsg');\n  },\n  getTokenMessage: function getTokenMessage() {\n    return this.get('bluejayTokenMsg');\n  },\n  getAllRequestMsgIds: function getAllRequestMsgIds() {\n    return _.keys(this.get('bluejayReqMap'));\n  },\n  resetTransaction: function resetTransaction() {\n    this.set(this.defaults, {\n      silent: true\n    });\n  }\n});\nmodule.exports = RTCTransactionModel;\n\n//# sourceURL=webpack:///./src/rtc-transaction-model.js?");

/***/ }),

/***/ "./src/rtc-utils.js":
/*!**************************!*\
  !*** ./src/rtc-utils.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n\nvar Q = __webpack_require__(/*! q */ \"./node_modules/q/q.js\");\n\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar Logger = __webpack_require__(/*! Logger */ \"./src/thirdparty/Logger.js\");\n\nvar RTCUtils = my.Class({\n  constructor: function constructor() {},\n  promiseDecorator: function promiseDecorator(func) {\n    return function () {\n      var deferred = Q.defer();\n      func.apply(this, arguments);\n      deferred.resolve();\n      return deferred.promise;\n    };\n  },\n  deepMergeObjects: function deepMergeObjects(objectA, objectB) {\n    objectA = _typeof(objectA) === 'object' ? objectA : {};\n    objectB = _typeof(objectB) === 'object' ? objectB : {};\n\n    var keysA = _.keys(objectA),\n        keysB = _.keys(objectB);\n\n    var result = _.extend({}, objectA);\n\n    var type = Object.prototype.toString;\n\n    _.each(keysB, function (key, index, list) {\n      if (_.indexOf(keysA, key) === -1) {\n        result[key] = objectB[key];\n      } else {\n        var valueA = objectA[key];\n        var valueB = objectB[key];\n\n        if (type.call(valueA) !== type.call(valueB)) {\n          result[key] = objectB[key];\n        } else if (type.call(valueA) === '[object Object]') {\n          result[key] = this.deepMergeObjects(valueA, valueB);\n        } else if (type.call(valueA) === '[object Array]') {\n          result[key] = this.deepMergeArrays(valueA, valueB);\n        } else {\n          result[key] = objectB[key];\n        }\n      }\n    }, this);\n\n    return result;\n  },\n  deepMergeArrays: function deepMergeArrays(arrayA, arrayB) {\n    var result = arrayA;\n    var type = Object.prototype.toString;\n\n    _.each(arrayB, function (valueB, indexB, listB) {\n      if (type.call(valueB) !== '[object Object]') {\n        result.push(valueB);\n      } else {\n        var keysA, keysB, diffKeys;\n        var matchFound = false;\n        keysB = _.keys(valueB);\n\n        _.each(arrayA, function (valueA, indexA, listA) {\n          if (type.call(valueA) === '[object Object]') {\n            keysA = _.keys(valueA);\n            diffKeys = _.difference(keysA, keysB);\n\n            if (!diffKeys.length) {\n              result[indexA] = this.deepMergeObjects(valueA, valueB);\n              matchFound = true;\n            }\n          }\n        }, this);\n\n        if (!matchFound) {\n          result.push(valueB);\n        }\n      }\n    }, this);\n\n    return result;\n  },\n  getLocalStreamType: function getLocalStreamType(stream) {\n    var streamType;\n\n    switch (stream.bjn_label) {\n      case \"local_audio_stream\":\n        streamType = 'localAudioStream';\n        break;\n\n      case \"local_video_stream\":\n        streamType = 'localVideoStream';\n        break;\n\n      case \"preview_stream\":\n        streamType = 'previewStream';\n        break;\n\n      case \"content_stream\":\n        streamType = 'localContentStream';\n        break;\n\n      case \"fake_stream\":\n        streamType = 'fakeStream';\n        break;\n\n      default:\n        Logger.error('RTCUtils: Unknown stream type. Stream label: ' + stream.bjn_label);\n    }\n\n    return streamType;\n  },\n  getRemoteStreamType: function getRemoteStreamType(stream) {\n    return stream.id === 'stream_label' ? 'remoteStream' : 'remoteContentStream';\n  }\n});\nmodule.exports = new RTCUtils();\n\n//# sourceURL=webpack:///./src/rtc-utils.js?");

/***/ }),

/***/ "./src/sdp-interop/array-equals.js":
/*!*****************************************!*\
  !*** ./src/sdp-interop/array-equals.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = function arrayEquals(array) {\n  // if the other array is a falsy value, return\n  if (!array) return false; // compare lengths - can save a lot of time\n\n  if (this.length != array.length) return false;\n\n  for (var i = 0, l = this.length; i < l; i++) {\n    // Check if we have nested arrays\n    if (this[i] instanceof Array && array[i] instanceof Array) {\n      // recurse into the nested arrays\n      if (!arrayEquals.apply(this[i], [array[i]])) return false;\n    } else if (this[i] != array[i]) {\n      // Warning - two different object instances will never be equal:\n      // {x:20} != {x:20}\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//# sourceURL=webpack:///./src/sdp-interop/array-equals.js?");

/***/ }),

/***/ "./src/sdp-interop/index.js":
/*!**********************************!*\
  !*** ./src/sdp-interop/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexports.Interop = __webpack_require__(/*! ./interop */ \"./src/sdp-interop/interop.js\");\n\n//# sourceURL=webpack:///./src/sdp-interop/index.js?");

/***/ }),

/***/ "./src/sdp-interop/interop.js":
/*!************************************!*\
  !*** ./src/sdp-interop/interop.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global RTCSessionDescription */\n\n/* jshint -W097 */\nvar transform = __webpack_require__(/*! ./transform */ \"./src/sdp-interop/transform.js\");\n\nvar arrayEquals = __webpack_require__(/*! ./array-equals */ \"./src/sdp-interop/array-equals.js\");\n\nfunction Interop() {\n  /**\n   * This map holds the most recent Unified Plan offer/answer SDP that was\n   * converted to Plan B, with the SDP type ('offer' or 'answer') as keys and\n   * the SDP string as values.\n   *\n   * @type {{}}\n   */\n  this.cache = {};\n}\n\nmodule.exports = Interop;\n/**\n * Returns the index of the first m-line with the given media type and with a\n * direction which allows sending, in the last Unified Plan description with\n * type \"answer\" converted to Plan B. Returns {null} if there is no saved\n * answer, or if none of its m-lines with the given type allow sending.\n * @param type the media type (\"audio\" or \"video\").\n * @returns {*}\n */\n\nInterop.prototype.getFirstSendingIndexFromAnswer = function (type) {\n  if (!this.cache.answer) {\n    return null;\n  }\n\n  var session = transform.parse(this.cache.answer);\n\n  if (session && session.media && Array.isArray(session.media)) {\n    for (var i = 0; i < session.media.length; i++) {\n      if (session.media[i].type == type && (!session.media[i].direction\n      /* default to sendrecv */\n      || session.media[i].direction === 'sendrecv' || session.media[i].direction === 'sendonly')) {\n        return i;\n      }\n    }\n  }\n\n  return null;\n};\n/**\n * This method transforms a Unified Plan SDP to an equivalent Plan B SDP. A\n * PeerConnection wrapper transforms the SDP to Plan B before passing it to the\n * application.\n *\n * @param desc\n * @returns {*}\n */\n\n\nInterop.prototype.toPlanB = function (desc) {\n  var self = this; //#region Preliminary input validation.\n\n  if (_typeof(desc) !== 'object' || desc === null || typeof desc.sdp !== 'string') {\n    console.warn('An empty description was passed as an argument.');\n    return desc;\n  } // Objectify the SDP for easier manipulation.\n\n\n  var session = transform.parse(desc.sdp); // If the SDP contains no media, there's nothing to transform.\n\n  if (typeof session.media === 'undefined' || !Array.isArray(session.media) || session.media.length === 0) {\n    console.warn('The description has no media.');\n    return desc;\n  } // Try some heuristics to \"make sure\" this is a Unified Plan SDP. Plan B\n  // SDP has a video, an audio and a data \"channel\" at most.\n\n\n  if (session.media.length <= 3 && session.media.every(function (m) {\n    return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\n  })) {\n    console.warn('This description does not look like Unified Plan.');\n    return desc;\n  } //#endregion\n  // HACK https://bugzilla.mozilla.org/show_bug.cgi?id=1113443\n\n\n  var sdp = desc.sdp;\n  var rewrite = false;\n\n  for (var i = 0; i < session.media.length; i++) {\n    var uLine = session.media[i];\n    uLine.rtp.forEach(function (rtp) {\n      if (rtp.codec === 'NULL') {\n        rewrite = true;\n        var offer = transform.parse(self.cache['offer']);\n        rtp.codec = offer.media[i].rtp[0].codec;\n      }\n    });\n  }\n\n  ;\n\n  if (rewrite) {\n    sdp = transform.write(session);\n  } // Unified Plan SDP is our \"precious\". Cache it for later use in the Plan B\n  // -> Unified Plan transformation.\n\n\n  this.cache[desc.type] = sdp; //#region Convert from Unified Plan to Plan B.\n  // We rebuild the session.media array.\n\n  var media = session.media;\n  session.media = []; // Associative array that maps channel types to channel objects for fast\n  // access to channel objects by their type, e.g. type2bl['audio']->channel\n  // obj.\n\n  var type2bl = {}; // Used to build the group:BUNDLE value after the channels construction\n  // loop.\n\n  var types = []; // Implode the Unified Plan m-lines/tracks into Plan B channels.\n\n  media.forEach(function (uLine) {\n    // rtcp-mux is required in the Plan B SDP.\n    if ((typeof uLine.rtcpMux !== 'string' || uLine.rtcpMux !== 'rtcp-mux') && uLine.direction !== 'inactive') {\n      throw new Error('Cannot convert to Plan B because m-lines ' + 'without the rtcp-mux attribute were found.');\n    }\n\n    if (uLine.type === 'application') {\n      session.media.push(uLine);\n      types.push(uLine.mid);\n      return;\n    } // If we don't have a channel for this uLine.type, then use this\n    // uLine as the channel basis.\n\n\n    if (typeof type2bl[uLine.type] === 'undefined') {\n      type2bl[uLine.type] = uLine;\n    } // Add sources to the channel and handle a=msid.\n\n\n    if (_typeof(uLine.sources) === 'object') {\n      Object.keys(uLine.sources).forEach(function (ssrc) {\n        if (_typeof(type2bl[uLine.type].sources) !== 'object') type2bl[uLine.type].sources = {}; // Assign the sources to the channel.\n\n        type2bl[uLine.type].sources[ssrc] = uLine.sources[ssrc];\n\n        if (typeof uLine.msid !== 'undefined') {\n          // In Plan B the msid is an SSRC attribute. Also, we don't\n          // care about the obsolete label and mslabel attributes.\n          //\n          // Note that it is not guaranteed that the uLine will\n          // have an msid. recvonly channels in particular don't have\n          // one.\n          type2bl[uLine.type].sources[ssrc].msid = uLine.msid;\n        } // NOTE ssrcs in ssrc groups will share msids, as\n        // draft-uberti-rtcweb-plan-00 mandates.\n\n      });\n    } // Add ssrc groups to the channel.\n\n\n    if (typeof uLine.ssrcGroups !== 'undefined' && Array.isArray(uLine.ssrcGroups)) {\n      // Create the ssrcGroups array, if it's not defined.\n      if (typeof type2bl[uLine.type].ssrcGroups === 'undefined' || !Array.isArray(type2bl[uLine.type].ssrcGroups)) {\n        type2bl[uLine.type].ssrcGroups = [];\n      }\n\n      type2bl[uLine.type].ssrcGroups = type2bl[uLine.type].ssrcGroups.concat(uLine.ssrcGroups);\n    }\n\n    if (type2bl[uLine.type] === uLine) {\n      // Copy ICE related stuff from the principal media line.\n      uLine.candidates = media[0].candidates;\n      uLine.iceUfrag = media[0].iceUfrag;\n      uLine.icePwd = media[0].icePwd;\n      uLine.fingerprint = media[0].fingerprint; // Plan B mids are in ['audio', 'video', 'data']\n\n      uLine.mid = uLine.type; // Plan B doesn't support/need the bundle-only attribute.\n\n      delete uLine.bundleOnly; // In Plan B the msid is an SSRC attribute.\n\n      delete uLine.msid; // Used to build the group:BUNDLE value after this loop.\n\n      types.push(uLine.type); // Add the channel to the new media array.\n\n      session.media.push(uLine);\n    }\n  }); // We regenerate the BUNDLE group with the new mids.\n\n  session.groups.some(function (group) {\n    if (group.type === 'BUNDLE') {\n      group.mids = types.join(' ');\n      return true;\n    }\n  }); // msid semantic\n\n  session.msidSemantic = {\n    semantic: 'WMS',\n    token: '*'\n  };\n  var resStr = transform.write(session);\n  return new RTCSessionDescription({\n    type: desc.type,\n    sdp: resStr\n  }); //#endregion\n};\n/**\n * This method transforms a Plan B SDP to an equivalent Unified Plan SDP. A\n * PeerConnection wrapper transforms the SDP to Unified Plan before passing it\n * to FF.\n *\n * @param desc\n * @returns {*}\n */\n\n\nInterop.prototype.toUnifiedPlan = function (desc) {\n  var self = this; //#region Preliminary input validation.\n\n  if (_typeof(desc) !== 'object' || desc === null || typeof desc.sdp !== 'string') {\n    console.warn('An empty description was passed as an argument.');\n    return desc;\n  }\n\n  var session = transform.parse(desc.sdp); // If the SDP contains no media, there's nothing to transform.\n\n  if (typeof session.media === 'undefined' || !Array.isArray(session.media) || session.media.length === 0) {\n    console.warn('The description has no media.');\n    return desc;\n  } // Try some heuristics to \"make sure\" this is a Plan B SDP. Plan B SDP has\n  // a video, an audio and a data \"channel\" at most.\n\n\n  if (session.media.length > 3 || !session.media.every(function (m) {\n    return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\n  })) {\n    console.warn('This description does not look like Plan B.');\n    return desc;\n  } // Make sure this Plan B SDP can be converted to a Unified Plan SDP.\n\n\n  var mids = [];\n  session.media.forEach(function (m) {\n    mids.push(m.mid);\n  });\n  var hasBundle = false;\n\n  if (typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\n    hasBundle = session.groups.every(function (g) {\n      return g.type !== 'BUNDLE' || arrayEquals.apply(g.mids.sort(), [mids.sort()]);\n    });\n  }\n\n  if (!hasBundle) {\n    throw new Error(\"Cannot convert to Unified Plan because m-lines that\" + \" are not bundled were found.\");\n  } //#endregion\n  //#region Convert from Plan B to Unified Plan.\n  // Unfortunately, a Plan B offer/answer doesn't have enough information to\n  // rebuild an equivalent Unified Plan offer/answer.\n  //\n  // For example, if this is a local answer (in Unified Plan style) that we\n  // convert to Plan B prior to handing it over to the application (the\n  // PeerConnection wrapper called us, for instance, after a successful\n  // createAnswer), we want to remember the m-line at which we've seen the\n  // (local) SSRC. That's because when the application wants to do call the\n  // SLD method, forcing us to do the inverse transformation (from Plan B to\n  // Unified Plan), we need to know to which m-line to assign the (local)\n  // SSRC. We also need to know all the other m-lines that the original\n  // answer had and include them in the transformed answer as well.\n  //\n  // Another example is if this is a remote offer that we convert to Plan B\n  // prior to giving it to the application, we want to remember the mid at\n  // which we've seen the (remote) SSRC.\n  //\n  // In the iteration that follows, we use the cached Unified Plan (if it\n  // exists) to assign mids to ssrcs.\n\n\n  var cached;\n\n  if (typeof this.cache[desc.type] !== 'undefined') {\n    cached = transform.parse(this.cache[desc.type]);\n  }\n\n  var recvonlySsrcs = {\n    audio: {},\n    video: {}\n  }; // A helper map that sends mids to m-line objects. We use it later to\n  // rebuild the Unified Plan style session.media array.\n\n  var mid2ul = {};\n  session.media.forEach(function (bLine) {\n    if ((typeof bLine.rtcpMux !== 'string' || bLine.rtcpMux !== 'rtcp-mux') && bLine.direction !== 'inactive') {\n      throw new Error(\"Cannot convert to Unified Plan because m-lines \" + \"without the rtcp-mux attribute were found.\");\n    }\n\n    if (bLine.type === 'application') {\n      mid2ul[bLine.mid] = bLine;\n      return;\n    } // With rtcp-mux and bundle all the channels should have the same ICE\n    // stuff.\n\n\n    var sources = bLine.sources;\n    var ssrcGroups = bLine.ssrcGroups;\n    var candidates = bLine.candidates;\n    var iceUfrag = bLine.iceUfrag;\n    var icePwd = bLine.icePwd;\n    var fingerprint = bLine.fingerprint;\n    var port = bLine.port; // We'll use the \"bLine\" object as a prototype for each new \"mLine\"\n    // that we create, but first we need to clean it up a bit.\n\n    delete bLine.sources;\n    delete bLine.ssrcGroups;\n    delete bLine.candidates;\n    delete bLine.iceUfrag;\n    delete bLine.icePwd;\n    delete bLine.fingerprint;\n    delete bLine.port;\n    delete bLine.mid; // inverted ssrc group map\n\n    var ssrc2group = {};\n\n    if (typeof ssrcGroups !== 'undefined' && Array.isArray(ssrcGroups)) {\n      ssrcGroups.forEach(function (ssrcGroup) {\n        // TODO(gp) find out how to receive simulcast with FF. For the\n        // time being, hide it.\n        if (ssrcGroup.semantics === 'SIM') {\n          return;\n        } // XXX This might brake if an SSRC is in more than one group\n        // for some reason.\n\n\n        if (typeof ssrcGroup.ssrcs !== 'undefined' && Array.isArray(ssrcGroup.ssrcs)) {\n          ssrcGroup.ssrcs.forEach(function (ssrc) {\n            if (typeof ssrc2group[ssrc] === 'undefined') {\n              ssrc2group[ssrc] = [];\n            }\n\n            ssrc2group[ssrc].push(ssrcGroup);\n          });\n        }\n      });\n    } // ssrc to m-line index.\n\n\n    var ssrc2ml = {};\n\n    if (_typeof(sources) === 'object') {\n      // Explode the Plan B channel sources with one m-line per source.\n      Object.keys(sources).forEach(function (ssrc) {\n        // The (unified) m-line for this SSRC. We either create it from\n        // scratch or, if it's a grouped SSRC, we re-use a related\n        // mline. In other words, if the source is grouped with another\n        // source, put the two together in the same m-line.\n        var uLine; // We assume here that we are the answerer in the O/A, so any\n        // offers which we translate come from the remote side, while\n        // answers are local. So the check below is to make that we\n        // handle receive-only SSRCs in a special way only if they come\n        // from the remote side.\n\n        if (desc.type === 'offer') {\n          // We want to detect SSRCs which are used by a remote peer\n          // in an m-line with direction=recvonly (i.e. they are\n          // being used for RTCP only).\n          // This information would have gotten lost if the remote\n          // peer used Unified Plan and their local description was\n          // translated to Plan B. So we use the lack of an MSID\n          // attribute to deduce a \"receive only\" SSRC.\n          if (!sources[ssrc].msid) {\n            recvonlySsrcs[bLine.type][ssrc] = sources[ssrc]; // Receive-only SSRCs must not create new m-lines. We\n            // will assign them to an existing m-line later.\n\n            return;\n          }\n        }\n\n        if (typeof ssrc2group[ssrc] !== 'undefined' && Array.isArray(ssrc2group[ssrc])) {\n          ssrc2group[ssrc].some(function (ssrcGroup) {\n            // ssrcGroup.ssrcs *is* an Array, no need to check\n            // again here.\n            return ssrcGroup.ssrcs.some(function (related) {\n              if (_typeof(ssrc2ml[related]) === 'object') {\n                uLine = ssrc2ml[related];\n                return true;\n              }\n            });\n          });\n        }\n\n        if (_typeof(uLine) === 'object') {\n          // the m-line already exists. Just add the source.\n          uLine.sources[ssrc] = sources[ssrc];\n          delete sources[ssrc].msid;\n        } else {\n          // Use the \"bLine\" as a prototype for the \"uLine\".\n          uLine = Object.create(bLine);\n          ssrc2ml[ssrc] = uLine;\n\n          if (typeof sources[ssrc].msid !== 'undefined') {\n            // Assign the msid of the source to the m-line. Note\n            // that it is not guaranteed that the source will have\n            // msid. In particular \"recvonly\" sources don't have an\n            // msid. Note that \"recvonly\" is a term only defined\n            // for m-lines.\n            uLine.msid = sources[ssrc].msid;\n            uLine.direction = 'sendrecv';\n            delete sources[ssrc].msid;\n          } // We assign one SSRC per media line.\n\n\n          uLine.sources = {};\n          uLine.sources[ssrc] = sources[ssrc];\n          uLine.ssrcGroups = ssrc2group[ssrc]; // Use the cached Unified Plan SDP (if it exists) to assign\n          // SSRCs to mids.\n\n          if (typeof cached !== 'undefined' && typeof cached.media !== 'undefined' && Array.isArray(cached.media)) {\n            cached.media.forEach(function (m) {\n              if (_typeof(m.sources) === 'object') {\n                Object.keys(m.sources).forEach(function (s) {\n                  if (s === ssrc) {\n                    uLine.mid = m.mid;\n                  }\n                });\n              }\n            });\n          }\n\n          if (typeof uLine.mid === 'undefined') {\n            // If this is an SSRC that we see for the first time\n            // assign it a new mid. This is typically the case when\n            // this method is called to transform a remote\n            // description for the first time or when there is a\n            // new SSRC in the remote description because a new\n            // peer has joined the conference. Local SSRCs should\n            // have already been added to the map in the toPlanB\n            // method.\n            //\n            // Because FF generates answers in Unified Plan style,\n            // we MUST already have a cached answer with all the\n            // local SSRCs mapped to some m-line/mid.\n            if (desc.type === 'answer') {//throw new Error(\"An unmapped SSRC was found.\");\n            }\n\n            uLine.mid = [bLine.type, '-', ssrc].join('');\n          } // Include the candidates in the 1st media line.\n\n\n          uLine.candidates = candidates;\n          uLine.iceUfrag = iceUfrag;\n          uLine.icePwd = icePwd;\n          uLine.fingerprint = fingerprint;\n          uLine.port = port;\n          mid2ul[uLine.mid] = uLine;\n        }\n      });\n    }\n  }); // Rebuild the media array in the right order and add the missing mLines\n  // (missing from the Plan B SDP).\n\n  session.media = [];\n  mids = []; // reuse\n\n  if (desc.type === 'offer') {\n    // The media lines in the answer must match the media lines in the\n    // offer. The order is important too. Here we assume that Firefox is\n    // the answerer, so we merely have to use the reconstructed (unified)\n    // answer to update the cached (unified) answer accordingly.\n    //\n    // In the general case, one would have to use the cached (unified)\n    // offer to find the m-lines that are missing from the reconstructed\n    // answer, potentially grabbing them from the cached (unified) answer.\n    // One has to be careful with this approach because inactive m-lines do\n    // not always have an mid, making it tricky (impossible?) to find where\n    // exactly and which m-lines are missing from the reconstructed answer.\n    for (var i = 0; i < cached.media.length; i++) {\n      var uLine = cached.media[i];\n\n      if (typeof mid2ul[uLine.mid] === 'undefined') {\n        // The mid isn't in the reconstructed (unified) answer.\n        // This is either a (unified) m-line containing a remote\n        // track only, or a (unified) m-line containing a remote\n        // track and a local track that has been removed.\n        // In either case, it MUST exist in the cached\n        // (unified) answer.\n        //\n        // In case this is a removed local track, clean-up\n        // the (unified) m-line and make sure it's 'recvonly' or\n        // 'inactive'.\n        delete uLine.msid;\n        delete uLine.sources;\n        delete uLine.ssrcGroups;\n        if (!uLine.direction || uLine.direction === 'sendrecv') uLine.direction = 'recvonly';else if (uLine.direction === 'sendonly') uLine.direction = 'inactive';\n      } else {// This is an (unified) m-line/channel that contains a local\n        // track (sendrecv or sendonly channel) or it's a unified\n        // recvonly m-line/channel. In either case, since we're\n        // going from PlanB -> Unified Plan this m-line MUST\n        // exist in the cached answer.\n      }\n\n      session.media.push(uLine);\n\n      if (typeof uLine.mid === 'string') {\n        // inactive lines don't/may not have an mid.\n        mids.push(uLine.mid);\n      }\n    }\n  } else {\n    // SDP offer/answer (and the JSEP spec) forbids removing an m-section\n    // under any circumstances. If we are no longer interested in sending a\n    // track, we just remove the msid and ssrc attributes and set it to\n    // either a=recvonly (as the reofferer, we must use recvonly if the\n    // other side was previously sending on the m-section, but we can also\n    // leave the possibility open if it wasn't previously in use), or\n    // a=inactive.\n    if (typeof cached !== 'undefined' && typeof cached.media !== 'undefined' && Array.isArray(cached.media)) {\n      cached.media.forEach(function (uLine) {\n        mids.push(uLine.mid);\n\n        if (typeof mid2ul[uLine.mid] !== 'undefined') {\n          session.media.push(mid2ul[uLine.mid]);\n        } else {\n          delete uLine.msid;\n          delete uLine.sources;\n          delete uLine.ssrcGroups;\n          if (!uLine.direction || uLine.direction === 'sendrecv') uLine.direction = 'recvonly';\n          if (!uLine.direction || uLine.direction === 'sendonly') uLine.direction = 'inactive';\n          session.media.push(uLine);\n        }\n      });\n    } // Add all the remaining (new) m-lines of the transformed SDP.\n\n\n    Object.keys(mid2ul).forEach(function (mid) {\n      if (mids.indexOf(mid) === -1) {\n        mids.push(mid);\n\n        if (mid2ul[mid].direction === 'recvonly') {\n          // This is a remote recvonly channel. Add its SSRC to the\n          // appropriate sendrecv or sendonly channel.\n          // TODO(gp) what if we don't have sendrecv/sendonly\n          // channel?\n          session.media.some(function (uLine) {\n            if ((uLine.direction === 'sendrecv' || uLine.direction === 'sendonly') && uLine.type === mid2ul[mid].type) {\n              // mid2ul[mid] shouldn't have any ssrc-groups\n              Object.keys(mid2ul[mid].sources).forEach(function (ssrc) {\n                uLine.sources[ssrc] = mid2ul[mid].sources[ssrc];\n              });\n              return true;\n            }\n          });\n        } else {\n          session.media.push(mid2ul[mid]);\n        }\n      }\n    });\n  } // After we have constructed the Plan Unified m-lines we can figure out\n  // where (in which m-line) to place the 'recvonly SSRCs'.\n  // Note: we assume here that we are the answerer in the O/A, so any offers\n  // which we translate come from the remote side, while answers are local\n  // (and so our last local description is cached as an 'answer').\n\n\n  [\"audio\", \"video\"].forEach(function (type) {\n    if (!session || !session.media || !Array.isArray(session.media)) return;\n    var idx = null;\n\n    if (Object.keys(recvonlySsrcs[type]).length > 0) {\n      idx = self.getFirstSendingIndexFromAnswer(type);\n\n      if (idx === null) {\n        // If this is the first offer we receive, we don't have a\n        // cached answer. Assume that we will be sending media using\n        // the first m-line for each media type.\n        for (var i = 0; i < session.media.length; i++) {\n          if (session.media[i].type === type) {\n            idx = i;\n            break;\n          }\n        }\n      }\n    }\n\n    if (idx && session.media.length > idx) {\n      var mLine = session.media[idx];\n      Object.keys(recvonlySsrcs[type]).forEach(function (ssrc) {\n        if (mLine.sources && mLine.sources[ssrc]) {\n          console.warn(\"Replacing an existing SSRC.\");\n        }\n\n        if (!mLine.sources) {\n          mLine.sources = {};\n        }\n\n        mLine.sources[ssrc] = recvonlySsrcs[type][ssrc];\n      });\n    }\n  }); // We regenerate the BUNDLE group (since we regenerated the mids)\n\n  session.groups.some(function (group) {\n    if (group.type === 'BUNDLE') {\n      group.mids = mids.join(' ');\n      return true;\n    }\n  }); // msid semantic\n\n  session.msidSemantic = {\n    semantic: 'WMS',\n    token: '*'\n  };\n  /*  PRERAK\n      Start */\n\n  var index = 0;\n  mids = [];\n  session.media.forEach(function (unifiedLine) {\n    if (index == 0) {\n      unifiedLine.mid = 'sdparta_0';\n    } else if (index == 1) {\n      unifiedLine.mid = 'sdparta_1';\n    } else if (index == 2) {\n      unifiedLine.mid = 'sdparta_2';\n    }\n\n    mids.push(unifiedLine.mid);\n    index++;\n  }); // We regenerate the BUNDLE group (since we regenerated the mids)\n\n  session.groups.some(function (group) {\n    if (group.type === 'BUNDLE') {\n      group.mids = mids.join(' ');\n      return true;\n    }\n  });\n  /*End*/\n\n  var resStr = transform.write(session); // Cache the transformed SDP (Unified Plan) for later re-use in this\n  // function.\n\n  this.cache[desc.type] = resStr;\n  return new RTCSessionDescription({\n    type: desc.type,\n    sdp: resStr\n  }); //#endregion\n};\n\n//# sourceURL=webpack:///./src/sdp-interop/interop.js?");

/***/ }),

/***/ "./src/sdp-interop/transform.js":
/*!**************************************!*\
  !*** ./src/sdp-interop/transform.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar transform = __webpack_require__(/*! ../sdp-transform/index */ \"./src/sdp-transform/index.js\");\n\nexports.write = function (session, opts) {\n  if (typeof session !== 'undefined' && typeof session.media !== 'undefined' && Array.isArray(session.media)) {\n    session.media.forEach(function (mLine) {\n      // expand sources to ssrcs\n      if (typeof mLine.sources !== 'undefined' && Object.keys(mLine.sources).length !== 0) {\n        mLine.ssrcs = [];\n        Object.keys(mLine.sources).forEach(function (ssrc) {\n          var source = mLine.sources[ssrc];\n          Object.keys(source).forEach(function (attribute) {\n            mLine.ssrcs.push({\n              id: ssrc,\n              attribute: attribute,\n              value: source[attribute]\n            });\n          });\n        });\n        delete mLine.sources;\n      } // join ssrcs in ssrc groups\n\n\n      if (typeof mLine.ssrcGroups !== 'undefined' && Array.isArray(mLine.ssrcGroups)) {\n        mLine.ssrcGroups.forEach(function (ssrcGroup) {\n          if (typeof ssrcGroup.ssrcs !== 'undefined' && Array.isArray(ssrcGroup.ssrcs)) {\n            ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\n          }\n        });\n      }\n    });\n  } // join group mids\n\n\n  if (typeof session !== 'undefined' && typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\n    session.groups.forEach(function (g) {\n      if (typeof g.mids !== 'undefined' && Array.isArray(g.mids)) {\n        g.mids = g.mids.join(' ');\n      }\n    });\n  }\n\n  return transform.write(session, opts);\n};\n\nexports.parse = function (sdp) {\n  var session = transform.parse(sdp);\n\n  if (typeof session !== 'undefined' && typeof session.media !== 'undefined' && Array.isArray(session.media)) {\n    session.media.forEach(function (mLine) {\n      // group sources attributes by ssrc\n      if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n        mLine.sources = {};\n        mLine.ssrcs.forEach(function (ssrc) {\n          if (!mLine.sources[ssrc.id]) mLine.sources[ssrc.id] = {};\n          mLine.sources[ssrc.id][ssrc.attribute] = ssrc.value;\n        });\n        delete mLine.ssrcs;\n      } // split ssrcs in ssrc groups\n\n\n      if (typeof mLine.ssrcGroups !== 'undefined' && Array.isArray(mLine.ssrcGroups)) {\n        mLine.ssrcGroups.forEach(function (ssrcGroup) {\n          if (typeof ssrcGroup.ssrcs === 'string') {\n            ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\n          }\n        });\n      }\n    });\n  } // split group mids\n\n\n  if (typeof session !== 'undefined' && typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\n    session.groups.forEach(function (g) {\n      if (typeof g.mids === 'string') {\n        g.mids = g.mids.split(' ');\n      }\n    });\n  }\n\n  return session;\n};\n\n//# sourceURL=webpack:///./src/sdp-interop/transform.js?");

/***/ }),

/***/ "./src/sdp-transform/grammar.js":
/*!**************************************!*\
  !*** ./src/sdp-transform/grammar.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: \"%s %s %d %s IP%d %s\"\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{\n    name: 'name'\n  }],\n  i: [{\n    name: 'description'\n  }],\n  u: [{\n    name: 'uri'\n  }],\n  e: [{\n    name: 'email'\n  }],\n  p: [{\n    name: 'phone'\n  }],\n  z: [{\n    name: 'timezones'\n  }],\n  // TODO: this one can actually be parsed properly..\n  r: [{\n    name: 'repeats'\n  }],\n  // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{\n    //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: \"%d %d\"\n  }],\n  c: [{\n    //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: \"IN IP%d %s\"\n  }],\n  b: [{\n    //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: \"%s:%s\"\n  }],\n  m: [{\n    //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: \"%s %d %s %s\"\n  }],\n  a: [{\n    //a=rtpmap:110 opus/48000/2\n    push: 'rtp',\n    reg: /^rtpmap:(\\d*) ([\\w\\-]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n    names: ['payload', 'codec', 'rate', 'encoding'],\n    format: function format(o) {\n      return o.encoding ? \"rtpmap:%d %s/%s/%s\" : o.rate ? \"rtpmap:%d %s/%s\" : \"rtpmap:%d %s\";\n    }\n  }, {\n    //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n    //a=fmtp:111 minptime=10; useinbandfec=1\n    push: 'fmtp',\n    reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n    names: ['payload', 'config'],\n    format: \"fmtp:%d %s\"\n  }, {\n    //a=control:streamid=0\n    name: 'control',\n    reg: /^control:(.*)/,\n    format: \"control:%s\"\n  }, {\n    //a=rtcp:65179 IN IP4 193.84.77.194\n    name: 'rtcp',\n    reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n    names: ['port', 'netType', 'ipVer', 'address'],\n    format: function format(o) {\n      return o.address != null ? \"rtcp:%d %s IP%d %s\" : \"rtcp:%d\";\n    }\n  }, {\n    //a=rtcp-fb:98 trr-int 100\n    push: 'rtcpFbTrrInt',\n    reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n    names: ['payload', 'value'],\n    format: \"rtcp-fb:%d trr-int %d\"\n  }, {\n    //a=rtcp-fb:98 nack rpsi\n    push: 'rtcpFb',\n    reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n    names: ['payload', 'type', 'subtype'],\n    format: function format(o) {\n      return o.subtype != null ? \"rtcp-fb:%s %s %s\" : \"rtcp-fb:%s %s\";\n    }\n  }, {\n    //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n    //a=extmap:1/recvonly URI-gps-string\n    push: 'ext',\n    reg: /^extmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n    names: ['value', 'uri', 'config'],\n    // value may include \"/direction\" suffix\n    format: function format(o) {\n      return o.config != null ? \"extmap:%s %s %s\" : \"extmap:%s %s\";\n    }\n  }, {\n    //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n    push: 'crypto',\n    reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n    names: ['id', 'suite', 'config', 'sessionConfig'],\n    format: function format(o) {\n      return o.sessionConfig != null ? \"crypto:%d %s %s %s\" : \"crypto:%d %s %s\";\n    }\n  }, {\n    //a=setup:actpass\n    name: 'setup',\n    reg: /^setup:(\\w*)/,\n    format: \"setup:%s\"\n  }, {\n    //a=mid:1\n    name: 'mid',\n    reg: /^mid:([^\\s]*)/,\n    format: \"mid:%s\"\n  }, {\n    //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n    name: 'msid',\n    reg: /^msid:(.*)/,\n    format: \"msid:%s\"\n  }, {\n    //a=ptime:20\n    name: 'ptime',\n    reg: /^ptime:(\\d*)/,\n    format: \"ptime:%d\"\n  }, {\n    //a=maxptime:60\n    name: 'maxptime',\n    reg: /^maxptime:(\\d*)/,\n    format: \"maxptime:%d\"\n  }, {\n    //a=sendrecv\n    name: 'direction',\n    reg: /^(sendrecv|recvonly|sendonly|inactive)/\n  }, {\n    //a=ice-lite\n    name: 'icelite',\n    reg: /^(ice-lite)/\n  }, {\n    //a=ice-ufrag:F7gI\n    name: 'iceUfrag',\n    reg: /^ice-ufrag:(\\S*)/,\n    format: \"ice-ufrag:%s\"\n  }, {\n    //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n    name: 'icePwd',\n    reg: /^ice-pwd:(\\S*)/,\n    format: \"ice-pwd:%s\"\n  }, {\n    //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n    name: 'fingerprint',\n    reg: /^fingerprint:(\\S*) (\\S*)/,\n    names: ['type', 'hash'],\n    format: \"fingerprint:%s %s\"\n  }, {\n    //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n    //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0\n    //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0\n    //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0\n    //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0\n    push: 'candidates',\n    reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?/,\n    names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation'],\n    format: function format(o) {\n      var str = \"candidate:%s %d %s %d %s %d typ %s\";\n      str += o.raddr != null ? \" raddr %s rport %d\" : \"%v%v\"; // NB: candidate has three optional chunks, so %void middles one if it's missing\n\n      str += o.tcptype != null ? \" tcptype %s\" : \"%v\";\n\n      if (o.generation != null) {\n        str += \" generation %d\";\n      }\n\n      return str;\n    }\n  }, {\n    //a=end-of-candidates (keep after the candidates line for readability)\n    name: 'endOfCandidates',\n    reg: /^(end-of-candidates)/\n  }, {\n    //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n    name: 'remoteCandidates',\n    reg: /^remote-candidates:(.*)/,\n    format: \"remote-candidates:%s\"\n  }, {\n    //a=ice-options:google-ice\n    name: 'iceOptions',\n    reg: /^ice-options:(\\S*)/,\n    format: \"ice-options:%s\"\n  }, {\n    //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n    push: \"ssrcs\",\n    reg: /^ssrc:(\\d*) ([\\w_]*):(.*)/,\n    names: ['id', 'attribute', 'value'],\n    format: \"ssrc:%d %s:%s\"\n  }, {\n    //a=ssrc-group:FEC 1 2\n    push: \"ssrcGroups\",\n    reg: /^ssrc-group:(\\w*) (.*)/,\n    names: ['semantics', 'ssrcs'],\n    format: \"ssrc-group:%s %s\"\n  }, {\n    //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n    name: \"msidSemantic\",\n    reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n    names: ['semantic', 'token'],\n    format: \"msid-semantic: %s %s\" // space after \":\" is not accidental\n\n  }, {\n    //a=group:BUNDLE audio video\n    push: 'groups',\n    reg: /^group:(\\w*) (.*)/,\n    names: ['type', 'mids'],\n    format: \"group:%s %s\"\n  }, {\n    //a=rtcp-mux\n    name: 'rtcpMux',\n    reg: /^(rtcp-mux)/\n  }, {\n    //a=rtcp-rsize\n    name: 'rtcpRsize',\n    reg: /^(rtcp-rsize)/\n  }, {\n    // any a= that we don't understand is kepts verbatim on media.invalid\n    push: 'invalid',\n    names: [\"value\"]\n  }]\n}; // set sensible defaults to avoid polluting the grammar with boring details\n\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n\n    if (!obj.format) {\n      obj.format = \"%s\";\n    }\n  });\n});\n\n//# sourceURL=webpack:///./src/sdp-transform/grammar.js?");

/***/ }),

/***/ "./src/sdp-transform/index.js":
/*!************************************!*\
  !*** ./src/sdp-transform/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parser = __webpack_require__(/*! ./parser */ \"./src/sdp-transform/parser.js\");\n\nvar writer = __webpack_require__(/*! ./writer */ \"./src/sdp-transform/writer.js\");\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\n\n//# sourceURL=webpack:///./src/sdp-transform/index.js?");

/***/ }),

/***/ "./src/sdp-transform/parser.js":
/*!*************************************!*\
  !*** ./src/sdp-transform/parser.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var toIntIfInt = function toIntIfInt(v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function attachProperties(match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  } else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i + 1] != null) {\n        location[names[i]] = toIntIfInt(match[i + 1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function parseReg(obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  } else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n\n  var keyLocation = obj.push ? {} : // blank object that will be pushed\n  needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = __webpack_require__(/*! ./grammar */ \"./src/sdp-transform/grammar.js\");\n\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {},\n      media = [],\n      location = session; // points at where properties go under (one of the above)\n  // parse lines we understand\n\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n\n    if (type === 'm') {\n      media.push({\n        rtp: [],\n        fmtp: []\n      });\n      location = media[media.length - 1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n  session.media = media; // link it up\n\n  return session;\n};\n\nvar fmtpReducer = function fmtpReducer(acc, expr) {\n  var s = expr.split('=');\n\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  }\n\n  return acc;\n};\n\nexports.parseFmtpConfig = function (str) {\n  return str.split(/\\;\\s?/).reduce(fmtpReducer, {});\n};\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n\n  return candidates;\n};\n\n//# sourceURL=webpack:///./src/sdp-transform/parser.js?");

/***/ }),

/***/ "./src/sdp-transform/writer.js":
/*!*************************************!*\
  !*** ./src/sdp-transform/writer.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var grammar = __webpack_require__(/*! ./grammar */ \"./src/sdp-transform/grammar.js\"); // customized util.format - discards excess arguments and can void middle ones\n\n\nvar formatRegExp = /%[sdv%]/g;\n\nvar format = function format(formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n\n    var arg = args[i];\n    i += 1;\n\n    switch (x) {\n      case '%%':\n        return '%';\n\n      case '%s':\n        return String(arg);\n\n      case '%d':\n        return Number(arg);\n\n      case '%v':\n        return '';\n    }\n  }); // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function makeLine(type, obj, location) {\n  var str = obj.format instanceof Function ? obj.format(obj.push ? location : location[obj.name]) : obj.format;\n  var args = [type + '=' + str];\n\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      } else {\n        // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  } else {\n    args.push(location[obj.name]);\n  }\n\n  return format.apply(null, args);\n}; // RFC specified order\n// TODO: extend this with all the rest\n\n\nvar defaultOuterOrder = ['v', 'o', 's', 'i', 'u', 'e', 'p', 'c', 'b', 't', 'r', 'z', 'a'];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\nmodule.exports = function (session, opts) {\n  opts = opts || {}; // ensure certain properties exist\n\n  if (session.version == null) {\n    session.version = 0; // \"v=0\" must be there (only defined version atm)\n  }\n\n  if (session.name == null) {\n    session.name = \" \"; // \"s= \" must be there if no meaningful name set\n  }\n\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = \"\";\n    }\n  });\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = []; // loop through outerOrder for matching properties on session\n\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      } else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  }); // then for each media line, follow the innerOrder\n\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        } else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n\n//# sourceURL=webpack:///./src/sdp-transform/writer.js?");

/***/ }),

/***/ "./src/thirdparty/Logger.js":
/*!**********************************!*\
  !*** ./src/thirdparty/Logger.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar my = __webpack_require__(/*! myclass */ \"./node_modules/myclass/index.js\");\n\nvar browserDetector = __webpack_require__(/*! browserDetector */ \"./src/thirdparty/browserDetector.js\");\n\nvar mediaController;\nvar CONSOLE_COLUMNS_DATA = {\n  'windows': {\n    'chrome': [{\n      screenWidth: 1920,\n      columns: 267\n    }, {\n      screenWidth: 1080,\n      columns: 147\n    }],\n    'firefox': [{\n      screenWidth: 1920,\n      columns: 271\n    }, {\n      screenWidth: 1080,\n      columns: 151\n    }],\n    'opera': [{\n      screenWidth: 1920,\n      columns: 315\n    }, {\n      screenWidth: 1080,\n      columns: 175\n    }],\n    'ie': [{\n      screenWidth: 1920,\n      columns: 270\n    }, {\n      screenWidth: 1080,\n      columns: 149\n    }]\n  },\n  'mac': {\n    'chrome': [{\n      screenWidth: 1280,\n      columns: 176\n    }, {\n      screenWidth: 1024,\n      columns: 139\n    }],\n    'firefox': [{\n      screenWidth: 1280,\n      columns: 190\n    }, {\n      screenWidth: 1024,\n      columns: 151\n    }],\n    'safari': [{\n      screenWidth: 1280,\n      columns: 135\n    }, {\n      screenWidth: 1024,\n      columns: 99\n    }]\n  }\n};\nvar CONSOLE_SUFFIX_LENGTH = {\n  'chrome': ' skinny.js:12345'.length,\n  'firefox': 'skinny.js?7211GG0 (line 12345)'.length,\n  'opera': 'skinny.js:12345'.length,\n  'safari': 'skinny.js:12345'.length,\n  'ie': \"LOG: \".length\n};\nvar LogLevel = {\n  ALL: {\n    func: null,\n    include: function include(value) {\n      return /all/i.test(value);\n    },\n    exclude: null\n  },\n  ERROR: {\n    func: \"error\",\n    include: function include(value) {\n      return /\\+error/i.test(value);\n    },\n    exclude: function exclude(value) {\n      return /\\-error/i.test(value);\n    }\n  },\n  WARN: {\n    func: \"warn\",\n    include: function include(value) {\n      return /\\+warn/i.test(value);\n    },\n    exclude: function exclude(value) {\n      return /\\-warn/i.test(value);\n    }\n  },\n  INFO: {\n    func: \"info\",\n    include: function include(value) {\n      return /\\+info/i.test(value);\n    },\n    exclude: function exclude(value) {\n      return /\\-info/i.test(value);\n    }\n  },\n  LOG: {\n    func: \"log\",\n    include: function include(value) {\n      return /\\+log/i.test(value);\n    },\n    exclude: function exclude(value) {\n      return /\\-log/i.test(value);\n    }\n  },\n  DEBUG: {\n    func: \"debug\",\n    include: function include(value) {\n      return /\\+debug/i.test(value);\n    },\n    exclude: function exclude(value) {\n      return /\\-debug/i.test(value);\n    }\n  }\n};\nvar allLogLevels = ['debug', 'log', 'info', 'warn', 'error'];\nvar Logger = my.Class({\n  STATIC: {\n    TIME_FORMAT: 'hh:mm:ss.SSSS'\n  },\n  constructor: function constructor() {\n    _.bindAll(this);\n  },\n  getCurrentLogLevel: function getCurrentLogLevel() {\n    var controlLevel = this.controlLevel();\n\n    var controlLevelIndex = _(allLogLevels).indexOf(controlLevel);\n\n    var levels = controlLevelIndex >= 0 ? _(allLogLevels).first(controlLevelIndex) : allLogLevels;\n    return ['all'].concat(levels.join('-')).join('-');\n  },\n  log: function log()\n  /* varargs */\n  {\n    this._log(arguments, LogLevel.LOG);\n  },\n  debug: function debug()\n  /* varargs */\n  {\n    this._log(arguments, LogLevel.DEBUG);\n  },\n  info: function info()\n  /* varargs */\n  {\n    this._log(arguments, LogLevel.INFO);\n  },\n  warn: function warn()\n  /* varargs */\n  {\n    this._log(arguments, LogLevel.WARN);\n  },\n  error: function error()\n  /* varargs */\n  {\n    this._log(arguments, LogLevel.ERROR);\n  },\n  isLevel: function isLevel(level) {\n    return new RegExp(\"level=\" + level, \"i\").test(window.location.search);\n  },\n  controlLevel: function controlLevel() {\n    var _me = this;\n\n    return _.find(allLogLevels, function (level) {\n      return _me.isLevel(level);\n    });\n  },\n  _log: function _log(messages, level) {\n    try {\n      var now = new Date();\n      var timestamp = (\"0\" + now.getHours()).substr(-2) + \":\" + (\"0\" + now.getMinutes()).substr(-2) + \":\" + (\"0\" + now.getSeconds()).substr(-2) + \".\" + (\"000\" + now.getMilliseconds()).substr(-4);\n      messages[0] = \"[\" + timestamp + \"](\" + level.func.toUpperCase() + \"): \" + messages[0];\n\n      if (window.console && window.console.log) {\n        window.location.search.match(/log=debug/);\n        var currentLogLevel = this.getCurrentLogLevel();\n\n        if (LogLevel.ALL.include(currentLogLevel) && !level.exclude(currentLogLevel) || level.include(currentLogLevel)) {\n          if (typeof window.console[level.func] == 'function') {\n            window.console[level.func].apply(window.console, messages);\n          } else {\n            window.console[level.func](_(messages).toArray().join(\", \"));\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e.stack);\n    } // });\n\n  },\n  pluginLog: function pluginLog(level, filename, line, message) {\n    // if(!mediaController){\n    //     require(['mediaController'], function(_mediaController){\n    //         mediaController = _mediaController;\n    //     });\n    // }\n    try {\n      var pluginLogMessages = [];\n      pluginLogMessages[0] = level.toUpperCase() + '  ♦ ' + '[' + filename + ':' + line + ']' + message[0].replace(/\\s+\\(/g, ' (');\n\n      if (mediaController) {\n        mediaController.pluginLog(pluginLogMessages);\n      }\n    } catch (err) {// Don't do anything\n    }\n  },\n\n  /**\n   * Log levels can be enabled and disabled with meetingParams.LOG_LEVEL, which is\n   *   populated by Rivet and the ?log query paramter\n   * @param levelName {String} a log level name, such as 'info', 'debug', 'log',\n   *   'error', 'warn'\n   * @return {Boolean} true if logging to the given level is allowed, false otherwise\n   *\n   * example: Logger.check('error') => true\n   */\n  check: function check(levelName) {\n    var level = LogLevel[levelName.toUpperCase()];\n    var control = this.controlLevel();\n\n    if (level) {\n      return LogLevel.ALL.include(control) && !level.exclude(control) || level.include(control);\n    } else {\n      return false; //invalid level\n    }\n  },\n\n  /**\n   * Log the given vararg messages to the plugin\n   * Returns the arguments array that should be passed to console.*\n   * Messages will be logged irrespective of the allowed logging levels\n   *   (use Logger.check(level) for that)\n   */\n  prepare: function prepare(level, filename, line, messageArgs) {\n    var messages = _(messageArgs).toArray();\n\n    level = level.toUpperCase();\n    var timestamp = new moment().format(Logger.TIME_FORMAT);\n    messages[0] = timestamp + ' @ ' + (level + '  ').substr(0, 5) + \" \\u2666 \" + messages[0];\n    var filenameAndLineNumberString = \"(\" + filename + \":\" + ('0000' + line).substr(-Math.max(String(line).length, 3)) + \")\";\n\n    if (messages.length > 1) {\n      messages.push(filenameAndLineNumberString);\n    } else {\n      var messageLength = messages[0].length;\n      var paddingLength = Math.max(1, this.getConsoleColumns() - CONSOLE_SUFFIX_LENGTH[browserDetector.browser] - messageLength - filenameAndLineNumberString.length - 1);\n      paddingLength = isNaN(paddingLength) ? 1 : paddingLength;\n      var paddingStr = new Array(paddingLength + 1).join(' ');\n      messages[0] += paddingStr + filenameAndLineNumberString;\n    }\n\n    return messages;\n  },\n  getCurrentTime: function getCurrentTime(format) {\n    var now = new Date();\n    var currentTime = \"\";\n\n    switch (format) {\n      case 'hh:mm:ss.SSSS':\n        currentTime = now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '.' + now.getMilliseconds();\n        break;\n\n      default:\n        console.error(\"Invalid time format passed for log formatting\");\n    }\n\n    return currentTime;\n  },\n  getConsoleColumns: function getConsoleColumns() {\n    var browser = browserDetector.browser;\n    var os = browserDetector.os;\n    var dataPoints = CONSOLE_COLUMNS_DATA[os] && CONSOLE_COLUMNS_DATA[os][browser] ? CONSOLE_COLUMNS_DATA[os][browser] : 0;\n    var windowWidth = window.innerWidth;\n    var slope, columnsAtZeroWidthWindow;\n\n    if (dataPoints) {\n      slope = (dataPoints[0].columns - dataPoints[1].columns) / (dataPoints[0].screenWidth - dataPoints[1].screenWidth);\n      columnsAtZeroWidthWindow = dataPoints[0].columns - slope * dataPoints[0].screenWidth;\n    } else {\n      slope = 0;\n      columnsAtZeroWidthWindow = 0;\n    }\n\n    return Math.floor(slope * windowWidth + columnsAtZeroWidthWindow);\n  }\n});\nmodule.exports = new Logger();\n\n//# sourceURL=webpack:///./src/thirdparty/Logger.js?");

/***/ }),

/***/ "./src/thirdparty/browserDetector.js":
/*!*******************************************!*\
  !*** ./src/thirdparty/browserDetector.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Usage\n *     var browserDetector = require('Utilities/browserDetector');\n *\n *     browserDetector.os\n *         => one of ['mac', 'windows', 'solaris', 'linux', 'bsd']\n *\n *    browserDetector.osVersion\n *        => something like '10.7' or '6.1'\n *\n *     browserDetector.browser\n *         => one of ['firefox', 'chrome', 'safari', 'opera', 'ie']\n *\n *     browserDetector.version\n *         => something like '9.0.2a'\n *\n *     browserDetector.majorVersion\n *         => something like 9\n *\n *    browserDetector.instructionSet\n *         => one of ['x86', 'x86-64']\n *\n *    browserDetector.device\n *        => one of ['workstation', 'android', 'iphone', 'ipad', 'ipod']\n *\n *    browserDetector.cookies\n *        => one of [true, false]\n */\nvar BrowserDetector = function BrowserDetector(userAgent) {\n  userAgent = userAgent || window.navigator.userAgent;\n  this.browser = null;\n  this.os = null;\n  this.osVersion = null;\n  this.version = null;\n  this.majorVersion = null;\n  this.instructionSet = 'x86';\n  this.device = 'workstation';\n  this.cookies = false;\n  var osDetectors = {\n    mac: {\n      is: function is(ua) {\n        return /macintosh/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        var rawVersion = /Mac OS X ([\\d_\\.]+)[;\\)]/i.exec(ua)[1];\n        return rawVersion.replace(/_/g, \".\");\n      }\n    },\n    windows: {\n      is: function is(ua) {\n        return /windows/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return /windows.*?([\\d\\.]+?)[;\\)]/i.exec(ua)[1];\n      }\n    },\n    solaris: {\n      is: function is(ua) {\n        return /sunos/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return \"0\";\n      }\n    },\n    bsd: {\n      is: function is(ua) {\n        return /bsd/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return 0;\n      }\n    },\n    linux: {\n      is: function is(ua) {\n        return /linux/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return \"0\";\n      }\n    }\n  };\n  var browserDetectors = {\n    firefox: {\n      is: function is(ua) {\n        return /firefox/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return /firefox\\/(.+?)(?:\\s|$)/i.exec(ua)[1];\n      },\n      getMajorVersion: function getMajorVersion(version) {\n        return /\\d+/i.exec(version)[0];\n      }\n    },\n    chrome: {\n      is: function is(ua) {\n        return /chrome\\//i.test(ua) && !browserDetectors.edge.is(ua) && !browserDetectors.opera.is(ua); //trailing slash excludes chromeframe/\n      },\n      getVersion: function getVersion(ua) {\n        return /chrome\\/(.+?)(?:\\s|$)/i.exec(ua)[1];\n      },\n      getMajorVersion: function getMajorVersion(version) {\n        return /\\d+/i.exec(version)[0];\n      }\n    },\n    safari: {\n      is: function is(ua) {\n        return /safari/i.test(ua) && !browserDetectors.chrome.is(ua) && !browserDetectors.edge.is(ua) && !browserDetectors.opera.is(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return /version\\/(.+?)(?:\\s|$)/i.exec(ua) ? /version\\/(.+?)(?:\\s|$)/i.exec(ua)[1] : \"6.0\";\n      },\n      getMajorVersion: function getMajorVersion(version) {\n        return /\\d+/i.exec(version)[0];\n      }\n    },\n    ie: {\n      is: function is(ua) {\n        return /msie|Trident/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        // HERE BE DRAGONS\n        // IE compatibility mode can screw us up.  If we have a Trident token,\n        // parse for that. Otherwise, use \"msie\".  Also, Trident comes in\n        // 4.0 (IE8), 5.0 (IE9), or 6.0 (IE10) so add 4 for offset.\n        return ua.indexOf(\"Trident\") != -1 ? \"\" + (parseFloat(/Trident\\/(.+?)[\\);]/i.exec(ua)[1]) + 4) + \".0\" : /msie (.+?);/i.exec(ua)[1];\n      },\n      getMajorVersion: function getMajorVersion(version) {\n        return /\\d+/i.exec(version)[0];\n      },\n      getInstructionSet: function getInstructionSet(ua) {\n        if (/x64;/i.test(ua)) {\n          return 'x86-64';\n        } else {\n          return 'x86';\n        }\n      }\n    },\n    opera: {\n      is: function is(ua) {\n        return /(Opera|OPR)\\/(\\d+(\\.\\d+)?)/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return /OPR\\/(.+?)(?:\\s|$)/i.exec(ua)[1];\n      },\n      getMajorVersion: function getMajorVersion(version) {\n        return /\\d+/i.exec(version)[0];\n      }\n    },\n    edge: {\n      is: function is(ua) {\n        return /Edge/i.test(ua);\n      },\n      getVersion: function getVersion(ua) {\n        return /Edge\\/(.+?)(?:\\s|$)/i.exec(ua)[1];\n      },\n      getMajorVersion: function getMajorVersion(version) {\n        return /\\d+/i.exec(version)[0];\n      }\n    }\n  };\n  var deviceDetectors = {\n    ipad: {\n      is: function is(ua) {\n        return /ipad/i.test(ua);\n      }\n    },\n    ipod: {\n      is: function is(ua) {\n        return /ipod/i.test(ua);\n      }\n    },\n    iphone: {\n      is: function is(ua) {\n        return /iphone/i.test(ua);\n      }\n    },\n    android: {\n      is: function is(ua) {\n        return /android/i.test(ua);\n      }\n    }\n  };\n\n  for (var deviceName in deviceDetectors) {\n    var deviceDetector = deviceDetectors[deviceName];\n\n    if (deviceDetector.is(userAgent)) {\n      this.device = deviceName;\n      break;\n    }\n  }\n\n  for (var osName in osDetectors) {\n    var osDetector = osDetectors[osName];\n\n    if (osDetector.is(userAgent)) {\n      this.os = osName;\n      this.osVersion = osDetector.getVersion(userAgent);\n      break;\n    }\n  }\n\n  for (var browserName in browserDetectors) {\n    var browserDetector = browserDetectors[browserName];\n\n    if (browserDetector.is(userAgent)) {\n      this.browser = browserName;\n      this.version = browserDetector.getVersion(userAgent);\n      this.majorVersion = browserDetector.getMajorVersion(this.version);\n\n      if (browserDetector.getInstructionSet) {\n        this.instructionSet = browserDetector.getInstructionSet(userAgent);\n      }\n\n      break;\n    }\n  }\n  /*this.cookies = (document.cookie.indexOf('csrftoken=') > -1) || (meetingParams.CSRF == \"csrftoken=28f9bacf0028e52b485f8adfb82c159b\");*/\n\n\n  this.cookies = window.navigator.cookieEnabled;\n};\n\nmodule.exports = new BrowserDetector();\n\n//# sourceURL=webpack:///./src/thirdparty/browserDetector.js?");

/***/ }),

/***/ "./src/thirdparty/sdp-utils.js":
/*!*************************************!*\
  !*** ./src/thirdparty/sdp-utils.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n *  Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* More information about these options at jshint.com/docs/options */\n\n/* globals trace */\n\n/* exported setCodecParam, iceCandidateType, maybeSetOpusOptions,\n   maybePreferAudioReceiveCodec, maybePreferAudioSendCodec,\n   maybeSetAudioReceiveBitRate, maybeSetAudioSendBitRate,\n   maybePreferVideoReceiveCodec, maybePreferVideoSendCodec,\n   maybeSetVideoReceiveBitRate, maybeSetVideoSendBitRate,\n   maybeSetVideoSendInitialBitRate, mergeConstraints, removeCodecParam */\n\n\nfunction trace(msg) {}\n\nfunction mergeConstraints(cons1, cons2) {\n  if (!cons1 || !cons2) {\n    return cons1 || cons2;\n  }\n\n  var merged = cons1;\n\n  for (var key in cons2) {\n    merged[key] = cons2[key];\n  }\n\n  return merged;\n}\n\nfunction iceCandidateType(candidateStr) {\n  return candidateStr.split(' ')[7];\n} // Turns the local type preference into a human-readable string.\n// Note that this mapping is browser-specific.\n\n\nfunction formatTypePreference(pref) {\n  if (adapter.browserDetails.browser === 'chrome') {\n    switch (pref) {\n      case 0:\n        return 'TURN/TLS';\n\n      case 1:\n        return 'TURN/TCP';\n\n      case 2:\n        return 'TURN/UDP';\n\n      default:\n        break;\n    }\n  } else if (adapter.browserDetails.browser === 'firefox') {\n    switch (pref) {\n      case 0:\n        return 'TURN/TCP';\n\n      case 5:\n        return 'TURN/UDP';\n\n      default:\n        break;\n    }\n  }\n\n  return '';\n}\n\nfunction maybeSetOpusOptions(sdp, params) {\n  // Set Opus in Stereo, if stereo is true, unset it, if stereo is false, and\n  // do nothing if otherwise.\n  if (params.opusStereo === 'true') {\n    sdp = setCodecParam(sdp, 'opus/48000', 'stereo', '1');\n  } else if (params.opusStereo === 'false') {\n    sdp = removeCodecParam(sdp, 'opus/48000', 'stereo');\n  } // Set Opus FEC, if opusfec is true, unset it, if opusfec is false, and\n  // do nothing if otherwise.\n\n\n  if (params.opusFec === 'true') {\n    sdp = setCodecParam(sdp, 'opus/48000', 'useinbandfec', '1');\n  } else if (params.opusFec === 'false') {\n    sdp = removeCodecParam(sdp, 'opus/48000', 'useinbandfec');\n  } // Set Opus DTX, if opusdtx is true, unset it, if opusdtx is false, and\n  // do nothing if otherwise.\n\n\n  if (params.opusDtx === 'true') {\n    sdp = setCodecParam(sdp, 'opus/48000', 'usedtx', '1');\n  } else if (params.opusDtx === 'false') {\n    sdp = removeCodecParam(sdp, 'opus/48000', 'usedtx');\n  } // Set Opus maxplaybackrate, if requested.\n\n\n  if (params.opusMaxPbr) {\n    sdp = setCodecParam(sdp, 'opus/48000', 'maxplaybackrate', params.opusMaxPbr);\n  }\n\n  return sdp;\n}\n\nfunction maybeSetAudioSendBitRate(sdp, params) {\n  if (!params.audioSendBitrate) {\n    return sdp;\n  }\n\n  trace('Prefer audio send bitrate: ' + params.audioSendBitrate);\n  return preferBitRate(sdp, params.audioSendBitrate, 'audio');\n}\n\nfunction maybeSetAudioReceiveBitRate(sdp, params) {\n  if (!params.audioRecvBitrate) {\n    return sdp;\n  }\n\n  trace('Prefer audio receive bitrate: ' + params.audioRecvBitrate);\n  return preferBitRate(sdp, params.audioRecvBitrate, 'audio');\n}\n\nfunction maybeSetVideoSendBitRate(sdp, params) {\n  if (!params.videoSendBitrate) {\n    return sdp;\n  }\n\n  trace('Prefer video send bitrate: ' + params.videoSendBitrate);\n  return preferBitRate(sdp, params.videoSendBitrate, 'video');\n}\n\nfunction maybeSetVideoReceiveBitRate(sdp, params) {\n  if (!params.videoRecvBitrate) {\n    return sdp;\n  }\n\n  trace('Prefer video receive bitrate: ' + params.videoRecvBitrate);\n  return preferBitRate(sdp, params.videoRecvBitrate, 'video');\n} // Add a b=AS:bitrate line to the m=mediaType section.\n\n\nfunction preferBitRate(sdp, bitrate, mediaType) {\n  var sdpLines = sdp.split('\\r\\n'); // Find m line for the given mediaType.\n\n  var mLineIndex = findLine(sdpLines, 'm=', mediaType);\n\n  if (mLineIndex === null) {\n    trace('Failed to add bandwidth line to sdp, as no m-line found');\n    return sdp;\n  } // Find next m-line if any.\n\n\n  var nextMLineIndex = findLineInRange(sdpLines, mLineIndex + 1, -1, 'm=');\n\n  if (nextMLineIndex === null) {\n    nextMLineIndex = sdpLines.length;\n  } // Find c-line corresponding to the m-line.\n\n\n  var cLineIndex = findLineInRange(sdpLines, mLineIndex + 1, nextMLineIndex, 'c=');\n\n  if (cLineIndex === null) {\n    trace('Failed to add bandwidth line to sdp, as no c-line found');\n    return sdp;\n  } // Check if bandwidth line already exists between c-line and next m-line.\n\n\n  var bLineIndex = findLineInRange(sdpLines, cLineIndex + 1, nextMLineIndex, 'b=AS');\n\n  if (bLineIndex) {\n    sdpLines.splice(bLineIndex, 1);\n  } // Create the b (bandwidth) sdp line.\n\n\n  var bwLine = 'b=AS:' + bitrate; // As per RFC 4566, the b line should follow after c-line.\n\n  sdpLines.splice(cLineIndex + 1, 0, bwLine);\n  sdp = sdpLines.join('\\r\\n');\n  return sdp;\n} // Add an a=fmtp: x-google-min-bitrate=kbps line, if videoSendInitialBitrate\n// is specified. We'll also add a x-google-min-bitrate value, since the max\n// must be >= the min.\n\n\nfunction maybeSetVideoSendInitialBitRate(sdp, params) {\n  var initialBitrate = params.videoSendInitialBitrate;\n\n  if (!initialBitrate) {\n    return sdp;\n  } // Validate the initial bitrate value.\n\n\n  var maxBitrate = initialBitrate;\n  var bitrate = params.videoSendBitrate;\n\n  if (bitrate) {\n    if (initialBitrate > bitrate) {\n      trace('Clamping initial bitrate to max bitrate of ' + bitrate + ' kbps.');\n      initialBitrate = bitrate;\n      params.videoSendInitialBitrate = initialBitrate;\n    }\n\n    maxBitrate = bitrate;\n  }\n\n  var sdpLines = sdp.split('\\r\\n'); // Search for m line.\n\n  var mLineIndex = findLine(sdpLines, 'm=', 'video');\n\n  if (mLineIndex === null) {\n    trace('Failed to find video m-line');\n    return sdp;\n  }\n\n  var codec = params.videoRecvCodec;\n  sdp = setCodecParam(sdp, codec, 'x-google-min-bitrate', params.videoSendInitialBitrate.toString());\n  sdp = setCodecParam(sdp, codec, 'x-google-max-bitrate', maxBitrate.toString());\n  return sdp;\n}\n\nfunction removePayloadTypeFromMline(mLine, payloadType) {\n  mLine = mLine.split(' ');\n\n  for (var i = 0; i < mLine.length; ++i) {\n    if (mLine[i] === payloadType.toString()) {\n      mLine.splice(i, 1);\n    }\n  }\n\n  return mLine.join(' ');\n}\n\nfunction removeCodecByName(sdpLines, codec) {\n  var index = findLine(sdpLines, 'a=rtpmap', codec);\n\n  if (index === null) {\n    return sdpLines;\n  }\n\n  var payloadType = getCodecPayloadTypeFromLine(sdpLines[index]);\n  sdpLines.splice(index, 1); // Search for the video m= line and remove the codec.\n\n  var mLineIndex = findLine(sdpLines, 'm=', 'video');\n\n  if (mLineIndex === null) {\n    return sdpLines;\n  }\n\n  sdpLines[mLineIndex] = removePayloadTypeFromMline(sdpLines[mLineIndex], payloadType);\n  return sdpLines;\n}\n\nfunction removeCodecByPayloadType(sdpLines, payloadType) {\n  var index = findLine(sdpLines, 'a=rtpmap', payloadType.toString());\n\n  if (index === null) {\n    return sdpLines;\n  }\n\n  sdpLines.splice(index, 1); // Search for the video m= line and remove the codec.\n\n  var mLineIndex = findLine(sdpLines, 'm=', 'video');\n\n  if (mLineIndex === null) {\n    return sdpLines;\n  }\n\n  sdpLines[mLineIndex] = removePayloadTypeFromMline(sdpLines[mLineIndex], payloadType);\n  return sdpLines;\n}\n\nfunction maybeRemoveVideoFec(sdp, params) {\n  if (params.videoFec !== 'false') {\n    return sdp;\n  }\n\n  var sdpLines = sdp.split('\\r\\n');\n  var index = findLine(sdpLines, 'a=rtpmap', 'red');\n\n  if (index === null) {\n    return sdp;\n  }\n\n  var redPayloadType = getCodecPayloadTypeFromLine(sdpLines[index]);\n  sdpLines = removeCodecByPayloadType(sdpLines, redPayloadType);\n  sdpLines = removeCodecByName(sdpLines, 'ulpfec'); // Remove fmtp lines associated with red codec.\n\n  index = findLine(sdpLines, 'a=fmtp', redPayloadType.toString());\n\n  if (index === null) {\n    return sdp;\n  }\n\n  var fmtpLine = parseFmtpLine(sdpLines[index]);\n  var rtxPayloadType = fmtpLine.pt;\n\n  if (rtxPayloadType === null) {\n    return sdp;\n  }\n\n  sdpLines.splice(index, 1);\n  sdpLines = removeCodecByPayloadType(sdpLines, rtxPayloadType);\n  return sdpLines.join('\\r\\n');\n} // Promotes |audioSendCodec| to be the first in the m=audio line, if set.\n\n\nfunction maybePreferAudioSendCodec(sdp, params) {\n  return maybePreferCodec(sdp, 'audio', 'send', params.audioSendCodec);\n} // Promotes |audioRecvCodec| to be the first in the m=audio line, if set.\n\n\nfunction maybePreferAudioReceiveCodec(sdp, params) {\n  return maybePreferCodec(sdp, 'audio', 'receive', params.audioRecvCodec);\n} // Promotes |videoSendCodec| to be the first in the m=audio line, if set.\n\n\nfunction maybePreferVideoSendCodec(sdp, params) {\n  return maybePreferCodec(sdp, 'video', 'send', params.videoSendCodec);\n} // Promotes |videoRecvCodec| to be the first in the m=audio line, if set.\n\n\nfunction maybePreferVideoReceiveCodec(sdp, params) {\n  return maybePreferCodec(sdp, 'video', 'receive', params.videoRecvCodec);\n} // Sets |codec| as the default |type| codec if it's present.\n// The format of |codec| is 'NAME/RATE', e.g. 'opus/48000'.\n\n\nfunction maybePreferCodec(sdp, type, dir, codec) {\n  var str = type + ' ' + dir + ' codec';\n\n  if (!codec) {\n    trace('No preference on ' + str + '.');\n    return sdp;\n  }\n\n  trace('Prefer ' + str + ': ' + codec);\n  var sdpLines = sdp.split('\\r\\n'); // Search for m line.\n\n  var mLineIndex = findLine(sdpLines, 'm=', type);\n\n  if (mLineIndex === null) {\n    return sdp;\n  } // If the codec is available, set it as the default in m line.\n\n\n  var payload = getCodecPayloadType(sdpLines, codec);\n\n  if (payload) {\n    sdpLines[mLineIndex] = setDefaultCodec(sdpLines[mLineIndex], payload);\n  }\n\n  sdp = sdpLines.join('\\r\\n');\n  return sdp;\n} // Set fmtp param to specific codec in SDP. If param does not exists, add it.\n\n\nfunction setCodecParam(sdp, codec, param, value) {\n  var sdpLines = sdp.split('\\r\\n');\n  var fmtpLineIndex = findFmtpLine(sdpLines, codec);\n  var fmtpObj = {};\n\n  if (fmtpLineIndex === null) {\n    var index = findLine(sdpLines, 'a=rtpmap', codec);\n\n    if (index === null) {\n      return sdp;\n    }\n\n    var payload = getCodecPayloadTypeFromLine(sdpLines[index]);\n    fmtpObj.pt = payload.toString();\n    fmtpObj.params = {};\n    fmtpObj.params[param] = value;\n    sdpLines.splice(index + 1, 0, writeFmtpLine(fmtpObj));\n  } else {\n    fmtpObj = parseFmtpLine(sdpLines[fmtpLineIndex]);\n    fmtpObj.params[param] = value;\n    sdpLines[fmtpLineIndex] = writeFmtpLine(fmtpObj);\n  }\n\n  sdp = sdpLines.join('\\r\\n');\n  return sdp;\n} // Remove fmtp param if it exists.\n\n\nfunction removeCodecParam(sdp, codec, param) {\n  var sdpLines = sdp.split('\\r\\n');\n  var fmtpLineIndex = findFmtpLine(sdpLines, codec);\n\n  if (fmtpLineIndex === null) {\n    return sdp;\n  }\n\n  var map = parseFmtpLine(sdpLines[fmtpLineIndex]);\n  delete map.params[param];\n  var newLine = writeFmtpLine(map);\n\n  if (newLine === null) {\n    sdpLines.splice(fmtpLineIndex, 1);\n  } else {\n    sdpLines[fmtpLineIndex] = newLine;\n  }\n\n  sdp = sdpLines.join('\\r\\n');\n  return sdp;\n} // Split an fmtp line into an object including 'pt' and 'params'.\n\n\nfunction parseFmtpLine(fmtpLine) {\n  var fmtpObj = {};\n  var spacePos = fmtpLine.indexOf(' ');\n  var keyValues = fmtpLine.substring(spacePos + 1).split('; ');\n  var pattern = new RegExp('a=fmtp:(\\\\d+)');\n  var result = fmtpLine.match(pattern);\n\n  if (result && result.length === 2) {\n    fmtpObj.pt = result[1];\n  } else {\n    return null;\n  }\n\n  var params = {};\n\n  for (var i = 0; i < keyValues.length; ++i) {\n    var pair = keyValues[i].split('=');\n\n    if (pair.length === 2) {\n      params[pair[0]] = pair[1];\n    }\n  }\n\n  fmtpObj.params = params;\n  return fmtpObj;\n} // Generate an fmtp line from an object including 'pt' and 'params'.\n\n\nfunction writeFmtpLine(fmtpObj) {\n  if (!fmtpObj.hasOwnProperty('pt') || !fmtpObj.hasOwnProperty('params')) {\n    return null;\n  }\n\n  var pt = fmtpObj.pt;\n  var params = fmtpObj.params;\n  var keyValues = [];\n  var i = 0;\n\n  for (var key in params) {\n    keyValues[i] = key + '=' + params[key];\n    ++i;\n  }\n\n  if (i === 0) {\n    return null;\n  }\n\n  return 'a=fmtp:' + pt.toString() + ' ' + keyValues.join('; ');\n} // Find fmtp attribute for |codec| in |sdpLines|.\n\n\nfunction findFmtpLine(sdpLines, codec) {\n  // Find payload of codec.\n  var payload = getCodecPayloadType(sdpLines, codec); // Find the payload in fmtp line.\n\n  return payload ? findLine(sdpLines, 'a=fmtp:' + payload.toString()) : null;\n} // Find the line in sdpLines that starts with |prefix|, and, if specified,\n// contains |substr| (case-insensitive search).\n\n\nfunction findLine(sdpLines, prefix, substr) {\n  return findLineInRange(sdpLines, 0, -1, prefix, substr);\n} // Find the line in sdpLines[startLine...endLine - 1] that starts with |prefix|\n// and, if specified, contains |substr| (case-insensitive search).\n\n\nfunction findLineInRange(sdpLines, startLine, endLine, prefix, substr) {\n  var realEndLine = endLine !== -1 ? endLine : sdpLines.length;\n\n  for (var i = startLine; i < realEndLine; ++i) {\n    if (sdpLines[i].indexOf(prefix) === 0) {\n      if (!substr || sdpLines[i].toLowerCase().indexOf(substr.toLowerCase()) !== -1) {\n        return i;\n      }\n    }\n  }\n\n  return null;\n} // Gets the codec payload type from sdp lines.\n\n\nfunction getCodecPayloadType(sdpLines, codec) {\n  var index = findLine(sdpLines, 'a=rtpmap', codec);\n  return index ? getCodecPayloadTypeFromLine(sdpLines[index]) : null;\n} // Gets the codec payload type from an a=rtpmap:X line.\n\n\nfunction getCodecPayloadTypeFromLine(sdpLine) {\n  var pattern = new RegExp('a=rtpmap:(\\\\d+) [a-zA-Z0-9-]+\\\\/\\\\d+');\n  var result = sdpLine.match(pattern);\n  return result && result.length === 2 ? result[1] : null;\n} // Returns a new m= line with the specified codec as the first one.\n\n\nfunction setDefaultCodec(mLine, payload) {\n  var elements = mLine.split(' '); // Just copy the first three parameters; codec order starts on fourth.\n\n  var newLine = elements.slice(0, 3); // Put target payload first and copy in the rest.\n\n  newLine.push(payload);\n\n  for (var i = 3; i < elements.length; i++) {\n    if (elements[i] !== payload) {\n      newLine.push(elements[i]);\n    }\n  }\n\n  return newLine.join(' ');\n}\n\nfunction maybeSetTrickleIceAttr(sdp) {\n  var sdpLines = sdp.split('\\r\\n'); //Look for the first m line in sdp\n\n  var mLineIndex = findLine; // Search for m line.\n\n  var mLineIndex = findLine(sdpLines, 'm=');\n\n  if (mLineIndex === null) {\n    return sdp;\n  } //Check if a=ice-options:trickle is already present in SDP\n\n\n  var trickleIndex = findLineInRange(sdpLines, 0, mLineIndex, 'a=ice-options', 'trickle');\n\n  if (trickleIndex) {\n    return sdp;\n  } //Tricke ice attribute is not founud, add it before the m-line\n  // Create the b (bandwidth) sdp line.\n\n\n  var trickleIceLine = 'a=ice-options:trickle'; // As per RFC 4566, the b line should follow after c-line.\n\n  sdpLines.splice(mLineIndex - 1, 0, trickleIceLine);\n  sdp = sdpLines.join('\\r\\n');\n  return sdp;\n}\n\nfunction maybeReplaceVideoPortNumber(sdp, portNumber) {\n  var sdpLines = sdp.split('\\r\\n'); // Search for the video m= line and remove the codec.\n\n  var mLineIndex = findLine(sdpLines, 'm=', 'video 0');\n\n  if (mLineIndex === null) {\n    return sdpLines.join('\\r\\n');\n  }\n\n  sdpLines[mLineIndex] = replacePayloadTypeFromMline(sdpLines[mLineIndex], portNumber);\n  return sdpLines.join('\\r\\n');\n}\n\nfunction replacePayloadTypeFromMline(mLine, portNumber) {\n  mLine = mLine.split(' ');\n  mLine[1] = portNumber;\n  return mLine.join(' ');\n} // Remove codec from SDP\n\n\nfunction maybeRemoveCodecFromSDP(sdp, codec) {\n  var sdpLines = sdp.split('\\r\\n'); //Look for video m line\n\n  var mLineIndex = findLine(sdpLines, 'm=video');\n\n  if (mLineIndex === null) {\n    return sdp;\n  }\n\n  if (sdpLines[mLineIndex].search(codec) == -1) {\n    return sdp;\n  } //Remove codec from m=video line\n\n\n  sdpLines[mLineIndex] = sdpLines[mLineIndex].replace(' ' + codec, ''); // Look for rtpmap attribute and remove it from sdp\n\n  var rtpmapLine = findLine(sdpLines, 'a=rtpmap:' + codec);\n  if (rtpmapLine) sdpLines.splice(rtpmapLine, 1); //check for a=fmtp attributes for the codec and remove them from sdp\n\n  var fmtpLine = findLine(sdpLines, 'a=fmtp:' + codec);\n\n  if (fmtpLine) {\n    sdpLines.splice(fmtpLine, 1);\n  }\n\n  sdp = sdpLines.join('\\r\\n');\n  return sdp;\n}\n\nvar SdpUtils = {\n  setDefaultCodec: setDefaultCodec,\n  setCodecParam: setCodecParam,\n  maybeSetOpusOptions: maybeSetOpusOptions,\n  maybePreferCodec: maybePreferCodec,\n  maybePreferVideoReceiveCodec: maybePreferVideoReceiveCodec,\n  maybePreferVideoSendCodec: maybePreferVideoSendCodec,\n  maybePreferAudioReceiveCodec: maybePreferAudioReceiveCodec,\n  maybePreferAudioSendCodec: maybePreferAudioSendCodec,\n  maybeSetVideoReceiveBitRate: maybeSetVideoReceiveBitRate,\n  maybeSetVideoSendBitRate: maybeSetVideoSendBitRate,\n  maybeSetAudioReceiveBitRate: maybeSetAudioReceiveBitRate,\n  maybeSetAudioSendBitRate: maybeSetAudioSendBitRate,\n  maybeSetVideoSendInitialBitRate: maybeSetVideoSendInitialBitRate,\n  maybeSetTrickleIceAttr: maybeSetTrickleIceAttr,\n  maybeRemoveVideoFec: maybeRemoveVideoFec,\n  maybeReplaceVideoPortNumber: maybeReplaceVideoPortNumber,\n  maybeRemoveCodecFromSDP: maybeRemoveCodecFromSDP\n};\nmodule.exports = SdpUtils;\n\n//# sourceURL=webpack:///./src/thirdparty/sdp-utils.js?");

/***/ }),

/***/ "./src/thirdparty/state_machine.js":
/*!*****************************************!*\
  !*** ./src/thirdparty/state_machine.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var lodash = __webpack_require__(/*! lodash */ \"./node_modules/underscore/underscore.js\");\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw message || \"Assertion failed\";\n  }\n}\n\nvar transitionCallback = function transitionCallback(options, callback) {\n  return {\n    call: function call(from, to) {\n      if ((options.from === undefined || options.from === from) && (options.to === undefined || options.to === to)) {\n        callback({\n          from: from,\n          to: to\n        });\n      }\n    }\n  };\n};\n\nvar transitions = {\n  transition: function transition(options) {\n    return function (stateMachine, updateState) {\n      var applicableOption = Array.isArray(options) ? lodash.find(options, function (option) {\n        return option.from == stateMachine.getState();\n      }) : options;\n\n      if (applicableOption && applicableOption.from !== undefined) {\n        if (stateMachine.getState() == applicableOption.from || lodash.include(applicableOption.from, stateMachine.getState())) {\n          updateState(stateMachine.getState(), applicableOption.to, applicableOption.resetTriggers);\n          return true;\n        }\n      }\n    };\n  },\n  afterTransition: function afterTransition(options, callback) {\n    return lodash.extend(transitionCallback(options, callback), {\n      beforeTransition: false\n    });\n  },\n  beforeTransition: function beforeTransition(options, callback) {\n    return lodash.extend(transitionCallback(options, callback), {\n      beforeTransition: true\n    });\n  }\n};\nvar triggers = {\n  anyOf: function anyOf(triggers) {\n    return {\n      isFulfilled: function isFulfilled(activatedTriggers) {\n        return !lodash.isEmpty(this.matchingTriggers(activatedTriggers));\n      },\n      matchingTriggers: function matchingTriggers(activatedTriggers) {\n        return lodash.intersection(triggers, activatedTriggers);\n      }\n    };\n  },\n  allOf: function allOf(triggers) {\n    return {\n      isFulfilled: function isFulfilled(activatedTriggers) {\n        return lodash.isEmpty(lodash.difference(this.matchingTriggers(activatedTriggers), activatedTriggers));\n      },\n      matchingTriggers: function matchingTriggers() {\n        return triggers;\n      }\n    };\n  }\n};\n\nvar createStateMachine = function createStateMachine(options) {\n  assert(options.initial !== undefined, \"initial state is mandatory\");\n  var stateMachine = {};\n  stateMachine.events = options.events;\n  stateMachine.triggers = options.triggers;\n  stateMachine.callbacks = options.callbacks;\n  var stateMachinePrivateState = {\n    state: options.initial,\n    activatedTriggers: []\n  };\n\n  function fireCallbacks(callbacks, from, to) {\n    if (callbacks) {\n      lodash.each(callbacks, function (callback) {\n        callback.call(from, to);\n      });\n    }\n  }\n\n  var updateState = function updateState(from, to, resetTriggers) {\n    var callbacks = lodash.groupBy(stateMachine.callbacks, function (callback) {\n      return callback.beforeTransition === true;\n    });\n    var beforeCallbacks = callbacks[true];\n\n    if (beforeCallbacks) {\n      fireCallbacks(beforeCallbacks, from, to);\n    }\n\n    stateMachinePrivateState.state = to;\n    var afterCallbacks = callbacks[false];\n\n    if (afterCallbacks) {\n      fireCallbacks(afterCallbacks, from, to);\n    }\n\n    if (resetTriggers === true) {\n      stateMachinePrivateState.activatedTriggers = [];\n    }\n  };\n\n  stateMachine.getState = function () {\n    return stateMachinePrivateState.state;\n  };\n\n  lodash.each(lodash.keys(stateMachine.events), function (eventName) {\n    var eventTransition = options.events[eventName];\n    assert(eventTransition !== undefined);\n\n    stateMachine[eventName] = function () {\n      return eventTransition(stateMachine, updateState);\n    };\n  });\n\n  function processTriggers() {\n    var fulfilledActivatedTriggers = {};\n    lodash.each(stateMachine.triggers, function (trigger) {\n      var fulfilled = trigger.activatedBy.isFulfilled(stateMachinePrivateState.activatedTriggers);\n\n      if (fulfilled) {\n        if (stateMachine[trigger.event]()) {\n          var matchingTriggers = trigger.activatedBy.matchingTriggers(stateMachinePrivateState.activatedTriggers);\n          stateMachinePrivateState.activatedTriggers = lodash.difference(stateMachinePrivateState.activatedTriggers, matchingTriggers);\n        }\n      }\n    });\n  }\n\n  stateMachine.trigger = function (triggerName) {\n    stateMachinePrivateState.activatedTriggers.push(triggerName);\n    processTriggers();\n  };\n\n  return stateMachine;\n}; //noinspection JSUnresolvedVariable\n\n\nmodule.exports = {\n  create: createStateMachine,\n  transitions: transitions,\n  triggers: triggers\n};\n\n//# sourceURL=webpack:///./src/thirdparty/state_machine.js?");

/***/ }),

/***/ 0:
/*!********************!*\
  !*** ws (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///ws_(ignored)?");

/***/ })

/******/ });